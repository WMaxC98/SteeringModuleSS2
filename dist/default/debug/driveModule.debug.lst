

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 30 11:24:13 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99  0000                     
   100                           ; Version 2.35
   101                           ; Generated 05/05/2021 GMT
   102                           ; 
   103                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F26K83 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   137  0000                     
   138 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   139  0000                     
   140 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   141  0000                     _COMSTATbits	set	16272
   142  0000                     _RXB1SIDH	set	14321
   143  0000                     _RXB1SIDL	set	14322
   144  0000                     _RXB0D7	set	16269
   145  0000                     _RXB0D6	set	16268
   146  0000                     _RXB0D5	set	16267
   147  0000                     _RXB0D4	set	16266
   148  0000                     _RXB0D3	set	16265
   149  0000                     _RXB0D2	set	16264
   150  0000                     _RXB0D1	set	16263
   151  0000                     _RXB0D0	set	16262
   152  0000                     _RXB0DLC	set	16261
   153  0000                     _RXB0SIDH	set	16257
   154  0000                     _RXB0EIDL	set	16260
   155  0000                     _RXB0EIDH	set	16259
   156  0000                     _RXB0SIDL	set	16258
   157  0000                     _TXB2SIDL	set	14274
   158  0000                     _TXB2SIDH	set	14273
   159  0000                     _TXB2EIDH	set	14275
   160  0000                     _TXB2CONbits	set	14272
   161  0000                     _TXB1SIDL	set	14290
   162  0000                     _TXB1SIDH	set	14289
   163  0000                     _TXB1EIDH	set	14291
   164  0000                     _TXB1CONbits	set	14288
   165  0000                     _TXB0SIDL	set	14306
   166  0000                     _TXB0SIDH	set	14305
   167  0000                     _TXB0EIDH	set	14307
   168  0000                     _TXB0CONbits	set	14304
   169  0000                     _ECANCON	set	16273
   170  0000                     _NVMADRL	set	14816
   171  0000                     _NVMADRH	set	14817
   172  0000                     _NVMCON1bits	set	14821
   173  0000                     _OSCTUNE	set	14814
   174  0000                     _OSCFRQ	set	14815
   175  0000                     _LATA	set	16314
   176  0000                     _T0CON0	set	16312
   177  0000                     _RXF5SIDL	set	14261
   178  0000                     _RXF5SIDH	set	14260
   179  0000                     _RXF5EIDL	set	14263
   180  0000                     _RXF5EIDH	set	14262
   181  0000                     _RXF4SIDL	set	14257
   182  0000                     _RXF4SIDH	set	14256
   183  0000                     _RXF4EIDL	set	14259
   184  0000                     _RXF4EIDH	set	14258
   185  0000                     _RXF3SIDL	set	14253
   186  0000                     _RXF3SIDH	set	14252
   187  0000                     _RXF3EIDL	set	14255
   188  0000                     _RXF3EIDH	set	14254
   189  0000                     _RXF2SIDL	set	14249
   190  0000                     _RXF2SIDH	set	14248
   191  0000                     _RXF2EIDL	set	14251
   192  0000                     _RXF2EIDH	set	14250
   193  0000                     _RXM1SIDL	set	14269
   194  0000                     _RXM1SIDH	set	14268
   195  0000                     _RXM1EIDL	set	14271
   196  0000                     _RXM1EIDH	set	14270
   197  0000                     _RXF1SIDL	set	14245
   198  0000                     _RXF1SIDH	set	14244
   199  0000                     _RXF1EIDL	set	14247
   200  0000                     _RXF1EIDH	set	14246
   201  0000                     _RXF0SIDL	set	14241
   202  0000                     _RXF0EIDL	set	14243
   203  0000                     _RXM0SIDL	set	14265
   204  0000                     _RXM0EIDL	set	14267
   205                           
   206                           	psect	nvCOMRAM
   207  000031                     __pnvCOMRAM:
   208                           	callstack 0
   209  000031                     _TMR0_InterruptHandler:
   210                           	callstack 0
   211  000031                     	ds	2
   212                           
   213                           	psect	nvBANK0
   214  0000F2                     __pnvBANK0:
   215                           	callstack 0
   216  0000F2                     _UART1_ErrorHandler:
   217                           	callstack 0
   218  0000F2                     	ds	2
   219  0000F4                     _UART1_OverrunErrorHandler:
   220                           	callstack 0
   221  0000F4                     	ds	2
   222  0000F6                     _UART1_FramingErrorHandler:
   223                           	callstack 0
   224  0000F6                     	ds	2
   225  0000                     _U1ERRIRbits	set	15865
   226  0000                     _U1CON0bits	set	15858
   227  0000                     _LATB	set	16315
   228  0000                     _T0CON0bits	set	16312
   229  0000                     _BRGCON1	set	14083
   230  0000                     _CIOCON	set	14080
   231  0000                     _PIE3bits	set	14739
   232  0000                     _PIE5bits	set	14741
   233  0000                     _LATBbits	set	16315
   234  0000                     _PORTCbits	set	16332
   235  0000                     _RXF0SIDH	set	14240
   236  0000                     _RXF0EIDH	set	14242
   237  0000                     _RXM0SIDH	set	14264
   238  0000                     _RXM0EIDH	set	14266
   239  0000                     _INTCON0bits	set	16338
   240  0000                     _TRISA	set	16322
   241  0000                     _LATC	set	16316
   242  0000                     _TABLAT	set	16373
   243  0000                     _TBLPTRL	set	16374
   244  0000                     _TBLPTRH	set	16375
   245  0000                     _TBLPTRU	set	16376
   246  0000                     _PIR0bits	set	14752
   247  0000                     _PIR3bits	set	14755
   248  0000                     _PIR5bits	set	14757
   249  0000                     _PMD0	set	14784
   250  0000                     _OSCCON1	set	14809
   251  0000                     _RB2PPS	set	14858
   252  0000                     _ANSELA	set	14912
   253  0000                     _ANSELB	set	14928
   254  0000                     _ANSELC	set	14944
   255  0000                     _TMR0L	set	16310
   256  0000                     _TMR0H	set	16311
   257  0000                     _T0CON1	set	16313
   258  0000                     _TRISC	set	16324
   259  0000                     _TRISB	set	16323
   260  0000                     _INLVLC	set	14948
   261  0000                     _SLRCONC	set	14947
   262  0000                     _ODCONC	set	14946
   263  0000                     _WPUC	set	14945
   264  0000                     _WPUE	set	14977
   265  0000                     _INLVLB	set	14932
   266  0000                     _SLRCONB	set	14931
   267  0000                     _ODCONB	set	14930
   268  0000                     _WPUB	set	14929
   269  0000                     _INLVLA	set	14916
   270  0000                     _SLRCONA	set	14915
   271  0000                     _ODCONA	set	14914
   272  0000                     _WPUA	set	14913
   273  0000                     _INLVLE	set	14980
   274  0000                     _U1RXPPS	set	15079
   275  0000                     _CANRXPPS	set	15085
   276  0000                     _RC6PPS	set	14870
   277  0000                     _U1RXB	set	15848
   278  0000                     _U1P1L	set	15852
   279  0000                     _RXB0CONbits	set	16256
   280  0000                     _CANSTAT	set	16270
   281  0000                     _CANCON	set	16271
   282  0000                     _OSCCON3	set	14811
   283  0000                     _OSCEN	set	14813
   284  0000                     _PMD7	set	14791
   285  0000                     _PMD6	set	14790
   286  0000                     _PMD5	set	14789
   287  0000                     _PMD4	set	14788
   288  0000                     _PMD3	set	14787
   289  0000                     _PMD2	set	14786
   290  0000                     _PMD1	set	14785
   291  0000                     _NVMCON2	set	14822
   292  0000                     _NVMDAT	set	14819
   293  0000                     _BRGCON3	set	14085
   294  0000                     _BRGCON2	set	14084
   295  0000                     _RXB1CONbits	set	14320
   296  0000                     _TXB0D7	set	14317
   297  0000                     _TXB0D6	set	14316
   298  0000                     _TXB0D5	set	14315
   299  0000                     _TXB0D4	set	14314
   300  0000                     _TXB0D3	set	14313
   301  0000                     _TXB0D2	set	14312
   302  0000                     _TXB0D1	set	14311
   303  0000                     _TXB0D0	set	14310
   304  0000                     _TXB0DLC	set	14309
   305  0000                     _TXB0EIDL	set	14308
   306  0000                     _TXB1D7	set	14301
   307  0000                     _TXB1D6	set	14300
   308  0000                     _TXB1D5	set	14299
   309  0000                     _TXB1D4	set	14298
   310  0000                     _TXB1D3	set	14297
   311  0000                     _TXB1D2	set	14296
   312  0000                     _TXB1D1	set	14295
   313  0000                     _TXB1D0	set	14294
   314  0000                     _TXB1DLC	set	14293
   315  0000                     _TXB1EIDL	set	14292
   316  0000                     _TXB2D7	set	14285
   317  0000                     _TXB2D6	set	14284
   318  0000                     _TXB2D5	set	14283
   319  0000                     _TXB2D4	set	14282
   320  0000                     _TXB2D3	set	14281
   321  0000                     _TXB2D2	set	14280
   322  0000                     _TXB2D1	set	14279
   323  0000                     _TXB2D0	set	14278
   324  0000                     _TXB2DLC	set	14277
   325  0000                     _TXB2EIDL	set	14276
   326  0000                     _RXB1D7	set	14333
   327  0000                     _RXB1D6	set	14332
   328  0000                     _RXB1D5	set	14331
   329  0000                     _RXB1D4	set	14330
   330  0000                     _RXB1D3	set	14329
   331  0000                     _RXB1D2	set	14328
   332  0000                     _RXB1D1	set	14327
   333  0000                     _RXB1D0	set	14326
   334  0000                     _RXB1DLC	set	14325
   335  0000                     _RXB1EIDL	set	14324
   336  0000                     _RXB1EIDH	set	14323
   337  0000                     _U1ERRIE	set	15866
   338  0000                     _U1ERRIR	set	15865
   339  0000                     _U1UIR	set	15864
   340  0000                     _U1FIFO	set	15863
   341  0000                     _U1BRGH	set	15862
   342  0000                     _U1BRGL	set	15861
   343  0000                     _U1CON2	set	15860
   344  0000                     _U1CON1	set	15859
   345  0000                     _U1CON0	set	15858
   346  0000                     _U1P3H	set	15857
   347  0000                     _U1P3L	set	15856
   348  0000                     _U1P2H	set	15855
   349  0000                     _U1P2L	set	15854
   350  0000                     _U1P1H	set	15853
   351  0000                     _U1TXB	set	15850
   352                           
   353                           ; #config settings
   354                           
   355                           	psect	cinit
   356  0027AE                     __pcinit:
   357                           	callstack 0
   358  0027AE                     start_initialization:
   359                           	callstack 0
   360  0027AE                     __initialization:
   361                           	callstack 0
   362                           
   363                           ; Clear objects allocated to BIGRAM (318 bytes)
   364  0027AE  EE00  F0F8         	lfsr	0,__pbssBIGRAM
   365  0027B2  EE10 F13E          	lfsr	1,318
   366  0027B6                     clear_0:
   367  0027B6  6AEE               	clrf	postinc0,c
   368  0027B8  50E5               	movf	postdec1,w,c
   369  0027BA  50E1               	movf	fsr1l,w,c
   370  0027BC  E1FC               	bnz	clear_0
   371  0027BE  50E2               	movf	fsr1h,w,c
   372  0027C0  E1FA               	bnz	clear_0
   373                           
   374                           ; Clear objects allocated to BANK0 (30 bytes)
   375  0027C2  EE00  F0D4         	lfsr	0,__pbssBANK0
   376  0027C6  0E1E               	movlw	30
   377  0027C8                     clear_1:
   378  0027C8  6AEE               	clrf	postinc0,c
   379  0027CA  06E8               	decf	wreg,f,c
   380  0027CC  E1FD               	bnz	clear_1
   381                           
   382                           ;
   383                           ; Setup IVTBASE
   384                           ;
   385  0027CE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   386  0027D0  6ED5               	movwf	213,c
   387  0027D2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   388  0027D4  6ED6               	movwf	214,c
   389  0027D6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   390  0027D8  6ED7               	movwf	215,c
   391  0027DA                     end_of_initialization:
   392                           	callstack 0
   393  0027DA                     __end_of__initialization:
   394                           	callstack 0
   395  0027DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   396  0027DC  6EF8               	movwf	tblptru,c
   397  0027DE  0100               	movlb	0
   398  0027E0  EF25  F014         	goto	_main	;jump to C main() function
   399                           
   400                           	psect	bssBANK0
   401  0000D4                     __pbssBANK0:
   402                           	callstack 0
   403  0000D4                     _uart1RxLastError:
   404                           	callstack 0
   405  0000D4                     	ds	1
   406  0000D5                     _theFactory:
   407                           	callstack 0
   408  0000D5                     	ds	29
   409                           
   410                           	psect	bssBIGRAM
   411  0000F8                     __pbssBIGRAM:
   412                           	callstack 0
   413  0000F8                     _theXF:
   414                           	callstack 0
   415  0000F8                     	ds	318
   416                           
   417                           	psect	cstackBANK0
   418  000060                     __pcstackBANK0:
   419                           	callstack 0
   420  000060                     ?_l:
   421                           	callstack 0
   422  000060                     ?_b:
   423                           	callstack 0
   424  000060                     ?_bsm:
   425                           	callstack 0
   426  000060                     ?_blc:
   427                           	callstack 0
   428  000060                     ?_cc:
   429                           	callstack 0
   430  000060                     ?_Event_getDelay:
   431                           	callstack 0
   432  000060                     ?___wmul:
   433                           	callstack 0
   434  000060                     ?___awmod:
   435                           	callstack 0
   436  000060                     ?_convertReg2ExtendedCANid:
   437                           	callstack 0
   438  000060                     ?_convertReg2StandardCANid:
   439                           	callstack 0
   440  000060                     ?_Event_getData:
   441                           	callstack 0
   442  000060                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   443                           	callstack 0
   444  000060                     convertReg2StandardCANid@tempRXBn_SIDL:
   445                           	callstack 0
   446  000060                     ENTERCRITICAL@inISR:
   447                           	callstack 0
   448  000060                     LEAVECRITICAL@inISR:
   449                           	callstack 0
   450  000060                     Button_read@me:
   451                           	callstack 0
   452  000060                     Button_getId@me:
   453                           	callstack 0
   454  000060                     storeSetup@me:
   455                           	callstack 0
   456  000060                     sendAliveFrame@me:
   457                           	callstack 0
   458  000060                     sendSpeedFrame@me:
   459                           	callstack 0
   460  000060                     setPower@me:
   461                           	callstack 0
   462  000060                     setBrake@me:
   463                           	callstack 0
   464  000060                     TMR0_SetInterruptHandler@InterruptHandler:
   465                           	callstack 0
   466  000060                     UART1_SetFramingErrorHandler@interruptHandler:
   467                           	callstack 0
   468  000060                     UART1_SetOverrunErrorHandler@interruptHandler:
   469                           	callstack 0
   470  000060                     UART1_SetErrorHandler@interruptHandler:
   471                           	callstack 0
   472  000060                     Event_setData@me:
   473                           	callstack 0
   474  000060                     Event_getData@me:
   475                           	callstack 0
   476  000060                     Event_setPE@me:
   477                           	callstack 0
   478  000060                     Event_setTarget@me:
   479                           	callstack 0
   480  000060                     Event_setId@me:
   481                           	callstack 0
   482  000060                     Event_getId@me:
   483                           	callstack 0
   484  000060                     Event_setDelay@me:
   485                           	callstack 0
   486  000060                     Event_getDelay@me:
   487                           	callstack 0
   488  000060                     ___wmul@multiplier:
   489                           	callstack 0
   490  000060                     ___awmod@dividend:
   491                           	callstack 0
   492  000060                     convertCANid2Reg@tempPassedInID:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x0
   496  000060                     	ds	1
   497  000061                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   498                           	callstack 0
   499  000061                     XF_scheduleTimer@tm:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1
   503  000061                     	ds	1
   504  000062                     ??_Button_read:
   505  000062                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   506                           	callstack 0
   507  000062                     Event_setId@eventID:
   508                           	callstack 0
   509  000062                     BLControl_init@me:
   510                           	callstack 0
   511  000062                     Button_init@me:
   512                           	callstack 0
   513  000062                     Button_initHW@me:
   514                           	callstack 0
   515  000062                     ButtonSM_init@me:
   516                           	callstack 0
   517  000062                     ButtonSM_setObserver@me:
   518                           	callstack 0
   519  000062                     LED_init@me:
   520                           	callstack 0
   521  000062                     LED_on@me:
   522                           	callstack 0
   523  000062                     LED_off@me:
   524                           	callstack 0
   525  000062                     commControl_init@me:
   526                           	callstack 0
   527  000062                     storeSetup@msg:
   528                           	callstack 0
   529  000062                     Event_setPE@processEvent:
   530                           	callstack 0
   531  000062                     Event_setTarget@target:
   532                           	callstack 0
   533  000062                     Event_setDelay@delay:
   534                           	callstack 0
   535  000062                     ___wmul@multiplicand:
   536                           	callstack 0
   537  000062                     ___awmod@divisor:
   538                           	callstack 0
   539  000062                     Event_setData@data:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x2
   543  000062                     	ds	1
   544  000063                     XF_scheduleTimer@ev:
   545                           	callstack 0
   546                           
   547                           ; 15 bytes @ 0x3
   548  000063                     	ds	1
   549  000064                     ??_LED_on:
   550  000064                     ??_LED_off:
   551  000064                     ??_convertReg2ExtendedCANid:
   552  000064                     ??_convertReg2StandardCANid:
   553  000064                     Button_init@id:
   554                           	callstack 0
   555  000064                     Button_read@value:
   556                           	callstack 0
   557  000064                     LED_init@id:
   558                           	callstack 0
   559  000064                     convertCANid2Reg@canIdType:
   560                           	callstack 0
   561  000064                     ___awmod@counter:
   562                           	callstack 0
   563  000064                     ButtonSM_init@button:
   564                           	callstack 0
   565  000064                     ButtonSM_setObserver@observer:
   566                           	callstack 0
   567  000064                     ___wmul@product:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x4
   571  000064                     	ds	1
   572  000065                     Button_init@isPullUp:
   573                           	callstack 0
   574  000065                     ___awmod@sign:
   575                           	callstack 0
   576  000065                     convertCANid2Reg@passedInEIDH:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x5
   580  000065                     	ds	1
   581  000066                     ?_XF_popEvent:
   582                           	callstack 0
   583  000066                     convertReg2StandardCANid@tempRXBn_SIDH:
   584                           	callstack 0
   585  000066                     BLControl_onButton@me:
   586                           	callstack 0
   587  000066                     ButtonSM_setObserver@observerCB:
   588                           	callstack 0
   589  000066                     LED_initHW@me:
   590                           	callstack 0
   591  000066                     Event_init@me:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x6
   595  000066                     	ds	1
   596  000067                     convertCANid2Reg@passedInEIDL:
   597                           	callstack 0
   598  000067                     convertReg2StandardCANid@returnValue:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x7
   602  000067                     	ds	1
   603  000068                     ??_Event_getData:
   604  000068                     BLControl_onButton@buttonId:
   605                           	callstack 0
   606  000068                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   607                           	callstack 0
   608  000068                     XF_init@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x8
   612  000068                     	ds	1
   613  000069                     BLControl_onButton@pressed:
   614                           	callstack 0
   615  000069                     convertCANid2Reg@passedInSIDH:
   616                           	callstack 0
   617  000069                     convertReg2ExtendedCANid@returnValue:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x9
   621  000069                     	ds	1
   622  00006A                     
   623                           ; 1 bytes @ 0xA
   624  00006A                     	ds	1
   625  00006B                     convertCANid2Reg@passedInSIDL:
   626                           	callstack 0
   627  00006B                     convertReg2StandardCANid@ConvertedID:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0xB
   631  00006B                     	ds	2
   632  00006D                     ??_convertCANid2Reg:
   633  00006D                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xD
   637  00006D                     	ds	1
   638  00006E                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0xE
   642  00006E                     	ds	1
   643  00006F                     convertReg2ExtendedCANid@ConvertedID:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0xF
   647  00006F                     	ds	2
   648  000071                     convertCANid2Reg@wipSIDL:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x11
   652  000071                     	ds	1
   653  000072                     ??_ECAN_Initialize:
   654  000072                     XF_scheduleTimer@inISR:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x12
   658  000072                     	ds	1
   659  000073                     XF_scheduleTimer@i:
   660                           	callstack 0
   661  000073                     CAN_receive@tempCanMsg:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x13
   665  000073                     	ds	1
   666  000074                     XF_pushEvent@ev:
   667                           	callstack 0
   668                           
   669                           ; 15 bytes @ 0x14
   670  000074                     	ds	1
   671  000075                     ??_XF_popEvent:
   672  000075                     CAN_receive@returnValue:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x15
   676  000075                     	ds	2
   677  000077                     XF_popEvent@inISR:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x17
   681  000077                     	ds	1
   682  000078                     XF_popEvent@ev:
   683                           	callstack 0
   684                           
   685                           ; 15 bytes @ 0x18
   686  000078                     	ds	11
   687  000083                     XF_pushEvent@inISR:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x23
   691  000083                     	ds	1
   692  000084                     XF_pushEvent@tmid:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x24
   696  000084                     	ds	2
   697  000086                     ??_XF_pushEvent:
   698                           
   699                           ; 1 bytes @ 0x26
   700  000086                     	ds	1
   701  000087                     XF_pushEvent@tm:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x27
   705  000087                     	ds	2
   706  000089                     XF_pushEvent@temp:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x29
   710  000089                     	ds	1
   711  00008A                     POST@target:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2A
   715  00008A                     	ds	2
   716  00008C                     POST@processEvent:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2C
   720  00008C                     	ds	2
   721  00008E                     POST@id:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x2E
   725  00008E                     	ds	1
   726  00008F                     POST@delay:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x2F
   730  00008F                     	ds	2
   731  000091                     POST@data:
   732                           	callstack 0
   733                           
   734                           ; 8 bytes @ 0x31
   735  000091                     	ds	8
   736  000099                     POST@tmid:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x39
   740  000099                     	ds	1
   741  00009A                     POST@ev:
   742                           	callstack 0
   743                           
   744                           ; 15 bytes @ 0x3A
   745  00009A                     	ds	15
   746  0000A9                     ??_factory_toggleLed:
   747  0000A9                     ButtonSM_startBehaviour@me:
   748                           	callstack 0
   749  0000A9                     commControl_startBehaviour@me:
   750                           	callstack 0
   751  0000A9                     readCANFrame@me:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x49
   755  0000A9                     	ds	2
   756  0000AB                     _ButtonSM_startBehaviour$212:
   757                           	callstack 0
   758  0000AB                     readCANFrame@msg:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x4B
   762  0000AB                     	ds	1
   763  0000AC                     
   764                           ; 1 bytes @ 0x4C
   765  0000AC                     	ds	1
   766  0000AD                     ??_readCANFrame:
   767                           
   768                           ; 1 bytes @ 0x4D
   769  0000AD                     	ds	2
   770  0000AF                     readCANFrame@src:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x4F
   774  0000AF                     	ds	1
   775  0000B0                     readCANFrame@msgNbr:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x50
   779  0000B0                     	ds	1
   780  0000B1                     readCANFrame@cip:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x51
   784  0000B1                     	ds	4
   785  0000B5                     ButtonSM_processEvent@ev:
   786                           	callstack 0
   787  0000B5                     commControl_processEvent@ev:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x55
   791  0000B5                     	ds	2
   792  0000B7                     ??_commControl_processEvent:
   793  0000B7                     ??_ButtonSM_processEvent:
   794                           
   795                           ; 1 bytes @ 0x57
   796  0000B7                     	ds	2
   797  0000B9                     ButtonSM_processEvent@oldState:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x59
   801  0000B9                     	ds	1
   802  0000BA                     ButtonSM_processEvent@me:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x5A
   806  0000BA                     	ds	5
   807  0000BF                     commControl_processEvent@oldCSMState:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x5F
   811  0000BF                     	ds	1
   812  0000C0                     commControl_processEvent@oldSSMState:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x60
   816  0000C0                     	ds	1
   817  0000C1                     commControl_processEvent@oldASMState:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x61
   821  0000C1                     	ds	1
   822  0000C2                     commControl_processEvent@processed:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x62
   826  0000C2                     	ds	1
   827  0000C3                     commControl_processEvent@me:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x63
   831  0000C3                     	ds	2
   832  0000C5                     XF_executeOnce@ev:
   833                           	callstack 0
   834                           
   835                           ; 15 bytes @ 0x65
   836  0000C5                     	ds	15
   837  0000D4                     
   838                           ; 1 bytes @ 0x74
   839                           
   840                           	psect	cstackCOMRAM
   841  000001                     __pcstackCOMRAM:
   842                           	callstack 0
   843  000001                     ?i2_Event_getDelay:
   844                           	callstack 0
   845  000001                     ?i2___awmod:
   846                           	callstack 0
   847  000001                     i2ENTERCRITICAL@inISR:
   848                           	callstack 0
   849  000001                     i2LEAVECRITICAL@inISR:
   850                           	callstack 0
   851  000001                     i2Event_init@me:
   852                           	callstack 0
   853  000001                     i2Event_setDelay@me:
   854                           	callstack 0
   855  000001                     i2Event_getDelay@me:
   856                           	callstack 0
   857  000001                     i2___awmod@dividend:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x0
   861  000001                     	ds	1
   862  000002                     i2XF_scheduleTimer@tm:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x1
   866  000002                     	ds	1
   867  000003                     XF_unscheduleTimer@inISR:
   868                           	callstack 0
   869  000003                     i2Event_setDelay@delay:
   870                           	callstack 0
   871  000003                     i2___awmod@divisor:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000003                     	ds	1
   876  000004                     XF_unscheduleTimer@id:
   877                           	callstack 0
   878  000004                     i2XF_scheduleTimer@ev:
   879                           	callstack 0
   880                           
   881                           ; 15 bytes @ 0x3
   882  000004                     	ds	1
   883  000005                     i2___awmod@counter:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x4
   887  000005                     	ds	1
   888  000006                     i2___awmod@sign:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x5
   892  000006                     	ds	13
   893  000013                     i2XF_scheduleTimer@inISR:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x12
   897  000013                     	ds	1
   898  000014                     i2XF_scheduleTimer@i:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x13
   902  000014                     	ds	1
   903  000015                     i2XF_pushEvent@ev:
   904                           	callstack 0
   905                           
   906                           ; 15 bytes @ 0x14
   907  000015                     	ds	15
   908  000024                     i2XF_pushEvent@inISR:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x23
   912  000024                     	ds	1
   913  000025                     i2XF_pushEvent@tmid:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x24
   917  000025                     	ds	2
   918  000027                     ??i2_XF_pushEvent:
   919                           
   920                           ; 1 bytes @ 0x26
   921  000027                     	ds	1
   922  000028                     i2XF_pushEvent@tm:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x27
   926  000028                     	ds	2
   927  00002A                     i2XF_pushEvent@temp:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x29
   931  00002A                     	ds	1
   932  00002B                     
   933                           ; 1 bytes @ 0x2A
   934  00002B                     	ds	2
   935  00002D                     XF_decrementAndQueueTimers@dummy:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x2C
   939  00002D                     	ds	1
   940  00002E                     XF_decrementAndQueueTimers@i:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x2D
   944  00002E                     	ds	1
   945  00002F                     ??_INTERRUPT_InterruptManager:
   946                           
   947                           ; 1 bytes @ 0x2E
   948  00002F                     	ds	2
   949                           
   950 ;;
   951 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   952 ;;
   953 ;; *************** function _main *****************
   954 ;; Defined at:
   955 ;;		line 8 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels required when called: 13
   975 ;; This function calls:
   976 ;;		_Factory_build
   977 ;;		_Factory_init
   978 ;;		_Factory_start
   979 ;;		_SYSTEM_Initialize
   980 ;;		_TMR0_SetInterruptHandler
   981 ;;		_XF_executeOnce
   982 ;;		_XF_init
   983 ;; This function is called by:
   984 ;;		Startup code after reset
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text0
   989  00284A                     __ptext0:
   990                           	callstack 0
   991  00284A                     _main:
   992                           	callstack 18
   993  00284A                     
   994                           ;main.c: 11:     SYSTEM_Initialize();
   995  00284A  ECA0  F014         	call	_SYSTEM_Initialize	;wreg free
   996  00284E                     
   997                           ;main.c: 14:     (INTCON0bits.GIE = 1);
   998  00284E  8ED2               	bsf	210,7,c	;volatile
   999  002850                     
  1000                           ;main.c: 20:     XF_init();
  1001  002850  EC6D  F00C         	call	_XF_init	;wreg free
  1002  002854                     
  1003                           ;main.c: 23:     Factory_init();
  1004  002854  ECC0  F00F         	call	_Factory_init	;wreg free
  1005  002858                     
  1006                           ;main.c: 24:     Factory_build();
  1007  002858  EC67  F014         	call	_Factory_build	;wreg free
  1008  00285C                     
  1009                           ;main.c: 25:     Factory_start();
  1010  00285C  ECF6  F011         	call	_Factory_start	;wreg free
  1011  002860                     
  1012                           ;main.c: 31:     TMR0_SetInterruptHandler(XF_decrementAndQueueTimers);
  1013  002860  0EB8               	movlw	low _XF_decrementAndQueueTimers
  1014  002862  0100               	movlb	0	; () banked
  1015  002864  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1016  002866  0E19               	movlw	high _XF_decrementAndQueueTimers
  1017  002868  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1018  00286A  EC95  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  1019  00286E                     l4891:
  1020                           
  1021                           ;main.c: 34:     {;main.c: 36:         XF_executeOnce();
  1022  00286E  EC52  F011         	call	_XF_executeOnce	;wreg free
  1023  002872  EF37  F014         	goto	l4891
  1024  002876  EF0D  F000         	goto	start
  1025  00287A                     __end_of_main:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _XF_init *****************
  1029 ;; Defined at:
  1030 ;;		line 73 in file "xf/xf.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  i               2    8[BANK0 ] int 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;Total ram usage:        2 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 7
  1051 ;; This function calls:
  1052 ;;		_Event_init
  1053 ;;		___wmul
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060  0018DA                     __ptext1:
  1061                           	callstack 0
  1062  0018DA                     _XF_init:
  1063                           	callstack 23
  1064  0018DA                     
  1065                           ;xf/xf.c: 75:     int i;;xf/xf.c: 76:     for (i=0; i<12; i++)
  1066  0018DA  0E00               	movlw	0
  1067  0018DC  0100               	movlb	0	; () banked
  1068  0018DE  6F69               	movwf	(XF_init@i+1)& (0+255),b
  1069  0018E0  0E00               	movlw	0
  1070  0018E2  6F68               	movwf	XF_init@i& (0+255),b
  1071  0018E4                     l4705:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;xf/xf.c: 77:     {;xf/xf.c: 78:         Event_init(&(theXF.eventQueue[i]));
  1075  0018E4  C068  F060         	movff	XF_init@i,___wmul@multiplier
  1076  0018E8  C069  F061         	movff	XF_init@i+1,___wmul@multiplier+1
  1077  0018EC  0E00               	movlw	0
  1078  0018EE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1079  0018F0  0E0F               	movlw	15
  1080  0018F2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1081  0018F4  EC3D  F014         	call	___wmul	;wreg free
  1082  0018F8  0E80               	movlw	low (_theXF+136)
  1083  0018FA  0100               	movlb	0	; () banked
  1084  0018FC  2560               	addwf	?___wmul& (0+255),w,b
  1085  0018FE  6F66               	movwf	Event_init@me& (0+255),b
  1086  001900  0E01               	movlw	high (_theXF+136)
  1087  001902  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1088  001904  6F67               	movwf	(Event_init@me+1)& (0+255),b
  1089  001906  EC28  F012         	call	_Event_init	;wreg free
  1090  00190A                     
  1091                           ;xf/xf.c: 79:     }
  1092  00190A  0100               	movlb	0	; () banked
  1093  00190C  4B68               	infsnz	XF_init@i& (0+255),f,b
  1094  00190E  2B69               	incf	(XF_init@i+1)& (0+255),f,b
  1095  001910                     
  1096                           ; BSR set to: 0
  1097  001910  BF69               	btfsc	(XF_init@i+1)& (0+255),7,b
  1098  001912  EF94  F00C         	goto	u2311
  1099  001916  5169               	movf	(XF_init@i+1)& (0+255),w,b
  1100  001918  E109               	bnz	u2310
  1101  00191A  0E0C               	movlw	12
  1102  00191C  5D68               	subwf	XF_init@i& (0+255),w,b
  1103  00191E  A0D8               	btfss	status,0,c
  1104  001920  EF94  F00C         	goto	u2311
  1105  001924  EF96  F00C         	goto	u2310
  1106  001928                     u2311:
  1107  001928  EF72  F00C         	goto	l4705
  1108  00192C                     u2310:
  1109  00192C                     
  1110                           ; BSR set to: 0
  1111                           ;xf/xf.c: 81:     for (i=0; i<8; i++)
  1112  00192C  0E00               	movlw	0
  1113  00192E  6F69               	movwf	(XF_init@i+1)& (0+255),b
  1114  001930  0E00               	movlw	0
  1115  001932  6F68               	movwf	XF_init@i& (0+255),b
  1116  001934                     l4717:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;xf/xf.c: 82:     {;xf/xf.c: 83:         theXF.timerList[i].tm = 0;
  1120  001934  C068  F060         	movff	XF_init@i,___wmul@multiplier
  1121  001938  C069  F061         	movff	XF_init@i+1,___wmul@multiplier+1
  1122  00193C  0E00               	movlw	0
  1123  00193E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1124  001940  0E11               	movlw	17
  1125  001942  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1126  001944  EC3D  F014         	call	___wmul	;wreg free
  1127  001948  0EF8               	movlw	low _theXF
  1128  00194A  0100               	movlb	0	; () banked
  1129  00194C  2560               	addwf	?___wmul& (0+255),w,b
  1130  00194E  6ED9               	movwf	fsr2l,c
  1131  001950  0E00               	movlw	high _theXF
  1132  001952  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1133  001954  6EDA               	movwf	fsr2h,c
  1134  001956  0E00               	movlw	0
  1135  001958  6EDE               	movwf	postinc2,c
  1136  00195A  0E00               	movlw	0
  1137  00195C  6EDD               	movwf	postdec2,c
  1138                           
  1139                           ;xf/xf.c: 84:         Event_init(&(theXF.timerList[i].ev));
  1140  00195E  C068  F060         	movff	XF_init@i,___wmul@multiplier
  1141  001962  C069  F061         	movff	XF_init@i+1,___wmul@multiplier+1
  1142  001966  0E00               	movlw	0
  1143  001968  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1144  00196A  0E11               	movlw	17
  1145  00196C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1146  00196E  EC3D  F014         	call	___wmul	;wreg free
  1147  001972  0EFA               	movlw	low (_theXF+2)
  1148  001974  0100               	movlb	0	; () banked
  1149  001976  2560               	addwf	?___wmul& (0+255),w,b
  1150  001978  6F66               	movwf	Event_init@me& (0+255),b
  1151  00197A  0E00               	movlw	high (_theXF+2)
  1152  00197C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1153  00197E  6F67               	movwf	(Event_init@me+1)& (0+255),b
  1154  001980  EC28  F012         	call	_Event_init	;wreg free
  1155  001984                     
  1156                           ;xf/xf.c: 85:     }
  1157  001984  0100               	movlb	0	; () banked
  1158  001986  4B68               	infsnz	XF_init@i& (0+255),f,b
  1159  001988  2B69               	incf	(XF_init@i+1)& (0+255),f,b
  1160  00198A                     
  1161                           ; BSR set to: 0
  1162  00198A  BF69               	btfsc	(XF_init@i+1)& (0+255),7,b
  1163  00198C  EFD1  F00C         	goto	u2321
  1164  001990  5169               	movf	(XF_init@i+1)& (0+255),w,b
  1165  001992  E109               	bnz	u2320
  1166  001994  0E08               	movlw	8
  1167  001996  5D68               	subwf	XF_init@i& (0+255),w,b
  1168  001998  A0D8               	btfss	status,0,c
  1169  00199A  EFD1  F00C         	goto	u2321
  1170  00199E  EFD3  F00C         	goto	u2320
  1171  0019A2                     u2321:
  1172  0019A2  EF9A  F00C         	goto	l4717
  1173  0019A6                     u2320:
  1174  0019A6                     
  1175                           ; BSR set to: 0
  1176                           ;xf/xf.c: 86:     theXF.in = 0;
  1177  0019A6  0E00               	movlw	0
  1178  0019A8  006F FFA0  F234    	movff	wreg,_theXF+316
  1179                           
  1180                           ;xf/xf.c: 87:     theXF.out = 0;
  1181  0019AE  0E00               	movlw	0
  1182  0019B0  006F FFA0  F235    	movff	wreg,_theXF+317
  1183  0019B6                     
  1184                           ; BSR set to: 0
  1185  0019B6  0012               	return		;funcret
  1186  0019B8                     __end_of_XF_init:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function ___wmul *****************
  1190 ;; Defined at:
  1191 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1194 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  product         2    4[BANK0 ] unsigned int 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2    0[BANK0 ] unsigned int 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, prodl, prodh
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        6 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 6
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_XF_init
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text2
  1221  00287A                     __ptext2:
  1222                           	callstack 0
  1223  00287A                     ___wmul:
  1224                           	callstack 23
  1225  00287A  0100               	movlb	0	; () banked
  1226  00287C  5160               	movf	___wmul@multiplier& (0+255),w,b
  1227  00287E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  1228  002880  006F FFCC  F064    	movff	prodl,___wmul@product
  1229  002886  006F FFD0  F065    	movff	prodh,___wmul@product+1
  1230  00288C  5160               	movf	___wmul@multiplier& (0+255),w,b
  1231  00288E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1232  002890  50F3               	movf	243,w,c
  1233  002892  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  1234  002894  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1235  002896  0362               	mulwf	___wmul@multiplicand& (0+255),b
  1236  002898  50F3               	movf	243,w,c
  1237  00289A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  1238  00289C                     
  1239                           ; BSR set to: 0
  1240  00289C  C064  F060         	movff	___wmul@product,?___wmul
  1241  0028A0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  1242  0028A4                     
  1243                           ; BSR set to: 0
  1244  0028A4  0012               	return		;funcret
  1245  0028A6                     __end_of___wmul:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _XF_executeOnce *****************
  1249 ;; Defined at:
  1250 ;;		line 273 in file "xf/xf.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  ev             15  101[BANK0 ] struct Event_
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:       15 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 12
  1271 ;; This function calls:
  1272 ;;		_ButtonSM_processEvent
  1273 ;;		_XF_popEvent
  1274 ;;		_commControl_processEvent
  1275 ;;		_factory_toggleLed
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text3
  1282  0022A4                     __ptext3:
  1283                           	callstack 0
  1284  0022A4                     _XF_executeOnce:
  1285                           	callstack 18
  1286  0022A4                     
  1287                           ;xf/xf.c: 275:     Event ev = XF_popEvent(0);
  1288  0022A4  0E00               	movlw	0
  1289  0022A6  EC6B  F00E         	call	_XF_popEvent
  1290  0022AA  EE20  F0C5         	lfsr	2,XF_executeOnce@ev
  1291  0022AE  0E0E               	movlw	14
  1292  0022B0                     u2331:
  1293  0022B0  006F FFAF FFDB     	movff	plusw0,plusw2
  1294  0022B6  06E8               	decf	wreg,f,c
  1295  0022B8  E2FB               	bc	u2331
  1296  0022BA                     
  1297                           ;xf/xf.c: 277:     if (ev.id != 0)
  1298  0022BA  0100               	movlb	0	; () banked
  1299  0022BC  51C5               	movf	XF_executeOnce@ev& (0+255),w,b
  1300  0022BE  B4D8               	btfsc	status,2,c
  1301  0022C0  EF64  F011         	goto	u2341
  1302  0022C4  EF66  F011         	goto	u2340
  1303  0022C8                     u2341:
  1304  0022C8  EF8B  F011         	goto	l1095
  1305  0022CC                     u2340:
  1306  0022CC                     
  1307                           ; BSR set to: 0
  1308                           ;xf/xf.c: 278:     {;xf/xf.c: 280:         if (ev.target != ((void*)0))
  1309  0022CC  51C8               	movf	(XF_executeOnce@ev+3)& (0+255),w,b
  1310  0022CE  11C9               	iorwf	(XF_executeOnce@ev+4)& (0+255),w,b
  1311  0022D0  B4D8               	btfsc	status,2,c
  1312  0022D2  EF6D  F011         	goto	u2351
  1313  0022D6  EF6F  F011         	goto	u2350
  1314  0022DA                     u2351:
  1315  0022DA  EF8B  F011         	goto	l1095
  1316  0022DE                     u2350:
  1317  0022DE                     
  1318                           ; BSR set to: 0
  1319                           ;xf/xf.c: 281:         {;xf/xf.c: 284:             if (ev.processEvent != ((void*)0))
  1320  0022DE  51C6               	movf	(XF_executeOnce@ev+1)& (0+255),w,b
  1321  0022E0  11C7               	iorwf	(XF_executeOnce@ev+2)& (0+255),w,b
  1322  0022E2  B4D8               	btfsc	status,2,c
  1323  0022E4  EF76  F011         	goto	u2361
  1324  0022E8  EF78  F011         	goto	u2360
  1325  0022EC                     u2361:
  1326  0022EC  EF8B  F011         	goto	l1095
  1327  0022F0                     u2360:
  1328  0022F0                     
  1329                           ; BSR set to: 0
  1330                           ;xf/xf.c: 285:             {;xf/xf.c: 288:                 ev.processEvent(&ev);
  1331  0022F0  0EC5               	movlw	low XF_executeOnce@ev
  1332  0022F2  6FB5               	movwf	commControl_processEvent@ev& (0+255),b
  1333  0022F4  0E00               	movlw	high XF_executeOnce@ev
  1334  0022F6  6FB6               	movwf	(commControl_processEvent@ev+1)& (0+255),b
  1335  0022F8  EE20  F0C6         	lfsr	2,XF_executeOnce@ev+1
  1336  0022FC  D802               	call	u2378
  1337  0022FE  EF8B  F011         	goto	u2379
  1338  002302                     u2378:
  1339  002302  0005               	push	
  1340  002304  6EFA               	movwf	pclath,c
  1341  002306  50DE               	movf	postinc2,w,c
  1342  002308  6EFD               	movwf	tosl,c
  1343  00230A  50DE               	movf	postinc2,w,c
  1344  00230C  6EFE               	movwf	tosh,c
  1345  00230E  50F8               	movf	tblptru,w,c
  1346  002310  6EFF               	movwf	tosu,c
  1347  002312  50FA               	movf	pclath,w,c
  1348  002314  0012               	return		;indir
  1349  002316                     u2379:
  1350  002316                     l1095:
  1351  002316  0012               	return		;funcret
  1352  002318                     __end_of_XF_executeOnce:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _factory_toggleLed *****************
  1356 ;; Defined at:
  1357 ;;		line 56 in file "factory/factory.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 10
  1378 ;; This function calls:
  1379 ;;		_POST
  1380 ;; This function is called by:
  1381 ;;		_Factory_start
  1382 ;;		_XF_executeOnce
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text4
  1387  002388                     __ptext4:
  1388                           	callstack 0
  1389  002388                     _factory_toggleLed:
  1390                           	callstack 19
  1391  002388  B0BB               	btfsc	187,0,c	;volatile
  1392  00238A  EFC9  F011         	goto	u2181
  1393  00238E  EFCC  F011         	goto	u2180
  1394  002392                     u2181:
  1395  002392  0E01               	movlw	1
  1396  002394  EFCD  F011         	goto	u2186
  1397  002398                     u2180:
  1398  002398  0E00               	movlw	0
  1399  00239A                     u2186:
  1400  00239A  0AFF               	xorlw	255
  1401  00239C  0100               	movlb	0	; () banked
  1402  00239E  6FA9               	movwf	??_factory_toggleLed& (0+255),b
  1403  0023A0  50BB               	movf	187,w,c	;volatile
  1404  0023A2  19A9               	xorwf	??_factory_toggleLed& (0+255),w,b
  1405  0023A4  0BFE               	andlw	-2
  1406  0023A6  19A9               	xorwf	??_factory_toggleLed& (0+255),w,b
  1407  0023A8  6EBB               	movwf	187,c	;volatile
  1408  0023AA                     
  1409                           ; BSR set to: 0
  1410                           ;factory/factory.c: 58:     POST(&theFactory, &factory_toggleLed, 11, 1000, 0);
  1411  0023AA  0ED5               	movlw	low _theFactory
  1412  0023AC  6F8A               	movwf	POST@target& (0+255),b
  1413  0023AE  0E00               	movlw	high _theFactory
  1414  0023B0  6F8B               	movwf	(POST@target+1)& (0+255),b
  1415  0023B2  0E88               	movlw	low _factory_toggleLed
  1416  0023B4  6F8C               	movwf	POST@processEvent& (0+255),b
  1417  0023B6  0E23               	movlw	high _factory_toggleLed
  1418  0023B8  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  1419  0023BA  0E0B               	movlw	11
  1420  0023BC  6F8E               	movwf	POST@id& (0+255),b
  1421  0023BE  0E03               	movlw	3
  1422  0023C0  6F90               	movwf	(POST@delay+1)& (0+255),b
  1423  0023C2  0EE8               	movlw	232
  1424  0023C4  6F8F               	movwf	POST@delay& (0+255),b
  1425  0023C6  0E00               	movlw	0
  1426  0023C8  6F91               	movwf	POST@data& (0+255),b
  1427  0023CA  0E00               	movlw	0
  1428  0023CC  6F92               	movwf	(POST@data+1)& (0+255),b
  1429  0023CE  0E00               	movlw	0
  1430  0023D0  6F93               	movwf	(POST@data+2)& (0+255),b
  1431  0023D2  0E00               	movlw	0
  1432  0023D4  6F94               	movwf	(POST@data+3)& (0+255),b
  1433  0023D6  0E00               	movlw	0
  1434  0023D8  6F95               	movwf	(POST@data+4)& (0+255),b
  1435  0023DA  0E00               	movlw	0
  1436  0023DC  6F96               	movwf	(POST@data+5)& (0+255),b
  1437  0023DE  0E00               	movlw	0
  1438  0023E0  6F97               	movwf	(POST@data+6)& (0+255),b
  1439  0023E2  0E00               	movlw	0
  1440  0023E4  6F98               	movwf	(POST@data+7)& (0+255),b
  1441  0023E6  EC0D  F00E         	call	_POST	;wreg free
  1442  0023EA  0012               	return		;funcret
  1443  0023EC                     __end_of_factory_toggleLed:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _ButtonSM_processEvent *****************
  1447 ;; Defined at:
  1448 ;;		line 19 in file "board/button/buttonsm.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  ev              2   85[BANK0 ] PTR struct Event_
  1451 ;;		 -> XF_executeOnce@ev(15), 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  me              2   90[BANK0 ] PTR struct ButtonSM_
  1454 ;;		 -> theFactory(29), NULL(0), 
  1455 ;;  oldState        1   89[BANK0 ] enum E23092
  1456 ;;  processed       1    0        _Bool 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      _Bool 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        7 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 10
  1473 ;; This function calls:
  1474 ;;		_BLControl_onButton
  1475 ;;		_Button_getId
  1476 ;;		_Button_read
  1477 ;;		_Event_getId
  1478 ;;		_POST
  1479 ;; This function is called by:
  1480 ;;		_ButtonSM_startBehaviour
  1481 ;;		_XF_executeOnce
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text5
  1486  00088C                     __ptext5:
  1487                           	callstack 0
  1488  00088C                     _ButtonSM_processEvent:
  1489                           	callstack 19
  1490  00088C                     
  1491                           ;board/button/buttonsm.c: 19: _Bool ButtonSM_processEvent(Event* ev);board/button/button
      +                          sm.c: 20: {;board/button/buttonsm.c: 21:     ButtonSM* me = (ButtonSM*)ev->target;
  1492  00088C  0100               	movlb	0	; () banked
  1493  00088E  EE20 F003          	lfsr	2,3
  1494  000892  51B5               	movf	ButtonSM_processEvent@ev& (0+255),w,b
  1495  000894  26D9               	addwf	fsr2l,f,c
  1496  000896  51B6               	movf	(ButtonSM_processEvent@ev+1)& (0+255),w,b
  1497  000898  22DA               	addwfc	fsr2h,f,c
  1498  00089A  006F FF78  F0BA    	movff	postinc2,ButtonSM_processEvent@me
  1499  0008A0  006F FF74  F0BB    	movff	postdec2,ButtonSM_processEvent@me+1
  1500  0008A6                     
  1501                           ; BSR set to: 0
  1502                           ;board/button/buttonsm.c: 23:     BSMState oldState = me->state;
  1503  0008A6  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1504  0008AC  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1505  0008B2  50DF               	movf	indf2,w,c
  1506  0008B4  6FB9               	movwf	ButtonSM_processEvent@oldState& (0+255),b
  1507                           
  1508                           ;board/button/buttonsm.c: 25:     switch (me->state)
  1509  0008B6  EFF6  F004         	goto	l4235
  1510  0008BA                     l4209:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;board/button/buttonsm.c: 28:             if (Event_getId(ev) == evBSMInit)
  1514  0008BA  C0B5  F060         	movff	ButtonSM_processEvent@ev,Event_getId@me
  1515  0008BE  C0B6  F061         	movff	ButtonSM_processEvent@ev+1,Event_getId@me+1
  1516  0008C2  EC51  F015         	call	_Event_getId	;wreg free
  1517  0008C6  0A0A               	xorlw	10
  1518  0008C8  A4D8               	btfss	status,2,c
  1519  0008CA  EF69  F004         	goto	u1871
  1520  0008CE  EF6B  F004         	goto	u1870
  1521  0008D2                     u1871:
  1522  0008D2  EF1D  F005         	goto	l4237
  1523  0008D6                     u1870:
  1524  0008D6                     
  1525                           ;board/button/buttonsm.c: 29:             {;board/button/buttonsm.c: 30:                
      +                           me->state = ST_BSMWAIT;
  1526  0008D6  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1527  0008DC  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1528  0008E2  0E01               	movlw	1
  1529  0008E4  6EDF               	movwf	indf2,c
  1530  0008E6  EF1D  F005         	goto	l4237
  1531  0008EA                     l4213:
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;board/button/buttonsm.c: 34:                 if (Event_getId(ev) == evBSMPollTM)
  1535  0008EA  C0B5  F060         	movff	ButtonSM_processEvent@ev,Event_getId@me
  1536  0008EE  C0B6  F061         	movff	ButtonSM_processEvent@ev+1,Event_getId@me+1
  1537  0008F2  EC51  F015         	call	_Event_getId	;wreg free
  1538  0008F6  0A0C               	xorlw	12
  1539  0008F8  A4D8               	btfss	status,2,c
  1540  0008FA  EF81  F004         	goto	u1881
  1541  0008FE  EF83  F004         	goto	u1880
  1542  000902                     u1881:
  1543  000902  EF1D  F005         	goto	l4237
  1544  000906                     u1880:
  1545  000906                     
  1546                           ;board/button/buttonsm.c: 35:             {;board/button/buttonsm.c: 36:                
      +                           me->state = ST_BSMPOLL;
  1547  000906  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1548  00090C  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1549  000912  0E02               	movlw	2
  1550  000914  6EDF               	movwf	indf2,c
  1551  000916  EF1D  F005         	goto	l4237
  1552  00091A                     l4217:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;board/button/buttonsm.c: 40:             if (Event_getId(ev) == evBSMDefault)
  1556  00091A  C0B5  F060         	movff	ButtonSM_processEvent@ev,Event_getId@me
  1557  00091E  C0B6  F061         	movff	ButtonSM_processEvent@ev+1,Event_getId@me+1
  1558  000922  EC51  F015         	call	_Event_getId	;wreg free
  1559  000926  0A0B               	xorlw	11
  1560  000928  A4D8               	btfss	status,2,c
  1561  00092A  EF99  F004         	goto	u1891
  1562  00092E  EF9B  F004         	goto	u1890
  1563  000932                     u1891:
  1564  000932  EF1D  F005         	goto	l4237
  1565  000936                     u1890:
  1566  000936                     
  1567                           ;board/button/buttonsm.c: 41:             {;board/button/buttonsm.c: 42:                
      +                           if (Button_read(me->button)==1)
  1568  000936  0100               	movlb	0	; () banked
  1569  000938  EE20 F001          	lfsr	2,1
  1570  00093C  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1571  00093E  26D9               	addwf	fsr2l,f,c
  1572  000940  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1573  000942  22DA               	addwfc	fsr2h,f,c
  1574  000944  006F FF78  F060    	movff	postinc2,Button_read@me
  1575  00094A  006F FF74  F061    	movff	postdec2,Button_read@me+1
  1576  000950  ECAC  F00D         	call	_Button_read	;wreg free
  1577  000954  06E8               	decf	wreg,f,c
  1578  000956  A4D8               	btfss	status,2,c
  1579  000958  EFB0  F004         	goto	u1901
  1580  00095C  EFB2  F004         	goto	u1900
  1581  000960                     u1901:
  1582  000960  EFBC  F004         	goto	l4223
  1583  000964                     u1900:
  1584  000964                     
  1585                           ;board/button/buttonsm.c: 43:                 {;board/button/buttonsm.c: 44:            
      +                                   me->state = ST_BSMPRESSED;
  1586  000964  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1587  00096A  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1588  000970  0E03               	movlw	3
  1589  000972  6EDF               	movwf	indf2,c
  1590                           
  1591                           ;board/button/buttonsm.c: 45:                 }
  1592  000974  EF1D  F005         	goto	l4237
  1593  000978                     l4223:
  1594                           
  1595                           ;board/button/buttonsm.c: 47:                 {;board/button/buttonsm.c: 48:            
      +                                   me->state = ST_BSMRELEASED;
  1596  000978  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1597  00097E  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1598  000984  0E04               	movlw	4
  1599  000986  6EDF               	movwf	indf2,c
  1600  000988  EF1D  F005         	goto	l4237
  1601  00098C                     l4225:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;board/button/buttonsm.c: 53:             if (Event_getId(ev) == evBSMDefault)
  1605  00098C  C0B5  F060         	movff	ButtonSM_processEvent@ev,Event_getId@me
  1606  000990  C0B6  F061         	movff	ButtonSM_processEvent@ev+1,Event_getId@me+1
  1607  000994  EC51  F015         	call	_Event_getId	;wreg free
  1608  000998  0A0B               	xorlw	11
  1609  00099A  A4D8               	btfss	status,2,c
  1610  00099C  EFD2  F004         	goto	u1911
  1611  0009A0  EFD4  F004         	goto	u1910
  1612  0009A4                     u1911:
  1613  0009A4  EF1D  F005         	goto	l4237
  1614  0009A8                     u1910:
  1615  0009A8                     
  1616                           ;board/button/buttonsm.c: 54:             {;board/button/buttonsm.c: 55:                
      +                           me->state = ST_BSMWAIT;
  1617  0009A8  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1618  0009AE  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1619  0009B4  0E01               	movlw	1
  1620  0009B6  6EDF               	movwf	indf2,c
  1621  0009B8  EF1D  F005         	goto	l4237
  1622  0009BC                     l4229:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;board/button/buttonsm.c: 59:             if (Event_getId(ev) == evBSMDefault)
  1626  0009BC  C0B5  F060         	movff	ButtonSM_processEvent@ev,Event_getId@me
  1627  0009C0  C0B6  F061         	movff	ButtonSM_processEvent@ev+1,Event_getId@me+1
  1628  0009C4  EC51  F015         	call	_Event_getId	;wreg free
  1629  0009C8  0A0B               	xorlw	11
  1630  0009CA  A4D8               	btfss	status,2,c
  1631  0009CC  EFEA  F004         	goto	u1921
  1632  0009D0  EFEC  F004         	goto	u1920
  1633  0009D4                     u1921:
  1634  0009D4  EF1D  F005         	goto	l4237
  1635  0009D8                     u1920:
  1636  0009D8                     
  1637                           ;board/button/buttonsm.c: 60:             {;board/button/buttonsm.c: 61:                
      +                           me->state = ST_BSMWAIT;
  1638  0009D8  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1639  0009DE  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1640  0009E4  0E01               	movlw	1
  1641  0009E6  6EDF               	movwf	indf2,c
  1642  0009E8  EF1D  F005         	goto	l4237
  1643  0009EC                     l4235:
  1644                           
  1645                           ; BSR set to: 0
  1646  0009EC  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1647  0009F2  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1648  0009F8  50DF               	movf	indf2,w,c
  1649  0009FA  6FB7               	movwf	??_ButtonSM_processEvent& (0+255),b
  1650  0009FC  6BB8               	clrf	(??_ButtonSM_processEvent+1)& (0+255),b
  1651                           
  1652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 1, Range of values is 0 to 0
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            4     3 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659  0009FE  51B8               	movf	(??_ButtonSM_processEvent+1)& (0+255),w,b
  1660  000A00  0A00               	xorlw	0	; case 0
  1661  000A02  B4D8               	btfsc	status,2,c
  1662  000A04  EF06  F005         	goto	l5493
  1663  000A08  EF1D  F005         	goto	l4237
  1664  000A0C                     l5493:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 5, Range of values is 0 to 4
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte           16     9 (average)
  1672                           ;	Chosen strategy is simple_byte
  1673  000A0C  51B7               	movf	??_ButtonSM_processEvent& (0+255),w,b
  1674  000A0E  0A00               	xorlw	0	; case 0
  1675  000A10  B4D8               	btfsc	status,2,c
  1676  000A12  EF5D  F004         	goto	l4209
  1677  000A16  0A01               	xorlw	1	; case 1
  1678  000A18  B4D8               	btfsc	status,2,c
  1679  000A1A  EF75  F004         	goto	l4213
  1680  000A1E  0A03               	xorlw	3	; case 2
  1681  000A20  B4D8               	btfsc	status,2,c
  1682  000A22  EF8D  F004         	goto	l4217
  1683  000A26  0A01               	xorlw	1	; case 3
  1684  000A28  B4D8               	btfsc	status,2,c
  1685  000A2A  EFC6  F004         	goto	l4225
  1686  000A2E  0A07               	xorlw	7	; case 4
  1687  000A30  B4D8               	btfsc	status,2,c
  1688  000A32  EFDE  F004         	goto	l4229
  1689  000A36  EF1D  F005         	goto	l4237
  1690  000A3A                     l4237:
  1691                           
  1692                           ;board/button/buttonsm.c: 65:     if (oldState != me->state)
  1693  000A3A  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  1694  000A40  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  1695  000A46  0100               	movlb	0	; () banked
  1696  000A48  51B9               	movf	ButtonSM_processEvent@oldState& (0+255),w,b
  1697  000A4A  18DE               	xorwf	postinc2,w,c
  1698  000A4C  B4D8               	btfsc	status,2,c
  1699  000A4E  EF2B  F005         	goto	u1931
  1700  000A52  EF2D  F005         	goto	u1930
  1701  000A56                     u1931:
  1702  000A56  EF90  F006         	goto	l85
  1703  000A5A                     u1930:
  1704  000A5A                     
  1705                           ; BSR set to: 0
  1706                           ;board/button/buttonsm.c: 68:         switch (me->state)
  1707  000A5A  EF69  F006         	goto	l4267
  1708  000A5E                     l4241:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;board/button/buttonsm.c: 73:                 POST(me, &ButtonSM_processEvent, evBSMPoll
      +                          TM,50,0);
  1712  000A5E  C0BA  F08A         	movff	ButtonSM_processEvent@me,POST@target
  1713  000A62  C0BB  F08B         	movff	ButtonSM_processEvent@me+1,POST@target+1
  1714  000A66  0E8C               	movlw	low _ButtonSM_processEvent
  1715  000A68  6F8C               	movwf	POST@processEvent& (0+255),b
  1716  000A6A  0E08               	movlw	high _ButtonSM_processEvent
  1717  000A6C  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  1718  000A6E  0E0C               	movlw	12
  1719  000A70  6F8E               	movwf	POST@id& (0+255),b
  1720  000A72  0E00               	movlw	0
  1721  000A74  6F90               	movwf	(POST@delay+1)& (0+255),b
  1722  000A76  0E32               	movlw	50
  1723  000A78  6F8F               	movwf	POST@delay& (0+255),b
  1724  000A7A  0E00               	movlw	0
  1725  000A7C  6F91               	movwf	POST@data& (0+255),b
  1726  000A7E  0E00               	movlw	0
  1727  000A80  6F92               	movwf	(POST@data+1)& (0+255),b
  1728  000A82  0E00               	movlw	0
  1729  000A84  6F93               	movwf	(POST@data+2)& (0+255),b
  1730  000A86  0E00               	movlw	0
  1731  000A88  6F94               	movwf	(POST@data+3)& (0+255),b
  1732  000A8A  0E00               	movlw	0
  1733  000A8C  6F95               	movwf	(POST@data+4)& (0+255),b
  1734  000A8E  0E00               	movlw	0
  1735  000A90  6F96               	movwf	(POST@data+5)& (0+255),b
  1736  000A92  0E00               	movlw	0
  1737  000A94  6F97               	movwf	(POST@data+6)& (0+255),b
  1738  000A96  0E00               	movlw	0
  1739  000A98  6F98               	movwf	(POST@data+7)& (0+255),b
  1740  000A9A  EC0D  F00E         	call	_POST	;wreg free
  1741                           
  1742                           ;board/button/buttonsm.c: 74:             break;
  1743  000A9E  EF90  F006         	goto	l85
  1744  000AA2                     l4243:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;board/button/buttonsm.c: 76:                 POST(me, &ButtonSM_processEvent, evBSMDefa
      +                          ult,0,0);
  1748  000AA2  C0BA  F08A         	movff	ButtonSM_processEvent@me,POST@target
  1749  000AA6  C0BB  F08B         	movff	ButtonSM_processEvent@me+1,POST@target+1
  1750  000AAA  0E8C               	movlw	low _ButtonSM_processEvent
  1751  000AAC  6F8C               	movwf	POST@processEvent& (0+255),b
  1752  000AAE  0E08               	movlw	high _ButtonSM_processEvent
  1753  000AB0  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  1754  000AB2  0E0B               	movlw	11
  1755  000AB4  6F8E               	movwf	POST@id& (0+255),b
  1756  000AB6  0E00               	movlw	0
  1757  000AB8  6F90               	movwf	(POST@delay+1)& (0+255),b
  1758  000ABA  0E00               	movlw	0
  1759  000ABC  6F8F               	movwf	POST@delay& (0+255),b
  1760  000ABE  0E00               	movlw	0
  1761  000AC0  6F91               	movwf	POST@data& (0+255),b
  1762  000AC2  0E00               	movlw	0
  1763  000AC4  6F92               	movwf	(POST@data+1)& (0+255),b
  1764  000AC6  0E00               	movlw	0
  1765  000AC8  6F93               	movwf	(POST@data+2)& (0+255),b
  1766  000ACA  0E00               	movlw	0
  1767  000ACC  6F94               	movwf	(POST@data+3)& (0+255),b
  1768  000ACE  0E00               	movlw	0
  1769  000AD0  6F95               	movwf	(POST@data+4)& (0+255),b
  1770  000AD2  0E00               	movlw	0
  1771  000AD4  6F96               	movwf	(POST@data+5)& (0+255),b
  1772  000AD6  0E00               	movlw	0
  1773  000AD8  6F97               	movwf	(POST@data+6)& (0+255),b
  1774  000ADA  0E00               	movlw	0
  1775  000ADC  6F98               	movwf	(POST@data+7)& (0+255),b
  1776  000ADE  EC0D  F00E         	call	_POST	;wreg free
  1777                           
  1778                           ;board/button/buttonsm.c: 77:             break;
  1779  000AE2  EF90  F006         	goto	l85
  1780  000AE6                     l4245:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;board/button/buttonsm.c: 79:                 POST(me, &ButtonSM_processEvent, evBSMDefa
      +                          ult,0,0);
  1784  000AE6  C0BA  F08A         	movff	ButtonSM_processEvent@me,POST@target
  1785  000AEA  C0BB  F08B         	movff	ButtonSM_processEvent@me+1,POST@target+1
  1786  000AEE  0E8C               	movlw	low _ButtonSM_processEvent
  1787  000AF0  6F8C               	movwf	POST@processEvent& (0+255),b
  1788  000AF2  0E08               	movlw	high _ButtonSM_processEvent
  1789  000AF4  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  1790  000AF6  0E0B               	movlw	11
  1791  000AF8  6F8E               	movwf	POST@id& (0+255),b
  1792  000AFA  0E00               	movlw	0
  1793  000AFC  6F90               	movwf	(POST@delay+1)& (0+255),b
  1794  000AFE  0E00               	movlw	0
  1795  000B00  6F8F               	movwf	POST@delay& (0+255),b
  1796  000B02  0E00               	movlw	0
  1797  000B04  6F91               	movwf	POST@data& (0+255),b
  1798  000B06  0E00               	movlw	0
  1799  000B08  6F92               	movwf	(POST@data+1)& (0+255),b
  1800  000B0A  0E00               	movlw	0
  1801  000B0C  6F93               	movwf	(POST@data+2)& (0+255),b
  1802  000B0E  0E00               	movlw	0
  1803  000B10  6F94               	movwf	(POST@data+3)& (0+255),b
  1804  000B12  0E00               	movlw	0
  1805  000B14  6F95               	movwf	(POST@data+4)& (0+255),b
  1806  000B16  0E00               	movlw	0
  1807  000B18  6F96               	movwf	(POST@data+5)& (0+255),b
  1808  000B1A  0E00               	movlw	0
  1809  000B1C  6F97               	movwf	(POST@data+6)& (0+255),b
  1810  000B1E  0E00               	movlw	0
  1811  000B20  6F98               	movwf	(POST@data+7)& (0+255),b
  1812  000B22  EC0D  F00E         	call	_POST	;wreg free
  1813  000B26                     
  1814                           ;board/button/buttonsm.c: 80:                 if (me->actualState != ST_BSMPRESSED)
  1815  000B26  0100               	movlb	0	; () banked
  1816  000B28  EE20 F003          	lfsr	2,3
  1817  000B2C  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1818  000B2E  26D9               	addwf	fsr2l,f,c
  1819  000B30  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1820  000B32  22DA               	addwfc	fsr2h,f,c
  1821  000B34  0E03               	movlw	3
  1822  000B36  18DE               	xorwf	postinc2,w,c
  1823  000B38  B4D8               	btfsc	status,2,c
  1824  000B3A  EFA1  F005         	goto	u1941
  1825  000B3E  EFA3  F005         	goto	u1940
  1826  000B42                     u1941:
  1827  000B42  EF90  F006         	goto	l85
  1828  000B46                     u1940:
  1829  000B46                     
  1830                           ; BSR set to: 0
  1831                           ;board/button/buttonsm.c: 81:                 {;board/button/buttonsm.c: 82:            
      +                                   if (me->observerCB != ((void*)0))
  1832  000B46  EE20 F004          	lfsr	2,4
  1833  000B4A  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1834  000B4C  26D9               	addwf	fsr2l,f,c
  1835  000B4E  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1836  000B50  22DA               	addwfc	fsr2h,f,c
  1837  000B52  50DE               	movf	postinc2,w,c
  1838  000B54  10DE               	iorwf	postinc2,w,c
  1839  000B56  B4D8               	btfsc	status,2,c
  1840  000B58  EFB0  F005         	goto	u1951
  1841  000B5C  EFB2  F005         	goto	u1950
  1842  000B60                     u1951:
  1843  000B60  EF90  F006         	goto	l76
  1844  000B64                     u1950:
  1845  000B64                     
  1846                           ; BSR set to: 0
  1847                           ;board/button/buttonsm.c: 83:                     {;board/button/buttonsm.c: 84:        
      +                                           me->observerCB(me->observer,Button_getId(me->button),1);
  1848  000B64  EE20 F006          	lfsr	2,6
  1849  000B68  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1850  000B6A  26D9               	addwf	fsr2l,f,c
  1851  000B6C  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1852  000B6E  22DA               	addwfc	fsr2h,f,c
  1853  000B70  006F FF78  F066    	movff	postinc2,BLControl_onButton@me
  1854  000B76  006F FF74  F067    	movff	postdec2,BLControl_onButton@me+1
  1855  000B7C  EE20 F001          	lfsr	2,1
  1856  000B80  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1857  000B82  26D9               	addwf	fsr2l,f,c
  1858  000B84  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1859  000B86  22DA               	addwfc	fsr2h,f,c
  1860  000B88  006F FF78  F060    	movff	postinc2,Button_getId@me
  1861  000B8E  006F FF74  F061    	movff	postdec2,Button_getId@me+1
  1862  000B94  EC59  F015         	call	_Button_getId	;wreg free
  1863  000B98  0100               	movlb	0	; () banked
  1864  000B9A  6F68               	movwf	BLControl_onButton@buttonId& (0+255),b
  1865  000B9C  0E01               	movlw	1
  1866  000B9E  6F69               	movwf	BLControl_onButton@pressed& (0+255),b
  1867  000BA0  EE20 F004          	lfsr	2,4
  1868  000BA4  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1869  000BA6  26D9               	addwf	fsr2l,f,c
  1870  000BA8  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1871  000BAA  22DA               	addwfc	fsr2h,f,c
  1872  000BAC  D802               	call	u1968
  1873  000BAE  EFE3  F005         	goto	u1969
  1874  000BB2                     u1968:
  1875  000BB2  0005               	push	
  1876  000BB4  6EFA               	movwf	pclath,c
  1877  000BB6  50DE               	movf	postinc2,w,c
  1878  000BB8  6EFD               	movwf	tosl,c
  1879  000BBA  50DE               	movf	postinc2,w,c
  1880  000BBC  6EFE               	movwf	tosh,c
  1881  000BBE  50F8               	movf	tblptru,w,c
  1882  000BC0  6EFF               	movwf	tosu,c
  1883  000BC2  50FA               	movf	pclath,w,c
  1884  000BC4  0012               	return		;indir
  1885  000BC6                     u1969:
  1886  000BC6                     
  1887                           ;board/button/buttonsm.c: 85:                         me->actualState = ST_BSMPRESSED;
  1888  000BC6  0100               	movlb	0	; () banked
  1889  000BC8  EE20 F003          	lfsr	2,3
  1890  000BCC  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1891  000BCE  26D9               	addwf	fsr2l,f,c
  1892  000BD0  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1893  000BD2  22DA               	addwfc	fsr2h,f,c
  1894  000BD4  0E03               	movlw	3
  1895  000BD6  6EDF               	movwf	indf2,c
  1896  000BD8  EF90  F006         	goto	l85
  1897  000BDC                     l4255:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;board/button/buttonsm.c: 90:                 POST(me, &ButtonSM_processEvent, evBSMDefa
      +                          ult,0,0);
  1901  000BDC  C0BA  F08A         	movff	ButtonSM_processEvent@me,POST@target
  1902  000BE0  C0BB  F08B         	movff	ButtonSM_processEvent@me+1,POST@target+1
  1903  000BE4  0E8C               	movlw	low _ButtonSM_processEvent
  1904  000BE6  6F8C               	movwf	POST@processEvent& (0+255),b
  1905  000BE8  0E08               	movlw	high _ButtonSM_processEvent
  1906  000BEA  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  1907  000BEC  0E0B               	movlw	11
  1908  000BEE  6F8E               	movwf	POST@id& (0+255),b
  1909  000BF0  0E00               	movlw	0
  1910  000BF2  6F90               	movwf	(POST@delay+1)& (0+255),b
  1911  000BF4  0E00               	movlw	0
  1912  000BF6  6F8F               	movwf	POST@delay& (0+255),b
  1913  000BF8  0E00               	movlw	0
  1914  000BFA  6F91               	movwf	POST@data& (0+255),b
  1915  000BFC  0E00               	movlw	0
  1916  000BFE  6F92               	movwf	(POST@data+1)& (0+255),b
  1917  000C00  0E00               	movlw	0
  1918  000C02  6F93               	movwf	(POST@data+2)& (0+255),b
  1919  000C04  0E00               	movlw	0
  1920  000C06  6F94               	movwf	(POST@data+3)& (0+255),b
  1921  000C08  0E00               	movlw	0
  1922  000C0A  6F95               	movwf	(POST@data+4)& (0+255),b
  1923  000C0C  0E00               	movlw	0
  1924  000C0E  6F96               	movwf	(POST@data+5)& (0+255),b
  1925  000C10  0E00               	movlw	0
  1926  000C12  6F97               	movwf	(POST@data+6)& (0+255),b
  1927  000C14  0E00               	movlw	0
  1928  000C16  6F98               	movwf	(POST@data+7)& (0+255),b
  1929  000C18  EC0D  F00E         	call	_POST	;wreg free
  1930  000C1C                     
  1931                           ;board/button/buttonsm.c: 91:                 if (me->actualState != ST_BSMRELEASED)
  1932  000C1C  0100               	movlb	0	; () banked
  1933  000C1E  EE20 F003          	lfsr	2,3
  1934  000C22  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1935  000C24  26D9               	addwf	fsr2l,f,c
  1936  000C26  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1937  000C28  22DA               	addwfc	fsr2h,f,c
  1938  000C2A  0E04               	movlw	4
  1939  000C2C  18DE               	xorwf	postinc2,w,c
  1940  000C2E  B4D8               	btfsc	status,2,c
  1941  000C30  EF1C  F006         	goto	u1971
  1942  000C34  EF1E  F006         	goto	u1970
  1943  000C38                     u1971:
  1944  000C38  EF90  F006         	goto	l85
  1945  000C3C                     u1970:
  1946  000C3C                     
  1947                           ; BSR set to: 0
  1948                           ;board/button/buttonsm.c: 92:                 {;board/button/buttonsm.c: 93:            
      +                                   if (me->observerCB != ((void*)0))
  1949  000C3C  EE20 F004          	lfsr	2,4
  1950  000C40  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1951  000C42  26D9               	addwf	fsr2l,f,c
  1952  000C44  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1953  000C46  22DA               	addwfc	fsr2h,f,c
  1954  000C48  50DE               	movf	postinc2,w,c
  1955  000C4A  10DE               	iorwf	postinc2,w,c
  1956  000C4C  B4D8               	btfsc	status,2,c
  1957  000C4E  EF2B  F006         	goto	u1981
  1958  000C52  EF2D  F006         	goto	u1980
  1959  000C56                     u1981:
  1960  000C56  EF90  F006         	goto	l76
  1961  000C5A                     u1980:
  1962  000C5A                     
  1963                           ; BSR set to: 0
  1964                           ;board/button/buttonsm.c: 94:                     {;board/button/buttonsm.c: 95:        
      +                                           me->observerCB(me->observer,Button_getId(me->button),0);
  1965  000C5A  EE20 F006          	lfsr	2,6
  1966  000C5E  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1967  000C60  26D9               	addwf	fsr2l,f,c
  1968  000C62  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1969  000C64  22DA               	addwfc	fsr2h,f,c
  1970  000C66  006F FF78  F066    	movff	postinc2,BLControl_onButton@me
  1971  000C6C  006F FF74  F067    	movff	postdec2,BLControl_onButton@me+1
  1972  000C72  EE20 F001          	lfsr	2,1
  1973  000C76  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1974  000C78  26D9               	addwf	fsr2l,f,c
  1975  000C7A  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1976  000C7C  22DA               	addwfc	fsr2h,f,c
  1977  000C7E  006F FF78  F060    	movff	postinc2,Button_getId@me
  1978  000C84  006F FF74  F061    	movff	postdec2,Button_getId@me+1
  1979  000C8A  EC59  F015         	call	_Button_getId	;wreg free
  1980  000C8E  0100               	movlb	0	; () banked
  1981  000C90  6F68               	movwf	BLControl_onButton@buttonId& (0+255),b
  1982  000C92  0E00               	movlw	0
  1983  000C94  6F69               	movwf	BLControl_onButton@pressed& (0+255),b
  1984  000C96  EE20 F004          	lfsr	2,4
  1985  000C9A  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  1986  000C9C  26D9               	addwf	fsr2l,f,c
  1987  000C9E  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  1988  000CA0  22DA               	addwfc	fsr2h,f,c
  1989  000CA2  D802               	call	u1998
  1990  000CA4  EF5E  F006         	goto	u1999
  1991  000CA8                     u1998:
  1992  000CA8  0005               	push	
  1993  000CAA  6EFA               	movwf	pclath,c
  1994  000CAC  50DE               	movf	postinc2,w,c
  1995  000CAE  6EFD               	movwf	tosl,c
  1996  000CB0  50DE               	movf	postinc2,w,c
  1997  000CB2  6EFE               	movwf	tosh,c
  1998  000CB4  50F8               	movf	tblptru,w,c
  1999  000CB6  6EFF               	movwf	tosu,c
  2000  000CB8  50FA               	movf	pclath,w,c
  2001  000CBA  0012               	return		;indir
  2002  000CBC                     u1999:
  2003  000CBC                     
  2004                           ;board/button/buttonsm.c: 96:                         me->actualState = ST_BSMRELEASED;
  2005  000CBC  0100               	movlb	0	; () banked
  2006  000CBE  EE20 F003          	lfsr	2,3
  2007  000CC2  51BA               	movf	ButtonSM_processEvent@me& (0+255),w,b
  2008  000CC4  26D9               	addwf	fsr2l,f,c
  2009  000CC6  51BB               	movf	(ButtonSM_processEvent@me+1)& (0+255),w,b
  2010  000CC8  22DA               	addwfc	fsr2h,f,c
  2011  000CCA  0E04               	movlw	4
  2012  000CCC  6EDF               	movwf	indf2,c
  2013  000CCE  EF90  F006         	goto	l85
  2014  000CD2                     l4267:
  2015                           
  2016                           ; BSR set to: 0
  2017  000CD2  0060  F2EB  FFD9   	movff	ButtonSM_processEvent@me,fsr2l
  2018  000CD8  0060  F2EF  FFDA   	movff	ButtonSM_processEvent@me+1,fsr2h
  2019  000CDE  50DF               	movf	indf2,w,c
  2020  000CE0  6FB7               	movwf	??_ButtonSM_processEvent& (0+255),b
  2021  000CE2  6BB8               	clrf	(??_ButtonSM_processEvent+1)& (0+255),b
  2022                           
  2023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 1, Range of values is 0 to 0
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte            4     3 (average)
  2029                           ;	Chosen strategy is simple_byte
  2030  000CE4  51B8               	movf	(??_ButtonSM_processEvent+1)& (0+255),w,b
  2031  000CE6  0A00               	xorlw	0	; case 0
  2032  000CE8  B4D8               	btfsc	status,2,c
  2033  000CEA  EF79  F006         	goto	l5495
  2034  000CEE  EF90  F006         	goto	l85
  2035  000CF2                     l5495:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 5, Range of values is 0 to 4
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte           16     9 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  000CF2  51B7               	movf	??_ButtonSM_processEvent& (0+255),w,b
  2045  000CF4  0A00               	xorlw	0	; case 0
  2046  000CF6  B4D8               	btfsc	status,2,c
  2047  000CF8  EF90  F006         	goto	l85
  2048  000CFC  0A01               	xorlw	1	; case 1
  2049  000CFE  B4D8               	btfsc	status,2,c
  2050  000D00  EF2F  F005         	goto	l4241
  2051  000D04  0A03               	xorlw	3	; case 2
  2052  000D06  B4D8               	btfsc	status,2,c
  2053  000D08  EF51  F005         	goto	l4243
  2054  000D0C  0A01               	xorlw	1	; case 3
  2055  000D0E  B4D8               	btfsc	status,2,c
  2056  000D10  EF73  F005         	goto	l4245
  2057  000D14  0A07               	xorlw	7	; case 4
  2058  000D16  B4D8               	btfsc	status,2,c
  2059  000D18  EFEE  F005         	goto	l4255
  2060  000D1C  EF90  F006         	goto	l85
  2061  000D20                     l76:
  2062  000D20                     l85:
  2063  000D20  0012               	return		;funcret
  2064  000D22                     __end_of_ButtonSM_processEvent:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _commControl_processEvent *****************
  2068 ;; Defined at:
  2069 ;;		line 43 in file "driveControl/commControl.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  ev              2   85[BANK0 ] PTR struct Event_
  2072 ;;		 -> XF_executeOnce@ev(15), 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  me              2   99[BANK0 ] PTR struct CommControl_
  2075 ;;		 -> theFactory(29), NULL(0), 
  2076 ;;  processed       1   98[BANK0 ] _Bool 
  2077 ;;  oldASMState     1   97[BANK0 ] enum E23096
  2078 ;;  oldSSMState     1   96[BANK0 ] enum E23091
  2079 ;;  oldCSMState     1   95[BANK0 ] enum E23083
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      _Bool 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:       16 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 11
  2096 ;; This function calls:
  2097 ;;		_Event_getData
  2098 ;;		_Event_getId
  2099 ;;		_POST
  2100 ;;		_readCANFrame
  2101 ;;		_sendAliveFrame
  2102 ;;		_sendSpeedFrame
  2103 ;;		_setBrake
  2104 ;;		_setPower
  2105 ;;		_storeSetup
  2106 ;; This function is called by:
  2107 ;;		_commControl_startBehaviour
  2108 ;;		_readCANFrame
  2109 ;;		_XF_executeOnce
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text6
  2114  00001E                     __ptext6:
  2115                           	callstack 0
  2116  00001E                     _commControl_processEvent:
  2117                           	callstack 18
  2118  00001E                     
  2119                           ;driveControl/commControl.c: 44:     CommControl* me = (CommControl*) ev->target;
  2120  00001E  0100               	movlb	0	; () banked
  2121  000020  EE20 F003          	lfsr	2,3
  2122  000024  51B5               	movf	commControl_processEvent@ev& (0+255),w,b
  2123  000026  26D9               	addwf	fsr2l,f,c
  2124  000028  51B6               	movf	(commControl_processEvent@ev+1)& (0+255),w,b
  2125  00002A  22DA               	addwfc	fsr2h,f,c
  2126  00002C  006F FF78  F0C3    	movff	postinc2,commControl_processEvent@me
  2127  000032  006F FF74  F0C4    	movff	postdec2,commControl_processEvent@me+1
  2128  000038                     
  2129                           ; BSR set to: 0
  2130                           ;driveControl/commControl.c: 45:     _Bool processed = 0;
  2131  000038  0E00               	movlw	0
  2132  00003A  6FC2               	movwf	commControl_processEvent@processed& (0+255),b
  2133  00003C                     
  2134                           ; BSR set to: 0
  2135                           ;driveControl/commControl.c: 46:     CommSMState oldCSMState = me->commSM_State;
  2136  00003C  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2137  000042  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2138  000048  50DF               	movf	indf2,w,c
  2139  00004A  6FBF               	movwf	commControl_processEvent@oldCSMState& (0+255),b
  2140  00004C                     
  2141                           ; BSR set to: 0
  2142                           ;driveControl/commControl.c: 47:     SpeedSMState oldSSMState = me->speedSM_State;
  2143  00004C  EE20 F001          	lfsr	2,1
  2144  000050  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2145  000052  26D9               	addwf	fsr2l,f,c
  2146  000054  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2147  000056  22DA               	addwfc	fsr2h,f,c
  2148  000058  50DF               	movf	indf2,w,c
  2149  00005A  6FC0               	movwf	commControl_processEvent@oldSSMState& (0+255),b
  2150  00005C                     
  2151                           ; BSR set to: 0
  2152                           ;driveControl/commControl.c: 48:     AliveSMState oldASMState = me->aliveSM_State;
  2153  00005C  EE20 F002          	lfsr	2,2
  2154  000060  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2155  000062  26D9               	addwf	fsr2l,f,c
  2156  000064  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2157  000066  22DA               	addwfc	fsr2h,f,c
  2158  000068  50DF               	movf	indf2,w,c
  2159  00006A  6FC1               	movwf	commControl_processEvent@oldASMState& (0+255),b
  2160                           
  2161                           ;driveControl/commControl.c: 53:     switch (me->aliveSM_State) {
  2162  00006C  EF83  F000         	goto	l4329
  2163  000070                     l4315:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;driveControl/commControl.c: 55:             if (Event_getId(ev) == evAInit) {
  2167  000070  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2168  000074  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2169  000078  EC51  F015         	call	_Event_getId	;wreg free
  2170  00007C  0A2F               	xorlw	47
  2171  00007E  A4D8               	btfss	status,2,c
  2172  000080  EF44  F000         	goto	u2011
  2173  000084  EF46  F000         	goto	u2010
  2174  000088                     u2011:
  2175  000088  EFA2  F000         	goto	l4331
  2176  00008C                     u2010:
  2177  00008C                     
  2178                           ;driveControl/commControl.c: 56:                 me->aliveSM_State = ST_ASMWAIT;
  2179  00008C  0100               	movlb	0	; () banked
  2180  00008E  EE20 F002          	lfsr	2,2
  2181  000092  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2182  000094  26D9               	addwf	fsr2l,f,c
  2183  000096  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2184  000098  22DA               	addwfc	fsr2h,f,c
  2185  00009A  0E1F               	movlw	31
  2186  00009C  6EDF               	movwf	indf2,c
  2187  00009E  EFA2  F000         	goto	l4331
  2188  0000A2                     l4319:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;driveControl/commControl.c: 60:             if (Event_getId(ev) == evATM) {
  2192  0000A2  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2193  0000A6  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2194  0000AA  EC51  F015         	call	_Event_getId	;wreg free
  2195  0000AE  0A30               	xorlw	48
  2196  0000B0  A4D8               	btfss	status,2,c
  2197  0000B2  EF5D  F000         	goto	u2021
  2198  0000B6  EF5F  F000         	goto	u2020
  2199  0000BA                     u2021:
  2200  0000BA  EFA2  F000         	goto	l4331
  2201  0000BE                     u2020:
  2202  0000BE                     
  2203                           ;driveControl/commControl.c: 61:                 me->aliveSM_State = ST_ASMALIVE;
  2204  0000BE  0100               	movlb	0	; () banked
  2205  0000C0  EE20 F002          	lfsr	2,2
  2206  0000C4  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2207  0000C6  26D9               	addwf	fsr2l,f,c
  2208  0000C8  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2209  0000CA  22DA               	addwfc	fsr2h,f,c
  2210  0000CC  0E20               	movlw	32
  2211  0000CE  6EDF               	movwf	indf2,c
  2212  0000D0  EFA2  F000         	goto	l4331
  2213  0000D4                     l4323:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;driveControl/commControl.c: 65:             if (Event_getId(ev) == evADefault) {
  2217  0000D4  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2218  0000D8  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2219  0000DC  EC51  F015         	call	_Event_getId	;wreg free
  2220  0000E0  0A31               	xorlw	49
  2221  0000E2  A4D8               	btfss	status,2,c
  2222  0000E4  EF76  F000         	goto	u2031
  2223  0000E8  EF78  F000         	goto	u2030
  2224  0000EC                     u2031:
  2225  0000EC  EFA2  F000         	goto	l4331
  2226  0000F0                     u2030:
  2227  0000F0                     
  2228                           ;driveControl/commControl.c: 66:                 me->aliveSM_State = ST_ASMWAIT;
  2229  0000F0  0100               	movlb	0	; () banked
  2230  0000F2  EE20 F002          	lfsr	2,2
  2231  0000F6  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2232  0000F8  26D9               	addwf	fsr2l,f,c
  2233  0000FA  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2234  0000FC  22DA               	addwfc	fsr2h,f,c
  2235  0000FE  0E1F               	movlw	31
  2236  000100  6EDF               	movwf	indf2,c
  2237  000102  EFA2  F000         	goto	l4331
  2238  000106                     l4329:
  2239                           
  2240                           ; BSR set to: 0
  2241  000106  EE20 F002          	lfsr	2,2
  2242  00010A  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2243  00010C  26D9               	addwf	fsr2l,f,c
  2244  00010E  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2245  000110  22DA               	addwfc	fsr2h,f,c
  2246  000112  50DF               	movf	indf2,w,c
  2247  000114  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  2248  000116  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  2249                           
  2250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2251                           ; Switch size 1, requested type "simple"
  2252                           ; Number of cases is 1, Range of values is 0 to 0
  2253                           ; switch strategies available:
  2254                           ; Name         Instructions Cycles
  2255                           ; simple_byte            4     3 (average)
  2256                           ;	Chosen strategy is simple_byte
  2257  000118  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  2258  00011A  0A00               	xorlw	0	; case 0
  2259  00011C  B4D8               	btfsc	status,2,c
  2260  00011E  EF93  F000         	goto	l5497
  2261  000122  EFA2  F000         	goto	l4331
  2262  000126                     l5497:
  2263                           
  2264                           ; BSR set to: 0
  2265                           ; Switch size 1, requested type "simple"
  2266                           ; Number of cases is 3, Range of values is 30 to 32
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte           10     6 (average)
  2270                           ;	Chosen strategy is simple_byte
  2271  000126  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2272  000128  0A1E               	xorlw	30	; case 30
  2273  00012A  B4D8               	btfsc	status,2,c
  2274  00012C  EF38  F000         	goto	l4315
  2275  000130  0A01               	xorlw	1	; case 31
  2276  000132  B4D8               	btfsc	status,2,c
  2277  000134  EF51  F000         	goto	l4319
  2278  000138  0A3F               	xorlw	63	; case 32
  2279  00013A  B4D8               	btfsc	status,2,c
  2280  00013C  EF6A  F000         	goto	l4323
  2281  000140  EFA2  F000         	goto	l4331
  2282  000144                     l4331:
  2283                           
  2284                           ;driveControl/commControl.c: 72:     if (oldASMState != me->aliveSM_State) {
  2285  000144  0100               	movlb	0	; () banked
  2286  000146  EE20 F002          	lfsr	2,2
  2287  00014A  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2288  00014C  26D9               	addwf	fsr2l,f,c
  2289  00014E  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2290  000150  22DA               	addwfc	fsr2h,f,c
  2291  000152  51C1               	movf	commControl_processEvent@oldASMState& (0+255),w,b
  2292  000154  18DE               	xorwf	postinc2,w,c
  2293  000156  B4D8               	btfsc	status,2,c
  2294  000158  EFB0  F000         	goto	u2041
  2295  00015C  EFB2  F000         	goto	u2040
  2296  000160                     u2041:
  2297  000160  EF20  F001         	goto	l4345
  2298  000164                     u2040:
  2299  000164                     
  2300                           ; BSR set to: 0
  2301                           ;driveControl/commControl.c: 73:         processed = 1;
  2302  000164  0E01               	movlw	1
  2303  000166  6FC2               	movwf	commControl_processEvent@processed& (0+255),b
  2304                           
  2305                           ;driveControl/commControl.c: 74:         switch (me->aliveSM_State) {
  2306  000168  EF01  F001         	goto	l4343
  2307  00016C                     l4335:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;driveControl/commControl.c: 79:                 POST(me, &commControl_processEvent, evA
      +                          TM, 50, 0);
  2311  00016C  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  2312  000170  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  2313  000174  0E1E               	movlw	low _commControl_processEvent
  2314  000176  6F8C               	movwf	POST@processEvent& (0+255),b
  2315  000178  0E00               	movlw	high _commControl_processEvent
  2316  00017A  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  2317  00017C  0E30               	movlw	48
  2318  00017E  6F8E               	movwf	POST@id& (0+255),b
  2319  000180  0E00               	movlw	0
  2320  000182  6F90               	movwf	(POST@delay+1)& (0+255),b
  2321  000184  0E32               	movlw	50
  2322  000186  6F8F               	movwf	POST@delay& (0+255),b
  2323  000188  0E00               	movlw	0
  2324  00018A  6F91               	movwf	POST@data& (0+255),b
  2325  00018C  0E00               	movlw	0
  2326  00018E  6F92               	movwf	(POST@data+1)& (0+255),b
  2327  000190  0E00               	movlw	0
  2328  000192  6F93               	movwf	(POST@data+2)& (0+255),b
  2329  000194  0E00               	movlw	0
  2330  000196  6F94               	movwf	(POST@data+3)& (0+255),b
  2331  000198  0E00               	movlw	0
  2332  00019A  6F95               	movwf	(POST@data+4)& (0+255),b
  2333  00019C  0E00               	movlw	0
  2334  00019E  6F96               	movwf	(POST@data+5)& (0+255),b
  2335  0001A0  0E00               	movlw	0
  2336  0001A2  6F97               	movwf	(POST@data+6)& (0+255),b
  2337  0001A4  0E00               	movlw	0
  2338  0001A6  6F98               	movwf	(POST@data+7)& (0+255),b
  2339  0001A8  EC0D  F00E         	call	_POST	;wreg free
  2340                           
  2341                           ;driveControl/commControl.c: 80:                 break;
  2342  0001AC  EF20  F001         	goto	l4345
  2343  0001B0                     l4337:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;driveControl/commControl.c: 82:                 sendAliveFrame(me);
  2347  0001B0  C0C3  F060         	movff	commControl_processEvent@me,sendAliveFrame@me
  2348  0001B4  C0C4  F061         	movff	commControl_processEvent@me+1,sendAliveFrame@me+1
  2349  0001B8  ECA0  F015         	call	_sendAliveFrame	;wreg free
  2350  0001BC                     
  2351                           ;driveControl/commControl.c: 83:                 POST(me, &commControl_processEvent, evA
      +                          Default, 50, 0);
  2352  0001BC  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  2353  0001C0  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  2354  0001C4  0E1E               	movlw	low _commControl_processEvent
  2355  0001C6  0100               	movlb	0	; () banked
  2356  0001C8  6F8C               	movwf	POST@processEvent& (0+255),b
  2357  0001CA  0E00               	movlw	high _commControl_processEvent
  2358  0001CC  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  2359  0001CE  0E31               	movlw	49
  2360  0001D0  6F8E               	movwf	POST@id& (0+255),b
  2361  0001D2  0E00               	movlw	0
  2362  0001D4  6F90               	movwf	(POST@delay+1)& (0+255),b
  2363  0001D6  0E32               	movlw	50
  2364  0001D8  6F8F               	movwf	POST@delay& (0+255),b
  2365  0001DA  0E00               	movlw	0
  2366  0001DC  6F91               	movwf	POST@data& (0+255),b
  2367  0001DE  0E00               	movlw	0
  2368  0001E0  6F92               	movwf	(POST@data+1)& (0+255),b
  2369  0001E2  0E00               	movlw	0
  2370  0001E4  6F93               	movwf	(POST@data+2)& (0+255),b
  2371  0001E6  0E00               	movlw	0
  2372  0001E8  6F94               	movwf	(POST@data+3)& (0+255),b
  2373  0001EA  0E00               	movlw	0
  2374  0001EC  6F95               	movwf	(POST@data+4)& (0+255),b
  2375  0001EE  0E00               	movlw	0
  2376  0001F0  6F96               	movwf	(POST@data+5)& (0+255),b
  2377  0001F2  0E00               	movlw	0
  2378  0001F4  6F97               	movwf	(POST@data+6)& (0+255),b
  2379  0001F6  0E00               	movlw	0
  2380  0001F8  6F98               	movwf	(POST@data+7)& (0+255),b
  2381  0001FA  EC0D  F00E         	call	_POST	;wreg free
  2382                           
  2383                           ;driveControl/commControl.c: 84:                 break;
  2384  0001FE  EF20  F001         	goto	l4345
  2385  000202                     l4343:
  2386                           
  2387                           ; BSR set to: 0
  2388  000202  EE20 F002          	lfsr	2,2
  2389  000206  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2390  000208  26D9               	addwf	fsr2l,f,c
  2391  00020A  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2392  00020C  22DA               	addwfc	fsr2h,f,c
  2393  00020E  50DF               	movf	indf2,w,c
  2394  000210  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  2395  000212  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  2396                           
  2397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2398                           ; Switch size 1, requested type "simple"
  2399                           ; Number of cases is 1, Range of values is 0 to 0
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte            4     3 (average)
  2403                           ;	Chosen strategy is simple_byte
  2404  000214  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  2405  000216  0A00               	xorlw	0	; case 0
  2406  000218  B4D8               	btfsc	status,2,c
  2407  00021A  EF11  F001         	goto	l5499
  2408  00021E  EF20  F001         	goto	l4345
  2409  000222                     l5499:
  2410                           
  2411                           ; BSR set to: 0
  2412                           ; Switch size 1, requested type "simple"
  2413                           ; Number of cases is 3, Range of values is 30 to 32
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte           10     6 (average)
  2417                           ;	Chosen strategy is simple_byte
  2418  000222  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2419  000224  0A1E               	xorlw	30	; case 30
  2420  000226  B4D8               	btfsc	status,2,c
  2421  000228  EF20  F001         	goto	l4345
  2422  00022C  0A01               	xorlw	1	; case 31
  2423  00022E  B4D8               	btfsc	status,2,c
  2424  000230  EFB6  F000         	goto	l4335
  2425  000234  0A3F               	xorlw	63	; case 32
  2426  000236  B4D8               	btfsc	status,2,c
  2427  000238  EFD8  F000         	goto	l4337
  2428  00023C  EF20  F001         	goto	l4345
  2429  000240                     l4345:
  2430                           
  2431                           ;driveControl/commControl.c: 94:     if (processed == 0)
  2432  000240  0100               	movlb	0	; () banked
  2433  000242  51C2               	movf	commControl_processEvent@processed& (0+255),w,b
  2434  000244  A4D8               	btfss	status,2,c
  2435  000246  EF27  F001         	goto	u2051
  2436  00024A  EF29  F001         	goto	u2050
  2437  00024E                     u2051:
  2438  00024E  EF13  F002         	goto	l4379
  2439  000252                     u2050:
  2440  000252  EF76  F001         	goto	l4363
  2441  000256                     l4349:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;driveControl/commControl.c: 98:                 if (Event_getId(ev) == evSInit) {
  2445  000256  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2446  00025A  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2447  00025E  EC51  F015         	call	_Event_getId	;wreg free
  2448  000262  0A2C               	xorlw	44
  2449  000264  A4D8               	btfss	status,2,c
  2450  000266  EF37  F001         	goto	u2061
  2451  00026A  EF39  F001         	goto	u2060
  2452  00026E                     u2061:
  2453  00026E  EF95  F001         	goto	l4365
  2454  000272                     u2060:
  2455  000272                     
  2456                           ;driveControl/commControl.c: 99:                     me->speedSM_State = ST_SSMWAIT;
  2457  000272  0100               	movlb	0	; () banked
  2458  000274  EE20 F001          	lfsr	2,1
  2459  000278  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2460  00027A  26D9               	addwf	fsr2l,f,c
  2461  00027C  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2462  00027E  22DA               	addwfc	fsr2h,f,c
  2463  000280  0E15               	movlw	21
  2464  000282  6EDF               	movwf	indf2,c
  2465  000284  EF95  F001         	goto	l4365
  2466  000288                     l4353:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;driveControl/commControl.c: 103:                 if (Event_getId(ev) == evSTM) {
  2470  000288  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2471  00028C  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2472  000290  EC51  F015         	call	_Event_getId	;wreg free
  2473  000294  0A2D               	xorlw	45
  2474  000296  A4D8               	btfss	status,2,c
  2475  000298  EF50  F001         	goto	u2071
  2476  00029C  EF52  F001         	goto	u2070
  2477  0002A0                     u2071:
  2478  0002A0  EF95  F001         	goto	l4365
  2479  0002A4                     u2070:
  2480  0002A4                     
  2481                           ;driveControl/commControl.c: 104:                     me->speedSM_State = ST_SSMSPEED;
  2482  0002A4  0100               	movlb	0	; () banked
  2483  0002A6  EE20 F001          	lfsr	2,1
  2484  0002AA  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2485  0002AC  26D9               	addwf	fsr2l,f,c
  2486  0002AE  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2487  0002B0  22DA               	addwfc	fsr2h,f,c
  2488  0002B2  0E16               	movlw	22
  2489  0002B4  6EDF               	movwf	indf2,c
  2490  0002B6  EF95  F001         	goto	l4365
  2491  0002BA                     l4357:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;driveControl/commControl.c: 108:                 if (Event_getId(ev) == evSDefault) {
  2495  0002BA  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2496  0002BE  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2497  0002C2  EC51  F015         	call	_Event_getId	;wreg free
  2498  0002C6  0A2E               	xorlw	46
  2499  0002C8  A4D8               	btfss	status,2,c
  2500  0002CA  EF69  F001         	goto	u2081
  2501  0002CE  EF6B  F001         	goto	u2080
  2502  0002D2                     u2081:
  2503  0002D2  EF95  F001         	goto	l4365
  2504  0002D6                     u2080:
  2505  0002D6                     
  2506                           ;driveControl/commControl.c: 109:                     me->speedSM_State = ST_SSMWAIT;
  2507  0002D6  0100               	movlb	0	; () banked
  2508  0002D8  EE20 F001          	lfsr	2,1
  2509  0002DC  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2510  0002DE  26D9               	addwf	fsr2l,f,c
  2511  0002E0  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2512  0002E2  22DA               	addwfc	fsr2h,f,c
  2513  0002E4  0E15               	movlw	21
  2514  0002E6  6EDF               	movwf	indf2,c
  2515  0002E8  EF95  F001         	goto	l4365
  2516  0002EC                     l4363:
  2517                           
  2518                           ; BSR set to: 0
  2519  0002EC  EE20 F001          	lfsr	2,1
  2520  0002F0  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2521  0002F2  26D9               	addwf	fsr2l,f,c
  2522  0002F4  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2523  0002F6  22DA               	addwfc	fsr2h,f,c
  2524  0002F8  50DF               	movf	indf2,w,c
  2525  0002FA  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  2526  0002FC  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  2527                           
  2528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2529                           ; Switch size 1, requested type "simple"
  2530                           ; Number of cases is 1, Range of values is 0 to 0
  2531                           ; switch strategies available:
  2532                           ; Name         Instructions Cycles
  2533                           ; simple_byte            4     3 (average)
  2534                           ;	Chosen strategy is simple_byte
  2535  0002FE  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  2536  000300  0A00               	xorlw	0	; case 0
  2537  000302  B4D8               	btfsc	status,2,c
  2538  000304  EF86  F001         	goto	l5501
  2539  000308  EF95  F001         	goto	l4365
  2540  00030C                     l5501:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ; Switch size 1, requested type "simple"
  2544                           ; Number of cases is 3, Range of values is 20 to 22
  2545                           ; switch strategies available:
  2546                           ; Name         Instructions Cycles
  2547                           ; simple_byte           10     6 (average)
  2548                           ;	Chosen strategy is simple_byte
  2549  00030C  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2550  00030E  0A14               	xorlw	20	; case 20
  2551  000310  B4D8               	btfsc	status,2,c
  2552  000312  EF2B  F001         	goto	l4349
  2553  000316  0A01               	xorlw	1	; case 21
  2554  000318  B4D8               	btfsc	status,2,c
  2555  00031A  EF44  F001         	goto	l4353
  2556  00031E  0A03               	xorlw	3	; case 22
  2557  000320  B4D8               	btfsc	status,2,c
  2558  000322  EF5D  F001         	goto	l4357
  2559  000326  EF95  F001         	goto	l4365
  2560  00032A                     l4365:
  2561                           
  2562                           ;driveControl/commControl.c: 116:         if (oldSSMState != me->speedSM_State) {
  2563  00032A  0100               	movlb	0	; () banked
  2564  00032C  EE20 F001          	lfsr	2,1
  2565  000330  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2566  000332  26D9               	addwf	fsr2l,f,c
  2567  000334  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2568  000336  22DA               	addwfc	fsr2h,f,c
  2569  000338  51C0               	movf	commControl_processEvent@oldSSMState& (0+255),w,b
  2570  00033A  18DE               	xorwf	postinc2,w,c
  2571  00033C  B4D8               	btfsc	status,2,c
  2572  00033E  EFA3  F001         	goto	u2091
  2573  000342  EFA5  F001         	goto	u2090
  2574  000346                     u2091:
  2575  000346  EF13  F002         	goto	l4379
  2576  00034A                     u2090:
  2577  00034A                     
  2578                           ; BSR set to: 0
  2579                           ;driveControl/commControl.c: 117:             processed = 1;
  2580  00034A  0E01               	movlw	1
  2581  00034C  6FC2               	movwf	commControl_processEvent@processed& (0+255),b
  2582                           
  2583                           ;driveControl/commControl.c: 118:             switch (me->speedSM_State) {
  2584  00034E  EFF4  F001         	goto	l4377
  2585  000352                     l4369:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;driveControl/commControl.c: 123:                     POST(me, &commControl_processEvent
      +                          , evSTM, 50, 0);
  2589  000352  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  2590  000356  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  2591  00035A  0E1E               	movlw	low _commControl_processEvent
  2592  00035C  6F8C               	movwf	POST@processEvent& (0+255),b
  2593  00035E  0E00               	movlw	high _commControl_processEvent
  2594  000360  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  2595  000362  0E2D               	movlw	45
  2596  000364  6F8E               	movwf	POST@id& (0+255),b
  2597  000366  0E00               	movlw	0
  2598  000368  6F90               	movwf	(POST@delay+1)& (0+255),b
  2599  00036A  0E32               	movlw	50
  2600  00036C  6F8F               	movwf	POST@delay& (0+255),b
  2601  00036E  0E00               	movlw	0
  2602  000370  6F91               	movwf	POST@data& (0+255),b
  2603  000372  0E00               	movlw	0
  2604  000374  6F92               	movwf	(POST@data+1)& (0+255),b
  2605  000376  0E00               	movlw	0
  2606  000378  6F93               	movwf	(POST@data+2)& (0+255),b
  2607  00037A  0E00               	movlw	0
  2608  00037C  6F94               	movwf	(POST@data+3)& (0+255),b
  2609  00037E  0E00               	movlw	0
  2610  000380  6F95               	movwf	(POST@data+4)& (0+255),b
  2611  000382  0E00               	movlw	0
  2612  000384  6F96               	movwf	(POST@data+5)& (0+255),b
  2613  000386  0E00               	movlw	0
  2614  000388  6F97               	movwf	(POST@data+6)& (0+255),b
  2615  00038A  0E00               	movlw	0
  2616  00038C  6F98               	movwf	(POST@data+7)& (0+255),b
  2617  00038E  EC0D  F00E         	call	_POST	;wreg free
  2618                           
  2619                           ;driveControl/commControl.c: 124:                     break;
  2620  000392  EF13  F002         	goto	l4379
  2621  000396                     l4371:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;driveControl/commControl.c: 126:                     sendSpeedFrame(me);
  2625  000396  C0C3  F060         	movff	commControl_processEvent@me,sendSpeedFrame@me
  2626  00039A  C0C4  F061         	movff	commControl_processEvent@me+1,sendSpeedFrame@me+1
  2627  00039E  EC9F  F015         	call	_sendSpeedFrame	;wreg free
  2628  0003A2                     
  2629                           ;driveControl/commControl.c: 127:                     POST(me, &commControl_processEvent
      +                          , evADefault, 50, 0);
  2630  0003A2  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  2631  0003A6  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  2632  0003AA  0E1E               	movlw	low _commControl_processEvent
  2633  0003AC  0100               	movlb	0	; () banked
  2634  0003AE  6F8C               	movwf	POST@processEvent& (0+255),b
  2635  0003B0  0E00               	movlw	high _commControl_processEvent
  2636  0003B2  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  2637  0003B4  0E31               	movlw	49
  2638  0003B6  6F8E               	movwf	POST@id& (0+255),b
  2639  0003B8  0E00               	movlw	0
  2640  0003BA  6F90               	movwf	(POST@delay+1)& (0+255),b
  2641  0003BC  0E32               	movlw	50
  2642  0003BE  6F8F               	movwf	POST@delay& (0+255),b
  2643  0003C0  0E00               	movlw	0
  2644  0003C2  6F91               	movwf	POST@data& (0+255),b
  2645  0003C4  0E00               	movlw	0
  2646  0003C6  6F92               	movwf	(POST@data+1)& (0+255),b
  2647  0003C8  0E00               	movlw	0
  2648  0003CA  6F93               	movwf	(POST@data+2)& (0+255),b
  2649  0003CC  0E00               	movlw	0
  2650  0003CE  6F94               	movwf	(POST@data+3)& (0+255),b
  2651  0003D0  0E00               	movlw	0
  2652  0003D2  6F95               	movwf	(POST@data+4)& (0+255),b
  2653  0003D4  0E00               	movlw	0
  2654  0003D6  6F96               	movwf	(POST@data+5)& (0+255),b
  2655  0003D8  0E00               	movlw	0
  2656  0003DA  6F97               	movwf	(POST@data+6)& (0+255),b
  2657  0003DC  0E00               	movlw	0
  2658  0003DE  6F98               	movwf	(POST@data+7)& (0+255),b
  2659  0003E0  EC0D  F00E         	call	_POST	;wreg free
  2660                           
  2661                           ;driveControl/commControl.c: 128:                     break;
  2662  0003E4  EF13  F002         	goto	l4379
  2663  0003E8                     l4377:
  2664                           
  2665                           ; BSR set to: 0
  2666  0003E8  EE20 F001          	lfsr	2,1
  2667  0003EC  51C3               	movf	commControl_processEvent@me& (0+255),w,b
  2668  0003EE  26D9               	addwf	fsr2l,f,c
  2669  0003F0  51C4               	movf	(commControl_processEvent@me+1)& (0+255),w,b
  2670  0003F2  22DA               	addwfc	fsr2h,f,c
  2671  0003F4  50DF               	movf	indf2,w,c
  2672  0003F6  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  2673  0003F8  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  2674                           
  2675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 1, Range of values is 0 to 0
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte            4     3 (average)
  2681                           ;	Chosen strategy is simple_byte
  2682  0003FA  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  2683  0003FC  0A00               	xorlw	0	; case 0
  2684  0003FE  B4D8               	btfsc	status,2,c
  2685  000400  EF04  F002         	goto	l5503
  2686  000404  EF13  F002         	goto	l201
  2687  000408                     l5503:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ; Switch size 1, requested type "simple"
  2691                           ; Number of cases is 3, Range of values is 20 to 22
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte           10     6 (average)
  2695                           ;	Chosen strategy is simple_byte
  2696  000408  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2697  00040A  0A14               	xorlw	20	; case 20
  2698  00040C  B4D8               	btfsc	status,2,c
  2699  00040E  EF13  F002         	goto	l201
  2700  000412  0A01               	xorlw	1	; case 21
  2701  000414  B4D8               	btfsc	status,2,c
  2702  000416  EFA9  F001         	goto	l4369
  2703  00041A  0A03               	xorlw	3	; case 22
  2704  00041C  B4D8               	btfsc	status,2,c
  2705  00041E  EFCB  F001         	goto	l4371
  2706  000422  EF13  F002         	goto	l201
  2707  000426                     l201:
  2708  000426                     l4379:
  2709                           
  2710                           ;driveControl/commControl.c: 138:     if (processed == 0)
  2711  000426  0100               	movlb	0	; () banked
  2712  000428  51C2               	movf	commControl_processEvent@processed& (0+255),w,b
  2713  00042A  A4D8               	btfss	status,2,c
  2714  00042C  EF1A  F002         	goto	u2101
  2715  000430  EF1C  F002         	goto	u2100
  2716  000434                     u2101:
  2717  000434  EF45  F004         	goto	l240
  2718  000438                     u2100:
  2719  000438  EF2C  F003         	goto	l4421
  2720  00043C                     l4383:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;driveControl/commControl.c: 142:                 if (Event_getId(ev) == evCInit) {
  2724  00043C  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2725  000440  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2726  000444  EC51  F015         	call	_Event_getId	;wreg free
  2727  000448  0A28               	xorlw	40
  2728  00044A  A4D8               	btfss	status,2,c
  2729  00044C  EF2A  F002         	goto	u2111
  2730  000450  EF2C  F002         	goto	u2110
  2731  000454                     u2111:
  2732  000454  EF57  F003         	goto	l4423
  2733  000458                     u2110:
  2734  000458                     
  2735                           ;driveControl/commControl.c: 143:                     me->commSM_State = ST_CSMWAIT;
  2736  000458  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2737  00045E  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2738  000464  0E0C               	movlw	12
  2739  000466  6EDF               	movwf	indf2,c
  2740  000468  EF57  F003         	goto	l4423
  2741  00046C                     l4387:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;driveControl/commControl.c: 147:                 if (Event_getId(ev) == evCTM) {
  2745  00046C  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2746  000470  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2747  000474  EC51  F015         	call	_Event_getId	;wreg free
  2748  000478  0A29               	xorlw	41
  2749  00047A  A4D8               	btfss	status,2,c
  2750  00047C  EF42  F002         	goto	u2121
  2751  000480  EF44  F002         	goto	u2120
  2752  000484                     u2121:
  2753  000484  EF57  F003         	goto	l4423
  2754  000488                     u2120:
  2755  000488                     
  2756                           ;driveControl/commControl.c: 148:                     me->commSM_State = ST_CSMPROCESS;
  2757  000488  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2758  00048E  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2759  000494  0E0D               	movlw	13
  2760  000496  6EDF               	movwf	indf2,c
  2761  000498  EF57  F003         	goto	l4423
  2762  00049C                     l4391:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;driveControl/commControl.c: 152:                 if (Event_getId(ev) == evCMsg) {
  2766  00049C  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2767  0004A0  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2768  0004A4  EC51  F015         	call	_Event_getId	;wreg free
  2769  0004A8  0A2A               	xorlw	42
  2770  0004AA  A4D8               	btfss	status,2,c
  2771  0004AC  EF5A  F002         	goto	u2131
  2772  0004B0  EF5C  F002         	goto	u2130
  2773  0004B4                     u2131:
  2774  0004B4  EF57  F003         	goto	l4423
  2775  0004B8                     u2130:
  2776  0004B8  EF86  F002         	goto	l4405
  2777  0004BC                     l4395:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;driveControl/commControl.c: 156:                             me->commSM_State = ST_CSMP
      +                          OWER;
  2781  0004BC  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2782  0004C2  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2783  0004C8  0E0E               	movlw	14
  2784  0004CA  6EDF               	movwf	indf2,c
  2785                           
  2786                           ;driveControl/commControl.c: 157:                             break;
  2787  0004CC  EF57  F003         	goto	l4423
  2788  0004D0                     l4397:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;driveControl/commControl.c: 159:                             me->commSM_State = ST_CSMB
      +                          RAKE;
  2792  0004D0  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2793  0004D6  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2794  0004DC  0E0F               	movlw	15
  2795  0004DE  6EDF               	movwf	indf2,c
  2796                           
  2797                           ;driveControl/commControl.c: 160:                             break;
  2798  0004E0  EF57  F003         	goto	l4423
  2799  0004E4                     l4399:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;driveControl/commControl.c: 162:                             me->commSM_State = ST_CSMS
      +                          ETUP;
  2803  0004E4  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2804  0004EA  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2805  0004F0  0E0B               	movlw	11
  2806  0004F2  6EDF               	movwf	indf2,c
  2807                           
  2808                           ;driveControl/commControl.c: 163:                             break;
  2809  0004F4  EF57  F003         	goto	l4423
  2810  0004F8                     l4401:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;driveControl/commControl.c: 165:                             me->commSM_State = ST_CSMW
      +                          AIT;
  2814  0004F8  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2815  0004FE  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2816  000504  0E0C               	movlw	12
  2817  000506  6EDF               	movwf	indf2,c
  2818                           
  2819                           ;driveControl/commControl.c: 166:                             break;
  2820  000508  EF57  F003         	goto	l4423
  2821  00050C                     l4405:
  2822  00050C  C0B5  F060         	movff	commControl_processEvent@ev,Event_getData@me
  2823  000510  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getData@me+1
  2824  000514  ECBD  F012         	call	_Event_getData	;wreg free
  2825  000518  C060  F0B7         	movff	?_Event_getData,??_commControl_processEvent
  2826  00051C  C061  F0B8         	movff	?_Event_getData+1,??_commControl_processEvent+1
  2827  000520  C062  F0B9         	movff	?_Event_getData+2,??_commControl_processEvent+2
  2828  000524  C063  F0BA         	movff	?_Event_getData+3,??_commControl_processEvent+3
  2829  000528  C064  F0BB         	movff	?_Event_getData+4,??_commControl_processEvent+4
  2830  00052C  C065  F0BC         	movff	?_Event_getData+5,??_commControl_processEvent+5
  2831  000530  C066  F0BD         	movff	?_Event_getData+6,??_commControl_processEvent+6
  2832  000534  C067  F0BE         	movff	?_Event_getData+7,??_commControl_processEvent+7
  2833                           
  2834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  2835                           ; Switch size 1, requested type "simple"
  2836                           ; Number of cases is 1, Range of values is 0 to 0
  2837                           ; switch strategies available:
  2838                           ; Name         Instructions Cycles
  2839                           ; simple_byte            4     3 (average)
  2840                           ;	Chosen strategy is simple_byte
  2841  000538  0100               	movlb	0	; () banked
  2842  00053A  51BE               	movf	(??_commControl_processEvent+7)& (0+255),w,b
  2843  00053C  0A00               	xorlw	0	; case 0
  2844  00053E  B4D8               	btfsc	status,2,c
  2845  000540  EFDD  F002         	goto	l5509
  2846  000544  EF7C  F002         	goto	l4401
  2847  000548                     l5505:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2851                           ; Switch size 1, requested type "simple"
  2852                           ; Number of cases is 1, Range of values is 0 to 0
  2853                           ; switch strategies available:
  2854                           ; Name         Instructions Cycles
  2855                           ; simple_byte            4     3 (average)
  2856                           ;	Chosen strategy is simple_byte
  2857  000548  51BA               	movf	(??_commControl_processEvent+3)& (0+255),w,b
  2858  00054A  0A00               	xorlw	0	; case 0
  2859  00054C  B4D8               	btfsc	status,2,c
  2860  00054E  EFC8  F002         	goto	l5513
  2861  000552  EF7C  F002         	goto	l4401
  2862  000556                     l5511:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2866                           ; Switch size 1, requested type "simple"
  2867                           ; Number of cases is 2, Range of values is 1 to 2
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte            7     4 (average)
  2871                           ;	Chosen strategy is simple_byte
  2872  000556  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  2873  000558  0A01               	xorlw	1	; case 1
  2874  00055A  B4D8               	btfsc	status,2,c
  2875  00055C  EFB6  F002         	goto	l5515
  2876  000560  0A03               	xorlw	3	; case 2
  2877  000562  B4D8               	btfsc	status,2,c
  2878  000564  EFC1  F002         	goto	l5517
  2879  000568  EF7C  F002         	goto	l4401
  2880  00056C                     l5515:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 2, Range of values is 64 to 65
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte            7     4 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889  00056C  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2890  00056E  0A40               	xorlw	64	; case 64
  2891  000570  B4D8               	btfsc	status,2,c
  2892  000572  EF72  F002         	goto	l4399
  2893  000576  0A01               	xorlw	1	; case 65
  2894  000578  B4D8               	btfsc	status,2,c
  2895  00057A  EF5E  F002         	goto	l4395
  2896  00057E  EF7C  F002         	goto	l4401
  2897  000582                     l5517:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ; Switch size 1, requested type "simple"
  2901                           ; Number of cases is 1, Range of values is 1 to 1
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            4     3 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906  000582  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  2907  000584  0A01               	xorlw	1	; case 1
  2908  000586  B4D8               	btfsc	status,2,c
  2909  000588  EF68  F002         	goto	l4397
  2910  00058C  EF7C  F002         	goto	l4401
  2911  000590                     l5513:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ; Switch size 1, requested type "simple"
  2915                           ; Number of cases is 1, Range of values is 0 to 0
  2916                           ; switch strategies available:
  2917                           ; Name         Instructions Cycles
  2918                           ; simple_byte            4     3 (average)
  2919                           ;	Chosen strategy is simple_byte
  2920  000590  51B9               	movf	(??_commControl_processEvent+2)& (0+255),w,b
  2921  000592  0A00               	xorlw	0	; case 0
  2922  000594  B4D8               	btfsc	status,2,c
  2923  000596  EFAB  F002         	goto	l5511
  2924  00059A  EF7C  F002         	goto	l4401
  2925  00059E                     l5507:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2929                           ; Switch size 1, requested type "simple"
  2930                           ; Number of cases is 1, Range of values is 0 to 0
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte            4     3 (average)
  2934                           ;	Chosen strategy is simple_byte
  2935  00059E  51BC               	movf	(??_commControl_processEvent+5)& (0+255),w,b
  2936  0005A0  0A00               	xorlw	0	; case 0
  2937  0005A2  B4D8               	btfsc	status,2,c
  2938  0005A4  EFD6  F002         	goto	l5519
  2939  0005A8  EF7C  F002         	goto	l4401
  2940  0005AC                     l5519:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ; Switch size 1, requested type "simple"
  2944                           ; Number of cases is 1, Range of values is 0 to 0
  2945                           ; switch strategies available:
  2946                           ; Name         Instructions Cycles
  2947                           ; simple_byte            4     3 (average)
  2948                           ;	Chosen strategy is simple_byte
  2949  0005AC  51BB               	movf	(??_commControl_processEvent+4)& (0+255),w,b
  2950  0005AE  0A00               	xorlw	0	; case 0
  2951  0005B0  B4D8               	btfsc	status,2,c
  2952  0005B2  EFA4  F002         	goto	l5505
  2953  0005B6  EF7C  F002         	goto	l4401
  2954  0005BA                     l5509:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ; Switch size 1, requested type "simple"
  2958                           ; Number of cases is 1, Range of values is 0 to 0
  2959                           ; switch strategies available:
  2960                           ; Name         Instructions Cycles
  2961                           ; simple_byte            4     3 (average)
  2962                           ;	Chosen strategy is simple_byte
  2963  0005BA  51BD               	movf	(??_commControl_processEvent+6)& (0+255),w,b
  2964  0005BC  0A00               	xorlw	0	; case 0
  2965  0005BE  B4D8               	btfsc	status,2,c
  2966  0005C0  EFCF  F002         	goto	l5507
  2967  0005C4  EF7C  F002         	goto	l4401
  2968  0005C8                     l4407:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;driveControl/commControl.c: 171:                 if (Event_getId(ev) == evCDefault) {
  2972  0005C8  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2973  0005CC  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2974  0005D0  EC51  F015         	call	_Event_getId	;wreg free
  2975  0005D4  0A2B               	xorlw	43
  2976  0005D6  A4D8               	btfss	status,2,c
  2977  0005D8  EFF0  F002         	goto	u2141
  2978  0005DC  EFF2  F002         	goto	u2140
  2979  0005E0                     u2141:
  2980  0005E0  EF57  F003         	goto	l4423
  2981  0005E4                     u2140:
  2982  0005E4                     
  2983                           ;driveControl/commControl.c: 172:                     me->commSM_State = ST_CSMWAIT;
  2984  0005E4  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  2985  0005EA  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  2986  0005F0  0E0C               	movlw	12
  2987  0005F2  6EDF               	movwf	indf2,c
  2988  0005F4  EF57  F003         	goto	l4423
  2989  0005F8                     l4411:
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;driveControl/commControl.c: 176:                 if (Event_getId(ev) == evCDefault) {
  2993  0005F8  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  2994  0005FC  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  2995  000600  EC51  F015         	call	_Event_getId	;wreg free
  2996  000604  0A2B               	xorlw	43
  2997  000606  A4D8               	btfss	status,2,c
  2998  000608  EF08  F003         	goto	u2151
  2999  00060C  EF0A  F003         	goto	u2150
  3000  000610                     u2151:
  3001  000610  EF57  F003         	goto	l4423
  3002  000614                     u2150:
  3003  000614                     
  3004                           ;driveControl/commControl.c: 177:                     me->commSM_State = ST_CSMWAIT;
  3005  000614  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  3006  00061A  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  3007  000620  0E0C               	movlw	12
  3008  000622  6EDF               	movwf	indf2,c
  3009  000624  EF57  F003         	goto	l4423
  3010  000628                     l4415:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;driveControl/commControl.c: 181:                 if (Event_getId(ev) == evCDefault) {
  3014  000628  C0B5  F060         	movff	commControl_processEvent@ev,Event_getId@me
  3015  00062C  C0B6  F061         	movff	commControl_processEvent@ev+1,Event_getId@me+1
  3016  000630  EC51  F015         	call	_Event_getId	;wreg free
  3017  000634  0A2B               	xorlw	43
  3018  000636  A4D8               	btfss	status,2,c
  3019  000638  EF20  F003         	goto	u2161
  3020  00063C  EF22  F003         	goto	u2160
  3021  000640                     u2161:
  3022  000640  EF57  F003         	goto	l4423
  3023  000644                     u2160:
  3024  000644                     
  3025                           ;driveControl/commControl.c: 182:                     me->commSM_State = ST_CSMWAIT;
  3026  000644  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  3027  00064A  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  3028  000650  0E0C               	movlw	12
  3029  000652  6EDF               	movwf	indf2,c
  3030  000654  EF57  F003         	goto	l4423
  3031  000658                     l4421:
  3032                           
  3033                           ; BSR set to: 0
  3034  000658  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  3035  00065E  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  3036  000664  50DF               	movf	indf2,w,c
  3037  000666  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  3038  000668  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  3039                           
  3040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3041                           ; Switch size 1, requested type "simple"
  3042                           ; Number of cases is 1, Range of values is 0 to 0
  3043                           ; switch strategies available:
  3044                           ; Name         Instructions Cycles
  3045                           ; simple_byte            4     3 (average)
  3046                           ;	Chosen strategy is simple_byte
  3047  00066A  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  3048  00066C  0A00               	xorlw	0	; case 0
  3049  00066E  B4D8               	btfsc	status,2,c
  3050  000670  EF3C  F003         	goto	l5521
  3051  000674  EF57  F003         	goto	l4423
  3052  000678                     l5521:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 6, Range of values is 10 to 15
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte           19    10 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061  000678  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  3062  00067A  0A0A               	xorlw	10	; case 10
  3063  00067C  B4D8               	btfsc	status,2,c
  3064  00067E  EF1E  F002         	goto	l4383
  3065  000682  0A01               	xorlw	1	; case 11
  3066  000684  B4D8               	btfsc	status,2,c
  3067  000686  EF14  F003         	goto	l4415
  3068  00068A  0A07               	xorlw	7	; case 12
  3069  00068C  B4D8               	btfsc	status,2,c
  3070  00068E  EF36  F002         	goto	l4387
  3071  000692  0A01               	xorlw	1	; case 13
  3072  000694  B4D8               	btfsc	status,2,c
  3073  000696  EF4E  F002         	goto	l4391
  3074  00069A  0A03               	xorlw	3	; case 14
  3075  00069C  B4D8               	btfsc	status,2,c
  3076  00069E  EFE4  F002         	goto	l4407
  3077  0006A2  0A01               	xorlw	1	; case 15
  3078  0006A4  B4D8               	btfsc	status,2,c
  3079  0006A6  EFFC  F002         	goto	l4411
  3080  0006AA  EF57  F003         	goto	l4423
  3081  0006AE                     l4423:
  3082                           
  3083                           ;driveControl/commControl.c: 188:         if (oldCSMState != me->commSM_State) {
  3084  0006AE  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  3085  0006B4  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  3086  0006BA  0100               	movlb	0	; () banked
  3087  0006BC  51BF               	movf	commControl_processEvent@oldCSMState& (0+255),w,b
  3088  0006BE  18DE               	xorwf	postinc2,w,c
  3089  0006C0  B4D8               	btfsc	status,2,c
  3090  0006C2  EF65  F003         	goto	u2171
  3091  0006C6  EF67  F003         	goto	u2170
  3092  0006CA                     u2171:
  3093  0006CA  EF45  F004         	goto	l240
  3094  0006CE                     u2170:
  3095  0006CE                     
  3096                           ; BSR set to: 0
  3097                           ;driveControl/commControl.c: 190:             switch (me->commSM_State) {
  3098  0006CE  EF1A  F004         	goto	l4445
  3099  0006D2                     l4427:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;driveControl/commControl.c: 195:                     POST(me, &commControl_processEvent
      +                          , evCTM, 50, 0);
  3103  0006D2  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  3104  0006D6  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  3105  0006DA  0E1E               	movlw	low _commControl_processEvent
  3106  0006DC  6F8C               	movwf	POST@processEvent& (0+255),b
  3107  0006DE  0E00               	movlw	high _commControl_processEvent
  3108  0006E0  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3109  0006E2  0E29               	movlw	41
  3110  0006E4  6F8E               	movwf	POST@id& (0+255),b
  3111  0006E6  0E00               	movlw	0
  3112  0006E8  6F90               	movwf	(POST@delay+1)& (0+255),b
  3113  0006EA  0E32               	movlw	50
  3114  0006EC  6F8F               	movwf	POST@delay& (0+255),b
  3115  0006EE  0E00               	movlw	0
  3116  0006F0  6F91               	movwf	POST@data& (0+255),b
  3117  0006F2  0E00               	movlw	0
  3118  0006F4  6F92               	movwf	(POST@data+1)& (0+255),b
  3119  0006F6  0E00               	movlw	0
  3120  0006F8  6F93               	movwf	(POST@data+2)& (0+255),b
  3121  0006FA  0E00               	movlw	0
  3122  0006FC  6F94               	movwf	(POST@data+3)& (0+255),b
  3123  0006FE  0E00               	movlw	0
  3124  000700  6F95               	movwf	(POST@data+4)& (0+255),b
  3125  000702  0E00               	movlw	0
  3126  000704  6F96               	movwf	(POST@data+5)& (0+255),b
  3127  000706  0E00               	movlw	0
  3128  000708  6F97               	movwf	(POST@data+6)& (0+255),b
  3129  00070A  0E00               	movlw	0
  3130  00070C  6F98               	movwf	(POST@data+7)& (0+255),b
  3131  00070E  EC0D  F00E         	call	_POST	;wreg free
  3132                           
  3133                           ;driveControl/commControl.c: 196:                     break;
  3134  000712  EF45  F004         	goto	l240
  3135  000716                     l4429:
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;driveControl/commControl.c: 198:                     readCANFrame(me, &(me->msg));
  3139  000716  C0C3  F0A9         	movff	commControl_processEvent@me,readCANFrame@me
  3140  00071A  C0C4  F0AA         	movff	commControl_processEvent@me+1,readCANFrame@me+1
  3141  00071E  0E03               	movlw	3
  3142  000720  25C3               	addwf	commControl_processEvent@me& (0+255),w,b
  3143  000722  6FAB               	movwf	readCANFrame@msg& (0+255),b
  3144  000724  0E00               	movlw	0
  3145  000726  21C4               	addwfc	(commControl_processEvent@me+1)& (0+255),w,b
  3146  000728  6FAC               	movwf	(readCANFrame@msg+1)& (0+255),b
  3147  00072A  EC1C  F009         	call	_readCANFrame	;wreg free
  3148                           
  3149                           ;driveControl/commControl.c: 199:                     break;
  3150  00072E  EF45  F004         	goto	l240
  3151  000732                     l4431:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;driveControl/commControl.c: 201:                     setPower(me);
  3155  000732  C0C3  F060         	movff	commControl_processEvent@me,setPower@me
  3156  000736  C0C4  F061         	movff	commControl_processEvent@me+1,setPower@me+1
  3157  00073A  EC9D  F015         	call	_setPower	;wreg free
  3158  00073E                     
  3159                           ;driveControl/commControl.c: 202:                     POST(me, &commControl_processEvent
      +                          , evCDefault, 0, 0);
  3160  00073E  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  3161  000742  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  3162  000746  0E1E               	movlw	low _commControl_processEvent
  3163  000748  0100               	movlb	0	; () banked
  3164  00074A  6F8C               	movwf	POST@processEvent& (0+255),b
  3165  00074C  0E00               	movlw	high _commControl_processEvent
  3166  00074E  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3167  000750  0E2B               	movlw	43
  3168  000752  6F8E               	movwf	POST@id& (0+255),b
  3169  000754  0E00               	movlw	0
  3170  000756  6F90               	movwf	(POST@delay+1)& (0+255),b
  3171  000758  0E00               	movlw	0
  3172  00075A  6F8F               	movwf	POST@delay& (0+255),b
  3173  00075C  0E00               	movlw	0
  3174  00075E  6F91               	movwf	POST@data& (0+255),b
  3175  000760  0E00               	movlw	0
  3176  000762  6F92               	movwf	(POST@data+1)& (0+255),b
  3177  000764  0E00               	movlw	0
  3178  000766  6F93               	movwf	(POST@data+2)& (0+255),b
  3179  000768  0E00               	movlw	0
  3180  00076A  6F94               	movwf	(POST@data+3)& (0+255),b
  3181  00076C  0E00               	movlw	0
  3182  00076E  6F95               	movwf	(POST@data+4)& (0+255),b
  3183  000770  0E00               	movlw	0
  3184  000772  6F96               	movwf	(POST@data+5)& (0+255),b
  3185  000774  0E00               	movlw	0
  3186  000776  6F97               	movwf	(POST@data+6)& (0+255),b
  3187  000778  0E00               	movlw	0
  3188  00077A  6F98               	movwf	(POST@data+7)& (0+255),b
  3189  00077C  EC0D  F00E         	call	_POST	;wreg free
  3190                           
  3191                           ;driveControl/commControl.c: 203:                     break;
  3192  000780  EF45  F004         	goto	l240
  3193  000784                     l4435:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;driveControl/commControl.c: 205:                     setBrake(me);
  3197  000784  C0C3  F060         	movff	commControl_processEvent@me,setBrake@me
  3198  000788  C0C4  F061         	movff	commControl_processEvent@me+1,setBrake@me+1
  3199  00078C  EC9E  F015         	call	_setBrake	;wreg free
  3200  000790                     
  3201                           ;driveControl/commControl.c: 206:                     POST(me, &commControl_processEvent
      +                          , evCDefault, 0, 0);
  3202  000790  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  3203  000794  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  3204  000798  0E1E               	movlw	low _commControl_processEvent
  3205  00079A  0100               	movlb	0	; () banked
  3206  00079C  6F8C               	movwf	POST@processEvent& (0+255),b
  3207  00079E  0E00               	movlw	high _commControl_processEvent
  3208  0007A0  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3209  0007A2  0E2B               	movlw	43
  3210  0007A4  6F8E               	movwf	POST@id& (0+255),b
  3211  0007A6  0E00               	movlw	0
  3212  0007A8  6F90               	movwf	(POST@delay+1)& (0+255),b
  3213  0007AA  0E00               	movlw	0
  3214  0007AC  6F8F               	movwf	POST@delay& (0+255),b
  3215  0007AE  0E00               	movlw	0
  3216  0007B0  6F91               	movwf	POST@data& (0+255),b
  3217  0007B2  0E00               	movlw	0
  3218  0007B4  6F92               	movwf	(POST@data+1)& (0+255),b
  3219  0007B6  0E00               	movlw	0
  3220  0007B8  6F93               	movwf	(POST@data+2)& (0+255),b
  3221  0007BA  0E00               	movlw	0
  3222  0007BC  6F94               	movwf	(POST@data+3)& (0+255),b
  3223  0007BE  0E00               	movlw	0
  3224  0007C0  6F95               	movwf	(POST@data+4)& (0+255),b
  3225  0007C2  0E00               	movlw	0
  3226  0007C4  6F96               	movwf	(POST@data+5)& (0+255),b
  3227  0007C6  0E00               	movlw	0
  3228  0007C8  6F97               	movwf	(POST@data+6)& (0+255),b
  3229  0007CA  0E00               	movlw	0
  3230  0007CC  6F98               	movwf	(POST@data+7)& (0+255),b
  3231  0007CE  EC0D  F00E         	call	_POST	;wreg free
  3232                           
  3233                           ;driveControl/commControl.c: 207:                     break;
  3234  0007D2  EF45  F004         	goto	l240
  3235  0007D6                     l4439:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;driveControl/commControl.c: 209:                     storeSetup(me, &(me->msg));
  3239  0007D6  C0C3  F060         	movff	commControl_processEvent@me,storeSetup@me
  3240  0007DA  C0C4  F061         	movff	commControl_processEvent@me+1,storeSetup@me+1
  3241  0007DE  0E03               	movlw	3
  3242  0007E0  25C3               	addwf	commControl_processEvent@me& (0+255),w,b
  3243  0007E2  6F62               	movwf	storeSetup@msg& (0+255),b
  3244  0007E4  0E00               	movlw	0
  3245  0007E6  21C4               	addwfc	(commControl_processEvent@me+1)& (0+255),w,b
  3246  0007E8  6F63               	movwf	(storeSetup@msg+1)& (0+255),b
  3247  0007EA  EC9C  F015         	call	_storeSetup	;wreg free
  3248  0007EE                     
  3249                           ;driveControl/commControl.c: 210:                     POST(me, &commControl_processEvent
      +                          , evCDefault, 0, 0);
  3250  0007EE  C0C3  F08A         	movff	commControl_processEvent@me,POST@target
  3251  0007F2  C0C4  F08B         	movff	commControl_processEvent@me+1,POST@target+1
  3252  0007F6  0E1E               	movlw	low _commControl_processEvent
  3253  0007F8  0100               	movlb	0	; () banked
  3254  0007FA  6F8C               	movwf	POST@processEvent& (0+255),b
  3255  0007FC  0E00               	movlw	high _commControl_processEvent
  3256  0007FE  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3257  000800  0E2B               	movlw	43
  3258  000802  6F8E               	movwf	POST@id& (0+255),b
  3259  000804  0E00               	movlw	0
  3260  000806  6F90               	movwf	(POST@delay+1)& (0+255),b
  3261  000808  0E00               	movlw	0
  3262  00080A  6F8F               	movwf	POST@delay& (0+255),b
  3263  00080C  0E00               	movlw	0
  3264  00080E  6F91               	movwf	POST@data& (0+255),b
  3265  000810  0E00               	movlw	0
  3266  000812  6F92               	movwf	(POST@data+1)& (0+255),b
  3267  000814  0E00               	movlw	0
  3268  000816  6F93               	movwf	(POST@data+2)& (0+255),b
  3269  000818  0E00               	movlw	0
  3270  00081A  6F94               	movwf	(POST@data+3)& (0+255),b
  3271  00081C  0E00               	movlw	0
  3272  00081E  6F95               	movwf	(POST@data+4)& (0+255),b
  3273  000820  0E00               	movlw	0
  3274  000822  6F96               	movwf	(POST@data+5)& (0+255),b
  3275  000824  0E00               	movlw	0
  3276  000826  6F97               	movwf	(POST@data+6)& (0+255),b
  3277  000828  0E00               	movlw	0
  3278  00082A  6F98               	movwf	(POST@data+7)& (0+255),b
  3279  00082C  EC0D  F00E         	call	_POST	;wreg free
  3280                           
  3281                           ;driveControl/commControl.c: 211:                     break;
  3282  000830  EF45  F004         	goto	l240
  3283  000834                     l4445:
  3284                           
  3285                           ; BSR set to: 0
  3286  000834  0060  F30F  FFD9   	movff	commControl_processEvent@me,fsr2l
  3287  00083A  0060  F313  FFDA   	movff	commControl_processEvent@me+1,fsr2h
  3288  000840  50DF               	movf	indf2,w,c
  3289  000842  6FB7               	movwf	??_commControl_processEvent& (0+255),b
  3290  000844  6BB8               	clrf	(??_commControl_processEvent+1)& (0+255),b
  3291                           
  3292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3293                           ; Switch size 1, requested type "simple"
  3294                           ; Number of cases is 1, Range of values is 0 to 0
  3295                           ; switch strategies available:
  3296                           ; Name         Instructions Cycles
  3297                           ; simple_byte            4     3 (average)
  3298                           ;	Chosen strategy is simple_byte
  3299  000846  51B8               	movf	(??_commControl_processEvent+1)& (0+255),w,b
  3300  000848  0A00               	xorlw	0	; case 0
  3301  00084A  B4D8               	btfsc	status,2,c
  3302  00084C  EF2A  F004         	goto	l5523
  3303  000850  EF45  F004         	goto	l230
  3304  000854                     l5523:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ; Switch size 1, requested type "simple"
  3308                           ; Number of cases is 6, Range of values is 10 to 15
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte           19    10 (average)
  3312                           ;	Chosen strategy is simple_byte
  3313  000854  51B7               	movf	??_commControl_processEvent& (0+255),w,b
  3314  000856  0A0A               	xorlw	10	; case 10
  3315  000858  B4D8               	btfsc	status,2,c
  3316  00085A  EF45  F004         	goto	l230
  3317  00085E  0A01               	xorlw	1	; case 11
  3318  000860  B4D8               	btfsc	status,2,c
  3319  000862  EFEB  F003         	goto	l4439
  3320  000866  0A07               	xorlw	7	; case 12
  3321  000868  B4D8               	btfsc	status,2,c
  3322  00086A  EF69  F003         	goto	l4427
  3323  00086E  0A01               	xorlw	1	; case 13
  3324  000870  B4D8               	btfsc	status,2,c
  3325  000872  EF8B  F003         	goto	l4429
  3326  000876  0A03               	xorlw	3	; case 14
  3327  000878  B4D8               	btfsc	status,2,c
  3328  00087A  EF99  F003         	goto	l4431
  3329  00087E  0A01               	xorlw	1	; case 15
  3330  000880  B4D8               	btfsc	status,2,c
  3331  000882  EFC2  F003         	goto	l4435
  3332  000886  EF45  F004         	goto	l230
  3333  00088A                     l230:
  3334  00088A                     l240:
  3335  00088A  0012               	return		;funcret
  3336  00088C                     __end_of_commControl_processEvent:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _storeSetup *****************
  3340 ;; Defined at:
  3341 ;;		line 270 in file "driveControl/commControl.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  me              2    0[BANK0 ] PTR struct CommControl_
  3344 ;;		 -> theFactory(29), NULL(0), 
  3345 ;;  msg             2    2[BANK0 ] PTR struct .
  3346 ;;		 -> theFactory(29), NULL(0), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		None
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        4 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 6
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_commControl_processEvent
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text7
  3373  002B38                     __ptext7:
  3374                           	callstack 0
  3375  002B38                     _storeSetup:
  3376                           	callstack 22
  3377  002B38  0012               	return		;funcret
  3378  002B3A                     __end_of_storeSetup:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _setPower *****************
  3382 ;; Defined at:
  3383 ;;		line 294 in file "driveControl/commControl.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  me              2    0[BANK0 ] PTR struct CommControl_
  3386 ;;		 -> theFactory(29), NULL(0), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		None
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 6
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_commControl_processEvent
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text8
  3413  002B3A                     __ptext8:
  3414                           	callstack 0
  3415  002B3A                     _setPower:
  3416                           	callstack 22
  3417  002B3A  0012               	return		;funcret
  3418  002B3C                     __end_of_setPower:
  3419                           	callstack 0
  3420                           
  3421 ;; *************** function _setBrake *****************
  3422 ;; Defined at:
  3423 ;;		line 302 in file "driveControl/commControl.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  me              2    0[BANK0 ] PTR struct CommControl_
  3426 ;;		 -> theFactory(29), NULL(0), 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		None
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;Total ram usage:        2 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 6
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_commControl_processEvent
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text9
  3453  002B3C                     __ptext9:
  3454                           	callstack 0
  3455  002B3C                     _setBrake:
  3456                           	callstack 22
  3457  002B3C  0012               	return		;funcret
  3458  002B3E                     __end_of_setBrake:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _sendSpeedFrame *****************
  3462 ;; Defined at:
  3463 ;;		line 286 in file "driveControl/commControl.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  me              2    0[BANK0 ] PTR struct CommControl_
  3466 ;;		 -> theFactory(29), NULL(0), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		None
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 6
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_commControl_processEvent
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text10
  3493  002B3E                     __ptext10:
  3494                           	callstack 0
  3495  002B3E                     _sendSpeedFrame:
  3496                           	callstack 22
  3497  002B3E  0012               	return		;funcret
  3498  002B40                     __end_of_sendSpeedFrame:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _sendAliveFrame *****************
  3502 ;; Defined at:
  3503 ;;		line 278 in file "driveControl/commControl.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  me              2    0[BANK0 ] PTR struct CommControl_
  3506 ;;		 -> theFactory(29), NULL(0), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		None
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 6
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_commControl_processEvent
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text11
  3533  002B40                     __ptext11:
  3534                           	callstack 0
  3535  002B40                     _sendAliveFrame:
  3536                           	callstack 22
  3537  002B40  0012               	return		;funcret
  3538  002B42                     __end_of_sendAliveFrame:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _readCANFrame *****************
  3542 ;; Defined at:
  3543 ;;		line 225 in file "driveControl/commControl.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  me              2   73[BANK0 ] PTR struct CommControl_
  3546 ;;		 -> theFactory(29), NULL(0), 
  3547 ;;  msg             2   75[BANK0 ] PTR struct .
  3548 ;;		 -> theFactory(29), NULL(0), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  cip             4   81[BANK0 ] struct CanIdParser_
  3551 ;;  msgNbr          1   80[BANK0 ] unsigned char 
  3552 ;;  src             1   79[BANK0 ] unsigned char 
  3553 ;;  dest            1    0        unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:       12 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 10
  3570 ;; This function calls:
  3571 ;;		_CAN_receive
  3572 ;;		_POST
  3573 ;; This function is called by:
  3574 ;;		_commControl_processEvent
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text12
  3579  001238                     __ptext12:
  3580                           	callstack 0
  3581  001238                     _readCANFrame:
  3582                           	callstack 18
  3583  001238                     
  3584                           ;driveControl/commControl.c: 226:     if (CAN_receive(msg) != 0) {
  3585  001238  C0AB  F073         	movff	readCANFrame@msg,CAN_receive@tempCanMsg
  3586  00123C  C0AC  F074         	movff	readCANFrame@msg+1,CAN_receive@tempCanMsg+1
  3587  001240  EC91  F006         	call	_CAN_receive	;wreg free
  3588  001244  0900               	iorlw	0
  3589  001246  B4D8               	btfsc	status,2,c
  3590  001248  EF28  F009         	goto	u1791
  3591  00124C  EF2A  F009         	goto	u1790
  3592  001250                     u1791:
  3593  001250  EF08  F00A         	goto	l258
  3594  001254                     u1790:
  3595  001254                     
  3596                           ;driveControl/commControl.c: 228:         CanIdParser cip;;driveControl/commControl.c: 2
      +                          29:         cip.raw = msg->frame.id;
  3597  001254  0100               	movlb	0	; () banked
  3598  001256  EE20 F001          	lfsr	2,1
  3599  00125A  51AB               	movf	readCANFrame@msg& (0+255),w,b
  3600  00125C  26D9               	addwf	fsr2l,f,c
  3601  00125E  51AC               	movf	(readCANFrame@msg+1)& (0+255),w,b
  3602  001260  22DA               	addwfc	fsr2h,f,c
  3603  001262  006F FF78  F0B1    	movff	postinc2,readCANFrame@cip
  3604  001268  006F FF78  F0B2    	movff	postinc2,readCANFrame@cip+1
  3605  00126E  006F FF78  F0B3    	movff	postinc2,readCANFrame@cip+2
  3606  001274  006F FF78  F0B4    	movff	postinc2,readCANFrame@cip+3
  3607  00127A                     
  3608                           ; BSR set to: 0
  3609                           ;driveControl/commControl.c: 230:         uint8_t src = cip.cid.src;
  3610  00127A  51B2               	movf	(readCANFrame@cip+1)& (0+255),w,b
  3611  00127C  0B07               	andlw	7
  3612  00127E  6FAF               	movwf	readCANFrame@src& (0+255),b
  3613  001280                     
  3614                           ; BSR set to: 0
  3615                           ;driveControl/commControl.c: 232:         uint8_t msgNbr = cip.cid.msgNbr;
  3616  001280  51B1               	movf	readCANFrame@cip& (0+255),w,b
  3617  001282  0B0F               	andlw	15
  3618  001284  6FB0               	movwf	readCANFrame@msgNbr& (0+255),b
  3619                           
  3620                           ;driveControl/commControl.c: 235:         switch (src) {
  3621  001286  EFF3  F009         	goto	l4095
  3622  00128A                     l4077:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;driveControl/commControl.c: 239:                         POST(me, &commControl_processE
      +                          vent, evCMsg, 0, 0x140);
  3626  00128A  C0A9  F08A         	movff	readCANFrame@me,POST@target
  3627  00128E  C0AA  F08B         	movff	readCANFrame@me+1,POST@target+1
  3628  001292  0E1E               	movlw	low _commControl_processEvent
  3629  001294  6F8C               	movwf	POST@processEvent& (0+255),b
  3630  001296  0E00               	movlw	high _commControl_processEvent
  3631  001298  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3632  00129A  0E2A               	movlw	42
  3633  00129C  6F8E               	movwf	POST@id& (0+255),b
  3634  00129E  0E00               	movlw	0
  3635  0012A0  6F90               	movwf	(POST@delay+1)& (0+255),b
  3636  0012A2  0E00               	movlw	0
  3637  0012A4  6F8F               	movwf	POST@delay& (0+255),b
  3638  0012A6  0E40               	movlw	64
  3639  0012A8  6F91               	movwf	POST@data& (0+255),b
  3640  0012AA  0E01               	movlw	1
  3641  0012AC  6F92               	movwf	(POST@data+1)& (0+255),b
  3642  0012AE  0E00               	movlw	0
  3643  0012B0  6F93               	movwf	(POST@data+2)& (0+255),b
  3644  0012B2  0E00               	movlw	0
  3645  0012B4  6F94               	movwf	(POST@data+3)& (0+255),b
  3646  0012B6  0E00               	movlw	0
  3647  0012B8  6F95               	movwf	(POST@data+4)& (0+255),b
  3648  0012BA  0E00               	movlw	0
  3649  0012BC  6F96               	movwf	(POST@data+5)& (0+255),b
  3650  0012BE  0E00               	movlw	0
  3651  0012C0  6F97               	movwf	(POST@data+6)& (0+255),b
  3652  0012C2  0E00               	movlw	0
  3653  0012C4  6F98               	movwf	(POST@data+7)& (0+255),b
  3654  0012C6  EC0D  F00E         	call	_POST	;wreg free
  3655                           
  3656                           ;driveControl/commControl.c: 240:                         break;
  3657  0012CA  EF08  F00A         	goto	l258
  3658  0012CE                     l4079:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;driveControl/commControl.c: 242:                         POST(me, &commControl_processE
      +                          vent, evCMsg, 0, 0x141);
  3662  0012CE  C0A9  F08A         	movff	readCANFrame@me,POST@target
  3663  0012D2  C0AA  F08B         	movff	readCANFrame@me+1,POST@target+1
  3664  0012D6  0E1E               	movlw	low _commControl_processEvent
  3665  0012D8  6F8C               	movwf	POST@processEvent& (0+255),b
  3666  0012DA  0E00               	movlw	high _commControl_processEvent
  3667  0012DC  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3668  0012DE  0E2A               	movlw	42
  3669  0012E0  6F8E               	movwf	POST@id& (0+255),b
  3670  0012E2  0E00               	movlw	0
  3671  0012E4  6F90               	movwf	(POST@delay+1)& (0+255),b
  3672  0012E6  0E00               	movlw	0
  3673  0012E8  6F8F               	movwf	POST@delay& (0+255),b
  3674  0012EA  0E41               	movlw	65
  3675  0012EC  6F91               	movwf	POST@data& (0+255),b
  3676  0012EE  0E01               	movlw	1
  3677  0012F0  6F92               	movwf	(POST@data+1)& (0+255),b
  3678  0012F2  0E00               	movlw	0
  3679  0012F4  6F93               	movwf	(POST@data+2)& (0+255),b
  3680  0012F6  0E00               	movlw	0
  3681  0012F8  6F94               	movwf	(POST@data+3)& (0+255),b
  3682  0012FA  0E00               	movlw	0
  3683  0012FC  6F95               	movwf	(POST@data+4)& (0+255),b
  3684  0012FE  0E00               	movlw	0
  3685  001300  6F96               	movwf	(POST@data+5)& (0+255),b
  3686  001302  0E00               	movlw	0
  3687  001304  6F97               	movwf	(POST@data+6)& (0+255),b
  3688  001306  0E00               	movlw	0
  3689  001308  6F98               	movwf	(POST@data+7)& (0+255),b
  3690  00130A  EC0D  F00E         	call	_POST	;wreg free
  3691                           
  3692                           ;driveControl/commControl.c: 243:                         break;
  3693  00130E  EF08  F00A         	goto	l258
  3694  001312                     l4083:
  3695                           
  3696                           ; BSR set to: 0
  3697  001312  51B0               	movf	readCANFrame@msgNbr& (0+255),w,b
  3698  001314  6FAD               	movwf	??_readCANFrame& (0+255),b
  3699  001316  6BAE               	clrf	(??_readCANFrame+1)& (0+255),b
  3700                           
  3701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 1, Range of values is 0 to 0
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte            4     3 (average)
  3707                           ;	Chosen strategy is simple_byte
  3708  001318  51AE               	movf	(??_readCANFrame+1)& (0+255),w,b
  3709  00131A  0A00               	xorlw	0	; case 0
  3710  00131C  B4D8               	btfsc	status,2,c
  3711  00131E  EF93  F009         	goto	l5525
  3712  001322  EF08  F00A         	goto	l251
  3713  001326                     l5525:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ; Switch size 1, requested type "simple"
  3717                           ; Number of cases is 2, Range of values is 0 to 1
  3718                           ; switch strategies available:
  3719                           ; Name         Instructions Cycles
  3720                           ; simple_byte            7     4 (average)
  3721                           ;	Chosen strategy is simple_byte
  3722  001326  51AD               	movf	??_readCANFrame& (0+255),w,b
  3723  001328  0A00               	xorlw	0	; case 0
  3724  00132A  B4D8               	btfsc	status,2,c
  3725  00132C  EF45  F009         	goto	l4077
  3726  001330  0A01               	xorlw	1	; case 1
  3727  001332  B4D8               	btfsc	status,2,c
  3728  001334  EF67  F009         	goto	l4079
  3729  001338  EF08  F00A         	goto	l251
  3730  00133C                     l4085:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;driveControl/commControl.c: 251:                         POST(me, &commControl_processE
      +                          vent, evCMsg, 0, 0x201);
  3734  00133C  C0A9  F08A         	movff	readCANFrame@me,POST@target
  3735  001340  C0AA  F08B         	movff	readCANFrame@me+1,POST@target+1
  3736  001344  0E1E               	movlw	low _commControl_processEvent
  3737  001346  6F8C               	movwf	POST@processEvent& (0+255),b
  3738  001348  0E00               	movlw	high _commControl_processEvent
  3739  00134A  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3740  00134C  0E2A               	movlw	42
  3741  00134E  6F8E               	movwf	POST@id& (0+255),b
  3742  001350  0E00               	movlw	0
  3743  001352  6F90               	movwf	(POST@delay+1)& (0+255),b
  3744  001354  0E00               	movlw	0
  3745  001356  6F8F               	movwf	POST@delay& (0+255),b
  3746  001358  0E01               	movlw	1
  3747  00135A  6F91               	movwf	POST@data& (0+255),b
  3748  00135C  0E02               	movlw	2
  3749  00135E  6F92               	movwf	(POST@data+1)& (0+255),b
  3750  001360  0E00               	movlw	0
  3751  001362  6F93               	movwf	(POST@data+2)& (0+255),b
  3752  001364  0E00               	movlw	0
  3753  001366  6F94               	movwf	(POST@data+3)& (0+255),b
  3754  001368  0E00               	movlw	0
  3755  00136A  6F95               	movwf	(POST@data+4)& (0+255),b
  3756  00136C  0E00               	movlw	0
  3757  00136E  6F96               	movwf	(POST@data+5)& (0+255),b
  3758  001370  0E00               	movlw	0
  3759  001372  6F97               	movwf	(POST@data+6)& (0+255),b
  3760  001374  0E00               	movlw	0
  3761  001376  6F98               	movwf	(POST@data+7)& (0+255),b
  3762  001378  EC0D  F00E         	call	_POST	;wreg free
  3763                           
  3764                           ;driveControl/commControl.c: 252:                         break;
  3765  00137C  EF08  F00A         	goto	l258
  3766  001380                     l4089:
  3767                           
  3768                           ; BSR set to: 0
  3769  001380  51B0               	movf	readCANFrame@msgNbr& (0+255),w,b
  3770  001382  6FAD               	movwf	??_readCANFrame& (0+255),b
  3771  001384  6BAE               	clrf	(??_readCANFrame+1)& (0+255),b
  3772                           
  3773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3774                           ; Switch size 1, requested type "simple"
  3775                           ; Number of cases is 1, Range of values is 0 to 0
  3776                           ; switch strategies available:
  3777                           ; Name         Instructions Cycles
  3778                           ; simple_byte            4     3 (average)
  3779                           ;	Chosen strategy is simple_byte
  3780  001386  51AE               	movf	(??_readCANFrame+1)& (0+255),w,b
  3781  001388  0A00               	xorlw	0	; case 0
  3782  00138A  B4D8               	btfsc	status,2,c
  3783  00138C  EFCA  F009         	goto	l5527
  3784  001390  EF08  F00A         	goto	l251
  3785  001394                     l5527:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ; Switch size 1, requested type "simple"
  3789                           ; Number of cases is 1, Range of values is 0 to 0
  3790                           ; switch strategies available:
  3791                           ; Name         Instructions Cycles
  3792                           ; simple_byte            4     3 (average)
  3793                           ;	Chosen strategy is simple_byte
  3794  001394  51AD               	movf	??_readCANFrame& (0+255),w,b
  3795  001396  0A00               	xorlw	0	; case 0
  3796  001398  B4D8               	btfsc	status,2,c
  3797  00139A  EF9E  F009         	goto	l4085
  3798  00139E  EF08  F00A         	goto	l251
  3799  0013A2                     l4091:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;driveControl/commControl.c: 258:                     POST(me, &commControl_processEvent
      +                          , evCDefault, 0, 0);
  3803  0013A2  C0A9  F08A         	movff	readCANFrame@me,POST@target
  3804  0013A6  C0AA  F08B         	movff	readCANFrame@me+1,POST@target+1
  3805  0013AA  0E1E               	movlw	low _commControl_processEvent
  3806  0013AC  6F8C               	movwf	POST@processEvent& (0+255),b
  3807  0013AE  0E00               	movlw	high _commControl_processEvent
  3808  0013B0  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  3809  0013B2  0E2B               	movlw	43
  3810  0013B4  6F8E               	movwf	POST@id& (0+255),b
  3811  0013B6  0E00               	movlw	0
  3812  0013B8  6F90               	movwf	(POST@delay+1)& (0+255),b
  3813  0013BA  0E00               	movlw	0
  3814  0013BC  6F8F               	movwf	POST@delay& (0+255),b
  3815  0013BE  0E00               	movlw	0
  3816  0013C0  6F91               	movwf	POST@data& (0+255),b
  3817  0013C2  0E00               	movlw	0
  3818  0013C4  6F92               	movwf	(POST@data+1)& (0+255),b
  3819  0013C6  0E00               	movlw	0
  3820  0013C8  6F93               	movwf	(POST@data+2)& (0+255),b
  3821  0013CA  0E00               	movlw	0
  3822  0013CC  6F94               	movwf	(POST@data+3)& (0+255),b
  3823  0013CE  0E00               	movlw	0
  3824  0013D0  6F95               	movwf	(POST@data+4)& (0+255),b
  3825  0013D2  0E00               	movlw	0
  3826  0013D4  6F96               	movwf	(POST@data+5)& (0+255),b
  3827  0013D6  0E00               	movlw	0
  3828  0013D8  6F97               	movwf	(POST@data+6)& (0+255),b
  3829  0013DA  0E00               	movlw	0
  3830  0013DC  6F98               	movwf	(POST@data+7)& (0+255),b
  3831  0013DE  EC0D  F00E         	call	_POST	;wreg free
  3832                           
  3833                           ;driveControl/commControl.c: 259:                 break;
  3834  0013E2  EF08  F00A         	goto	l258
  3835  0013E6                     l4095:
  3836                           
  3837                           ; BSR set to: 0
  3838  0013E6  51AF               	movf	readCANFrame@src& (0+255),w,b
  3839  0013E8  6FAD               	movwf	??_readCANFrame& (0+255),b
  3840  0013EA  6BAE               	clrf	(??_readCANFrame+1)& (0+255),b
  3841                           
  3842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3843                           ; Switch size 1, requested type "simple"
  3844                           ; Number of cases is 1, Range of values is 0 to 0
  3845                           ; switch strategies available:
  3846                           ; Name         Instructions Cycles
  3847                           ; simple_byte            4     3 (average)
  3848                           ;	Chosen strategy is simple_byte
  3849  0013EC  51AE               	movf	(??_readCANFrame+1)& (0+255),w,b
  3850  0013EE  0A00               	xorlw	0	; case 0
  3851  0013F0  B4D8               	btfsc	status,2,c
  3852  0013F2  EFFD  F009         	goto	l5529
  3853  0013F6  EFD1  F009         	goto	l4091
  3854  0013FA                     l5529:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ; Switch size 1, requested type "simple"
  3858                           ; Number of cases is 2, Range of values is 1 to 2
  3859                           ; switch strategies available:
  3860                           ; Name         Instructions Cycles
  3861                           ; simple_byte            7     4 (average)
  3862                           ;	Chosen strategy is simple_byte
  3863  0013FA  51AD               	movf	??_readCANFrame& (0+255),w,b
  3864  0013FC  0A01               	xorlw	1	; case 1
  3865  0013FE  B4D8               	btfsc	status,2,c
  3866  001400  EF89  F009         	goto	l4083
  3867  001404  0A03               	xorlw	3	; case 2
  3868  001406  B4D8               	btfsc	status,2,c
  3869  001408  EFC0  F009         	goto	l4089
  3870  00140C  EFD1  F009         	goto	l4091
  3871  001410                     l251:
  3872  001410                     l258:
  3873  001410  0012               	return		;funcret
  3874  001412                     __end_of_readCANFrame:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _CAN_receive *****************
  3878 ;; Defined at:
  3879 ;;		line 210 in file "mcc_generated_files/ecan.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  tempCanMsg      2   19[BANK0 ] PTR struct .
  3882 ;;		 -> theFactory(29), NULL(0), 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  returnValue     1   21[BANK0 ] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      unsigned char 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        3 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 7
  3901 ;; This function calls:
  3902 ;;		_convertReg2ExtendedCANid
  3903 ;;		_convertReg2StandardCANid
  3904 ;; This function is called by:
  3905 ;;		_readCANFrame
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text13
  3910  000D22                     __ptext13:
  3911                           	callstack 0
  3912  000D22                     _CAN_receive:
  3913                           	callstack 20
  3914  000D22                     
  3915                           ;mcc_generated_files/ecan.c: 210: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 211: {;mcc_generated_files/ecan.c: 212:     uint8_t returnValue = 0;
  3916  000D22  0E00               	movlw	0
  3917  000D24  0100               	movlb	0	; () banked
  3918  000D26  6F75               	movwf	CAN_receive@returnValue& (0+255),b
  3919  000D28                     
  3920                           ; BSR set to: 0
  3921                           ;mcc_generated_files/ecan.c: 215:     if (RXB0CONbits.RXFUL != 0)
  3922  000D28  AE80               	btfss	128,7,c	;volatile
  3923  000D2A  EF99  F006         	goto	u1601
  3924  000D2E  EF9B  F006         	goto	u1600
  3925  000D32                     u1601:
  3926  000D32  EF4D  F007         	goto	l841
  3927  000D36                     u1600:
  3928  000D36                     
  3929                           ; BSR set to: 0
  3930                           ;mcc_generated_files/ecan.c: 216:     {;mcc_generated_files/ecan.c: 217:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  3931  000D36  A682               	btfss	130,3,c	;volatile
  3932  000D38  EFA0  F006         	goto	u1611
  3933  000D3C  EFA2  F006         	goto	u1610
  3934  000D40                     u1611:
  3935  000D40  EFCB  F006         	goto	l3887
  3936  000D44                     u1610:
  3937  000D44                     
  3938                           ; BSR set to: 0
  3939                           ;mcc_generated_files/ecan.c: 218:         {;mcc_generated_files/ecan.c: 220:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3940  000D44  0060  F1CF  FFD9   	movff	CAN_receive@tempCanMsg,fsr2l
  3941  000D4A  0060  F1D3  FFDA   	movff	CAN_receive@tempCanMsg+1,fsr2h
  3942  000D50  0E02               	movlw	2
  3943  000D52  6EDF               	movwf	indf2,c
  3944  000D54                     
  3945                           ; BSR set to: 0
  3946                           ;mcc_generated_files/ecan.c: 221:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  3947  000D54  006F FE10  F060    	movff	16260,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3948  000D5A  006F FE04  F061    	movff	16257,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3949  000D60  006F FE08  F062    	movff	16258,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3950  000D66  5083               	movf	131,w,c	;volatile
  3951  000D68  ECD6  F00A         	call	_convertReg2ExtendedCANid
  3952  000D6C  0100               	movlb	0	; () banked
  3953  000D6E  EE20 F001          	lfsr	2,1
  3954  000D72  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  3955  000D74  26D9               	addwf	fsr2l,f,c
  3956  000D76  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  3957  000D78  22DA               	addwfc	fsr2h,f,c
  3958  000D7A  0060  F183  FFDE   	movff	?_convertReg2ExtendedCANid,postinc2
  3959  000D80  0060  F187  FFDE   	movff	?_convertReg2ExtendedCANid+1,postinc2
  3960  000D86  0060  F18B  FFDE   	movff	?_convertReg2ExtendedCANid+2,postinc2
  3961  000D8C  0060  F18F  FFDE   	movff	?_convertReg2ExtendedCANid+3,postinc2
  3962                           
  3963                           ;mcc_generated_files/ecan.c: 222:         }
  3964  000D92  EFEC  F006         	goto	l3891
  3965  000D96                     l3887:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;mcc_generated_files/ecan.c: 224:         {;mcc_generated_files/ecan.c: 226:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3969  000D96  0060  F1CF  FFD9   	movff	CAN_receive@tempCanMsg,fsr2l
  3970  000D9C  0060  F1D3  FFDA   	movff	CAN_receive@tempCanMsg+1,fsr2h
  3971  000DA2  0E01               	movlw	1
  3972  000DA4  6EDF               	movwf	indf2,c
  3973  000DA6                     
  3974                           ; BSR set to: 0
  3975                           ;mcc_generated_files/ecan.c: 227:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  3976  000DA6  006F FE08  F060    	movff	16258,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3977  000DAC  5081               	movf	129,w,c	;volatile
  3978  000DAE  EC14  F011         	call	_convertReg2StandardCANid
  3979  000DB2  0100               	movlb	0	; () banked
  3980  000DB4  EE20 F001          	lfsr	2,1
  3981  000DB8  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  3982  000DBA  26D9               	addwf	fsr2l,f,c
  3983  000DBC  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  3984  000DBE  22DA               	addwfc	fsr2h,f,c
  3985  000DC0  0060  F183  FFDE   	movff	?_convertReg2StandardCANid,postinc2
  3986  000DC6  0060  F187  FFDE   	movff	?_convertReg2StandardCANid+1,postinc2
  3987  000DCC  0060  F18B  FFDE   	movff	?_convertReg2StandardCANid+2,postinc2
  3988  000DD2  0060  F18F  FFDE   	movff	?_convertReg2StandardCANid+3,postinc2
  3989  000DD8                     l3891:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;mcc_generated_files/ecan.c: 230:         tempCanMsg->frame.dlc = RXB0DLC & 0x0F;
  3993  000DD8  EE20 F005          	lfsr	2,5
  3994  000DDC  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  3995  000DDE  26D9               	addwf	fsr2l,f,c
  3996  000DE0  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  3997  000DE2  22DA               	addwfc	fsr2h,f,c
  3998  000DE4  5085               	movf	133,w,c	;volatile
  3999  000DE6  0B0F               	andlw	15
  4000  000DE8  6EDF               	movwf	indf2,c
  4001  000DEA                     
  4002                           ; BSR set to: 0
  4003                           ;mcc_generated_files/ecan.c: 231:         tempCanMsg->frame.rtr = RXB0DLC >> 6;
  4004  000DEA  EE20 F00E          	lfsr	2,14
  4005  000DEE  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4006  000DF0  26D9               	addwf	fsr2l,f,c
  4007  000DF2  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4008  000DF4  22DA               	addwfc	fsr2h,f,c
  4009  000DF6  4485               	rlncf	133,w,c	;volatile
  4010  000DF8  46E8               	rlncf	wreg,f,c
  4011  000DFA  0B03               	andlw	3
  4012  000DFC  6EDF               	movwf	indf2,c
  4013  000DFE                     
  4014                           ; BSR set to: 0
  4015                           ;mcc_generated_files/ecan.c: 232:         tempCanMsg->frame.data0 = RXB0D0;
  4016  000DFE  EE20 F006          	lfsr	2,6
  4017  000E02  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4018  000E04  26D9               	addwf	fsr2l,f,c
  4019  000E06  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4020  000E08  22DA               	addwfc	fsr2h,f,c
  4021  000E0A  006F FE1B FFDF     	movff	16262,indf2	;volatile
  4022  000E10                     
  4023                           ; BSR set to: 0
  4024                           ;mcc_generated_files/ecan.c: 233:         tempCanMsg->frame.data1 = RXB0D1;
  4025  000E10  EE20 F007          	lfsr	2,7
  4026  000E14  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4027  000E16  26D9               	addwf	fsr2l,f,c
  4028  000E18  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4029  000E1A  22DA               	addwfc	fsr2h,f,c
  4030  000E1C  006F FE1F FFDF     	movff	16263,indf2	;volatile
  4031  000E22                     
  4032                           ; BSR set to: 0
  4033                           ;mcc_generated_files/ecan.c: 234:         tempCanMsg->frame.data2 = RXB0D2;
  4034  000E22  EE20 F008          	lfsr	2,8
  4035  000E26  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4036  000E28  26D9               	addwf	fsr2l,f,c
  4037  000E2A  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4038  000E2C  22DA               	addwfc	fsr2h,f,c
  4039  000E2E  006F FE23 FFDF     	movff	16264,indf2	;volatile
  4040  000E34                     
  4041                           ; BSR set to: 0
  4042                           ;mcc_generated_files/ecan.c: 235:         tempCanMsg->frame.data3 = RXB0D3;
  4043  000E34  EE20 F009          	lfsr	2,9
  4044  000E38  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4045  000E3A  26D9               	addwf	fsr2l,f,c
  4046  000E3C  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4047  000E3E  22DA               	addwfc	fsr2h,f,c
  4048  000E40  006F FE27 FFDF     	movff	16265,indf2	;volatile
  4049  000E46                     
  4050                           ; BSR set to: 0
  4051                           ;mcc_generated_files/ecan.c: 236:         tempCanMsg->frame.data4 = RXB0D4;
  4052  000E46  EE20 F00A          	lfsr	2,10
  4053  000E4A  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4054  000E4C  26D9               	addwf	fsr2l,f,c
  4055  000E4E  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4056  000E50  22DA               	addwfc	fsr2h,f,c
  4057  000E52  006F FE2B FFDF     	movff	16266,indf2	;volatile
  4058  000E58                     
  4059                           ; BSR set to: 0
  4060                           ;mcc_generated_files/ecan.c: 237:         tempCanMsg->frame.data5 = RXB0D5;
  4061  000E58  EE20 F00B          	lfsr	2,11
  4062  000E5C  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4063  000E5E  26D9               	addwf	fsr2l,f,c
  4064  000E60  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4065  000E62  22DA               	addwfc	fsr2h,f,c
  4066  000E64  006F FE2F FFDF     	movff	16267,indf2	;volatile
  4067  000E6A                     
  4068                           ; BSR set to: 0
  4069                           ;mcc_generated_files/ecan.c: 238:         tempCanMsg->frame.data6 = RXB0D6;
  4070  000E6A  EE20 F00C          	lfsr	2,12
  4071  000E6E  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4072  000E70  26D9               	addwf	fsr2l,f,c
  4073  000E72  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4074  000E74  22DA               	addwfc	fsr2h,f,c
  4075  000E76  006F FE33 FFDF     	movff	16268,indf2	;volatile
  4076  000E7C                     
  4077                           ; BSR set to: 0
  4078                           ;mcc_generated_files/ecan.c: 239:         tempCanMsg->frame.data7 = RXB0D7;
  4079  000E7C  EE20 F00D          	lfsr	2,13
  4080  000E80  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4081  000E82  26D9               	addwf	fsr2l,f,c
  4082  000E84  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4083  000E86  22DA               	addwfc	fsr2h,f,c
  4084  000E88  006F FE37 FFDF     	movff	16269,indf2	;volatile
  4085  000E8E                     
  4086                           ; BSR set to: 0
  4087                           ;mcc_generated_files/ecan.c: 240:         RXB0CONbits.RXFUL = 0;
  4088  000E8E  9E80               	bcf	128,7,c	;volatile
  4089  000E90                     l3913:
  4090                           
  4091                           ;mcc_generated_files/ecan.c: 241:         returnValue = 1;
  4092  000E90  0E01               	movlw	1
  4093  000E92  0100               	movlb	0	; () banked
  4094  000E94  6F75               	movwf	CAN_receive@returnValue& (0+255),b
  4095                           
  4096                           ;mcc_generated_files/ecan.c: 242:     }
  4097  000E96  EF09  F008         	goto	l3949
  4098  000E9A                     l841:
  4099                           
  4100                           ; BSR set to: 0
  4101  000E9A  0137               	movlb	55	; () banked
  4102  000E9C  AFF0               	btfss	240,7,b	;volatile
  4103  000E9E  EF53  F007         	goto	u1621
  4104  000EA2  EF55  F007         	goto	u1620
  4105  000EA6                     u1621:
  4106  000EA6  EF09  F008         	goto	l3949
  4107  000EAA                     u1620:
  4108  000EAA                     
  4109                           ; BSR set to: 55
  4110                           ;mcc_generated_files/ecan.c: 244:     {;mcc_generated_files/ecan.c: 245:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  4111  000EAA  A7F2               	btfss	242,3,b	;volatile
  4112  000EAC  EF5A  F007         	goto	u1631
  4113  000EB0  EF5C  F007         	goto	u1630
  4114  000EB4                     u1631:
  4115  000EB4  EF85  F007         	goto	l3921
  4116  000EB8                     u1630:
  4117  000EB8                     
  4118                           ; BSR set to: 55
  4119                           ;mcc_generated_files/ecan.c: 246:         {;mcc_generated_files/ecan.c: 248:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  4120  000EB8  0060  F1CF  FFD9   	movff	CAN_receive@tempCanMsg,fsr2l
  4121  000EBE  0060  F1D3  FFDA   	movff	CAN_receive@tempCanMsg+1,fsr2h
  4122  000EC4  0E02               	movlw	2
  4123  000EC6  6EDF               	movwf	indf2,c
  4124  000EC8                     
  4125                           ; BSR set to: 55
  4126                           ;mcc_generated_files/ecan.c: 249:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  4127  000EC8  006D FFD0  F060    	movff	14324,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  4128  000ECE  006D FFC4  F061    	movff	14321,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  4129  000ED4  006D FFC8  F062    	movff	14322,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  4130  000EDA  51F3               	movf	243,w,b	;volatile
  4131  000EDC  ECD6  F00A         	call	_convertReg2ExtendedCANid
  4132  000EE0  0100               	movlb	0	; () banked
  4133  000EE2  EE20 F001          	lfsr	2,1
  4134  000EE6  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4135  000EE8  26D9               	addwf	fsr2l,f,c
  4136  000EEA  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4137  000EEC  22DA               	addwfc	fsr2h,f,c
  4138  000EEE  0060  F183  FFDE   	movff	?_convertReg2ExtendedCANid,postinc2
  4139  000EF4  0060  F187  FFDE   	movff	?_convertReg2ExtendedCANid+1,postinc2
  4140  000EFA  0060  F18B  FFDE   	movff	?_convertReg2ExtendedCANid+2,postinc2
  4141  000F00  0060  F18F  FFDE   	movff	?_convertReg2ExtendedCANid+3,postinc2
  4142                           
  4143                           ;mcc_generated_files/ecan.c: 250:         }
  4144  000F06  EFA6  F007         	goto	l3925
  4145  000F0A                     l3921:
  4146                           
  4147                           ; BSR set to: 55
  4148                           ;mcc_generated_files/ecan.c: 252:         {;mcc_generated_files/ecan.c: 254:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  4149  000F0A  0060  F1CF  FFD9   	movff	CAN_receive@tempCanMsg,fsr2l
  4150  000F10  0060  F1D3  FFDA   	movff	CAN_receive@tempCanMsg+1,fsr2h
  4151  000F16  0E01               	movlw	1
  4152  000F18  6EDF               	movwf	indf2,c
  4153  000F1A                     
  4154                           ; BSR set to: 55
  4155                           ;mcc_generated_files/ecan.c: 255:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  4156  000F1A  006D FFC8  F060    	movff	14322,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  4157  000F20  51F1               	movf	241,w,b	;volatile
  4158  000F22  EC14  F011         	call	_convertReg2StandardCANid
  4159  000F26  0100               	movlb	0	; () banked
  4160  000F28  EE20 F001          	lfsr	2,1
  4161  000F2C  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4162  000F2E  26D9               	addwf	fsr2l,f,c
  4163  000F30  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4164  000F32  22DA               	addwfc	fsr2h,f,c
  4165  000F34  0060  F183  FFDE   	movff	?_convertReg2StandardCANid,postinc2
  4166  000F3A  0060  F187  FFDE   	movff	?_convertReg2StandardCANid+1,postinc2
  4167  000F40  0060  F18B  FFDE   	movff	?_convertReg2StandardCANid+2,postinc2
  4168  000F46  0060  F18F  FFDE   	movff	?_convertReg2StandardCANid+3,postinc2
  4169  000F4C                     l3925:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;mcc_generated_files/ecan.c: 258:         tempCanMsg->frame.dlc = RXB1DLC & 0x0F;
  4173  000F4C  EE20 F005          	lfsr	2,5
  4174  000F50  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4175  000F52  26D9               	addwf	fsr2l,f,c
  4176  000F54  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4177  000F56  22DA               	addwfc	fsr2h,f,c
  4178  000F58  0137               	movlb	55	; () banked
  4179  000F5A  51F5               	movf	245,w,b	;volatile
  4180  000F5C  0B0F               	andlw	15
  4181  000F5E  6EDF               	movwf	indf2,c
  4182  000F60                     
  4183                           ; BSR set to: 55
  4184                           ;mcc_generated_files/ecan.c: 259:         tempCanMsg->frame.rtr = RXB1DLC >> 6;
  4185  000F60  0100               	movlb	0	; () banked
  4186  000F62  EE20 F00E          	lfsr	2,14
  4187  000F66  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4188  000F68  26D9               	addwf	fsr2l,f,c
  4189  000F6A  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4190  000F6C  22DA               	addwfc	fsr2h,f,c
  4191  000F6E  0137               	movlb	55	; () banked
  4192  000F70  45F5               	rlncf	245,w,b	;volatile
  4193  000F72  46E8               	rlncf	wreg,f,c
  4194  000F74  0B03               	andlw	3
  4195  000F76  6EDF               	movwf	indf2,c
  4196  000F78                     
  4197                           ; BSR set to: 55
  4198                           ;mcc_generated_files/ecan.c: 260:         tempCanMsg->frame.data0 = RXB1D0;
  4199  000F78  0100               	movlb	0	; () banked
  4200  000F7A  EE20 F006          	lfsr	2,6
  4201  000F7E  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4202  000F80  26D9               	addwf	fsr2l,f,c
  4203  000F82  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4204  000F84  22DA               	addwfc	fsr2h,f,c
  4205  000F86  006D FFDB FFDF     	movff	14326,indf2	;volatile
  4206  000F8C                     
  4207                           ; BSR set to: 0
  4208                           ;mcc_generated_files/ecan.c: 261:         tempCanMsg->frame.data1 = RXB1D1;
  4209  000F8C  EE20 F007          	lfsr	2,7
  4210  000F90  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4211  000F92  26D9               	addwf	fsr2l,f,c
  4212  000F94  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4213  000F96  22DA               	addwfc	fsr2h,f,c
  4214  000F98  006D FFDF FFDF     	movff	14327,indf2	;volatile
  4215  000F9E                     
  4216                           ; BSR set to: 0
  4217                           ;mcc_generated_files/ecan.c: 262:         tempCanMsg->frame.data2 = RXB1D2;
  4218  000F9E  EE20 F008          	lfsr	2,8
  4219  000FA2  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4220  000FA4  26D9               	addwf	fsr2l,f,c
  4221  000FA6  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4222  000FA8  22DA               	addwfc	fsr2h,f,c
  4223  000FAA  006D FFE3 FFDF     	movff	14328,indf2	;volatile
  4224  000FB0                     
  4225                           ; BSR set to: 0
  4226                           ;mcc_generated_files/ecan.c: 263:         tempCanMsg->frame.data3 = RXB1D3;
  4227  000FB0  EE20 F009          	lfsr	2,9
  4228  000FB4  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4229  000FB6  26D9               	addwf	fsr2l,f,c
  4230  000FB8  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4231  000FBA  22DA               	addwfc	fsr2h,f,c
  4232  000FBC  006D FFE7 FFDF     	movff	14329,indf2	;volatile
  4233  000FC2                     
  4234                           ; BSR set to: 0
  4235                           ;mcc_generated_files/ecan.c: 264:         tempCanMsg->frame.data4 = RXB1D4;
  4236  000FC2  EE20 F00A          	lfsr	2,10
  4237  000FC6  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4238  000FC8  26D9               	addwf	fsr2l,f,c
  4239  000FCA  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4240  000FCC  22DA               	addwfc	fsr2h,f,c
  4241  000FCE  006D FFEB FFDF     	movff	14330,indf2	;volatile
  4242  000FD4                     
  4243                           ; BSR set to: 0
  4244                           ;mcc_generated_files/ecan.c: 265:         tempCanMsg->frame.data5 = RXB1D5;
  4245  000FD4  EE20 F00B          	lfsr	2,11
  4246  000FD8  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4247  000FDA  26D9               	addwf	fsr2l,f,c
  4248  000FDC  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4249  000FDE  22DA               	addwfc	fsr2h,f,c
  4250  000FE0  006D FFEF FFDF     	movff	14331,indf2	;volatile
  4251  000FE6                     
  4252                           ; BSR set to: 0
  4253                           ;mcc_generated_files/ecan.c: 266:         tempCanMsg->frame.data6 = RXB1D6;
  4254  000FE6  EE20 F00C          	lfsr	2,12
  4255  000FEA  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4256  000FEC  26D9               	addwf	fsr2l,f,c
  4257  000FEE  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4258  000FF0  22DA               	addwfc	fsr2h,f,c
  4259  000FF2  006D FFF3 FFDF     	movff	14332,indf2	;volatile
  4260  000FF8                     
  4261                           ; BSR set to: 0
  4262                           ;mcc_generated_files/ecan.c: 267:         tempCanMsg->frame.data7 = RXB1D7;
  4263  000FF8  EE20 F00D          	lfsr	2,13
  4264  000FFC  5173               	movf	CAN_receive@tempCanMsg& (0+255),w,b
  4265  000FFE  26D9               	addwf	fsr2l,f,c
  4266  001000  5174               	movf	(CAN_receive@tempCanMsg+1)& (0+255),w,b
  4267  001002  22DA               	addwfc	fsr2h,f,c
  4268  001004  006D FFF7 FFDF     	movff	14333,indf2	;volatile
  4269  00100A                     
  4270                           ; BSR set to: 0
  4271                           ;mcc_generated_files/ecan.c: 268:         RXB1CONbits.RXFUL = 0;
  4272  00100A  0137               	movlb	55	; () banked
  4273  00100C  9FF0               	bcf	240,7,b	;volatile
  4274  00100E  EF48  F007         	goto	l3913
  4275  001012                     l3949:
  4276                           
  4277                           ;mcc_generated_files/ecan.c: 271:     return (returnValue);
  4278  001012  0100               	movlb	0	; () banked
  4279  001014  5175               	movf	CAN_receive@returnValue& (0+255),w,b
  4280  001016                     
  4281                           ; BSR set to: 0
  4282  001016  0012               	return		;funcret
  4283  001018                     __end_of_CAN_receive:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _convertReg2StandardCANid *****************
  4287 ;; Defined at:
  4288 ;;		line 358 in file "mcc_generated_files/ecan.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  tempRXBn_SID    1    wreg     unsigned char 
  4291 ;;  tempRXBn_SID    1    0[BANK0 ] unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  tempRXBn_SID    1    6[BANK0 ] unsigned char 
  4294 ;;  ConvertedID     4   11[BANK0 ] unsigned long 
  4295 ;;  returnValue     4    7[BANK0 ] unsigned long 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  4    0[BANK0 ] unsigned long 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;Total ram usage:       15 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 6
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_CAN_receive
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text14
  4320  002228                     __ptext14:
  4321                           	callstack 0
  4322  002228                     _convertReg2StandardCANid:
  4323                           	callstack 20
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;incstack = 0
  4327                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  4328  002228  0100               	movlb	0	; () banked
  4329  00222A  6F66               	movwf	convertReg2StandardCANid@tempRXBn_SIDH& (0+255),b
  4330  00222C                     
  4331                           ;mcc_generated_files/ecan.c: 361:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          365:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  4332  00222C  0100               	movlb	0	; () banked
  4333  00222E  5166               	movf	convertReg2StandardCANid@tempRXBn_SIDH& (0+255),w,b
  4334  002230  6F64               	movwf	??_convertReg2StandardCANid& (0+255),b
  4335  002232  6B65               	clrf	(??_convertReg2StandardCANid+1)& (0+255),b
  4336  002234  90D8               	bcf	status,0,c
  4337  002236  3764               	rlcf	??_convertReg2StandardCANid& (0+255),f,b
  4338  002238  3765               	rlcf	(??_convertReg2StandardCANid+1)& (0+255),f,b
  4339  00223A  90D8               	bcf	status,0,c
  4340  00223C  3764               	rlcf	??_convertReg2StandardCANid& (0+255),f,b
  4341  00223E  3765               	rlcf	(??_convertReg2StandardCANid+1)& (0+255),f,b
  4342  002240  90D8               	bcf	status,0,c
  4343  002242  3764               	rlcf	??_convertReg2StandardCANid& (0+255),f,b
  4344  002244  3765               	rlcf	(??_convertReg2StandardCANid+1)& (0+255),f,b
  4345  002246  C064  F06B         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  4346  00224A  C065  F06C         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  4347  00224E  0E00               	movlw	0
  4348  002250  BF6C               	btfsc	(convertReg2StandardCANid@ConvertedID+1)& (0+255),7,b
  4349  002252  0EFF               	movlw	-1
  4350  002254  6F6D               	movwf	(convertReg2StandardCANid@ConvertedID+2)& (0+255),b
  4351  002256  6F6E               	movwf	(convertReg2StandardCANid@ConvertedID+3)& (0+255),b
  4352  002258                     
  4353                           ; BSR set to: 0
  4354                           ;mcc_generated_files/ecan.c: 366:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  4355  002258  C060  F064         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  4356  00225C  0E05               	movlw	5
  4357  00225E  6F65               	movwf	(??_convertReg2StandardCANid+1)& (0+255),b
  4358  002260                     u1515:
  4359  002260  90D8               	bcf	status,0,c
  4360  002262  3364               	rrcf	??_convertReg2StandardCANid& (0+255),f,b
  4361  002264  2F65               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,b
  4362  002266  EF30  F011         	goto	u1515
  4363  00226A  5164               	movf	??_convertReg2StandardCANid& (0+255),w,b
  4364  00226C  256B               	addwf	convertReg2StandardCANid@ConvertedID& (0+255),w,b
  4365  00226E  6F6B               	movwf	convertReg2StandardCANid@ConvertedID& (0+255),b
  4366  002270  0E00               	movlw	0
  4367  002272  216C               	addwfc	(convertReg2StandardCANid@ConvertedID+1)& (0+255),w,b
  4368  002274  6F6C               	movwf	(convertReg2StandardCANid@ConvertedID+1)& (0+255),b
  4369  002276  0E00               	movlw	0
  4370  002278  216D               	addwfc	(convertReg2StandardCANid@ConvertedID+2)& (0+255),w,b
  4371  00227A  6F6D               	movwf	(convertReg2StandardCANid@ConvertedID+2)& (0+255),b
  4372  00227C  0E00               	movlw	0
  4373  00227E  216E               	addwfc	(convertReg2StandardCANid@ConvertedID+3)& (0+255),w,b
  4374  002280  6F6E               	movwf	(convertReg2StandardCANid@ConvertedID+3)& (0+255),b
  4375  002282                     
  4376                           ; BSR set to: 0
  4377                           ;mcc_generated_files/ecan.c: 367:     returnValue = ConvertedID;
  4378  002282  C06B  F067         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  4379  002286  C06C  F068         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  4380  00228A  C06D  F069         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  4381  00228E  C06E  F06A         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  4382  002292                     
  4383                           ; BSR set to: 0
  4384                           ;mcc_generated_files/ecan.c: 368:     return (returnValue);
  4385  002292  C067  F060         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  4386  002296  C068  F061         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  4387  00229A  C069  F062         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  4388  00229E  C06A  F063         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  4389  0022A2                     
  4390                           ; BSR set to: 0
  4391  0022A2  0012               	return		;funcret
  4392  0022A4                     __end_of_convertReg2StandardCANid:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _convertReg2ExtendedCANid *****************
  4396 ;; Defined at:
  4397 ;;		line 337 in file "mcc_generated_files/ecan.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  tempRXBn_EID    1    wreg     unsigned char 
  4400 ;;  tempRXBn_EID    1    0[BANK0 ] unsigned char 
  4401 ;;  tempRXBn_SID    1    1[BANK0 ] unsigned char 
  4402 ;;  tempRXBn_SID    1    2[BANK0 ] unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  tempRXBn_EID    1    8[BANK0 ] unsigned char 
  4405 ;;  ConvertedID     4   15[BANK0 ] unsigned long 
  4406 ;;  returnValue     4    9[BANK0 ] unsigned long 
  4407 ;;  CAN_standard    1   14[BANK0 ] unsigned char 
  4408 ;;  CAN_standard    1   13[BANK0 ] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  4    0[BANK0 ] unsigned long 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;Total ram usage:       19 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 6
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_CAN_receive
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text15
  4433  0015AC                     __ptext15:
  4434                           	callstack 0
  4435  0015AC                     _convertReg2ExtendedCANid:
  4436                           	callstack 20
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;incstack = 0
  4440                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  4441  0015AC  0100               	movlb	0	; () banked
  4442  0015AE  6F68               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH& (0+255),b
  4443  0015B0                     
  4444                           ;mcc_generated_files/ecan.c: 340:     uint32_t ConvertedID = 0;
  4445  0015B0  0E00               	movlw	0
  4446  0015B2  0100               	movlb	0	; () banked
  4447  0015B4  6F6F               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  4448  0015B6  0E00               	movlw	0
  4449  0015B8  6F70               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  4450  0015BA  0E00               	movlw	0
  4451  0015BC  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4452  0015BE  0E00               	movlw	0
  4453  0015C0  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4454  0015C2                     
  4455                           ; BSR set to: 0
  4456                           ;mcc_generated_files/ecan.c: 341:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 342:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 344
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  4457  0015C2  5162               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL& (0+255),w,b
  4458  0015C4  0B03               	andlw	3
  4459  0015C6  6F6D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits& (0+255),b
  4460  0015C8                     
  4461                           ; BSR set to: 0
  4462                           ;mcc_generated_files/ecan.c: 345:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  4463  0015C8  3962               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL& (0+255),w,b
  4464  0015CA  42E8               	rrncf	wreg,f,c
  4465  0015CC  0B07               	andlw	7
  4466  0015CE  6F6E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits& (0+255),b
  4467  0015D0                     
  4468                           ; BSR set to: 0
  4469                           ;mcc_generated_files/ecan.c: 346:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  4470  0015D0  5161               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH& (0+255),w,b
  4471  0015D2  6F64               	movwf	??_convertReg2ExtendedCANid& (0+255),b
  4472  0015D4  6B65               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),b
  4473  0015D6  90D8               	bcf	status,0,c
  4474  0015D8  3764               	rlcf	??_convertReg2ExtendedCANid& (0+255),f,b
  4475  0015DA  3765               	rlcf	(??_convertReg2ExtendedCANid+1)& (0+255),f,b
  4476  0015DC  90D8               	bcf	status,0,c
  4477  0015DE  3764               	rlcf	??_convertReg2ExtendedCANid& (0+255),f,b
  4478  0015E0  3765               	rlcf	(??_convertReg2ExtendedCANid+1)& (0+255),f,b
  4479  0015E2  90D8               	bcf	status,0,c
  4480  0015E4  3764               	rlcf	??_convertReg2ExtendedCANid& (0+255),f,b
  4481  0015E6  3765               	rlcf	(??_convertReg2ExtendedCANid+1)& (0+255),f,b
  4482  0015E8  C064  F06F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4483  0015EC  C065  F070         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4484  0015F0  0E00               	movlw	0
  4485  0015F2  BF70               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),7,b
  4486  0015F4  0EFF               	movlw	-1
  4487  0015F6  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4488  0015F8  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4489  0015FA                     
  4490                           ; BSR set to: 0
  4491                           ;mcc_generated_files/ecan.c: 347:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  4492  0015FA  516E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits& (0+255),w,b
  4493  0015FC  256F               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  4494  0015FE  6F6F               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  4495  001600  0E00               	movlw	0
  4496  001602  2170               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  4497  001604  6F70               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  4498  001606  0E00               	movlw	0
  4499  001608  2171               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  4500  00160A  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4501  00160C  0E00               	movlw	0
  4502  00160E  2172               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  4503  001610  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4504  001612                     
  4505                           ; BSR set to: 0
  4506                           ;mcc_generated_files/ecan.c: 348:     ConvertedID = (ConvertedID << 2);
  4507  001612  C06F  F064         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  4508  001616  C070  F065         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  4509  00161A  C071  F066         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  4510  00161E  C072  F067         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  4511  001622  0E02               	movlw	2
  4512  001624                     u1505:
  4513  001624  90D8               	bcf	status,0,c
  4514  001626  3764               	rlcf	??_convertReg2ExtendedCANid& (0+255),f,b
  4515  001628  3765               	rlcf	(??_convertReg2ExtendedCANid+1)& (0+255),f,b
  4516  00162A  3766               	rlcf	(??_convertReg2ExtendedCANid+2)& (0+255),f,b
  4517  00162C  3767               	rlcf	(??_convertReg2ExtendedCANid+3)& (0+255),f,b
  4518  00162E  2EE8               	decfsz	wreg,f,c
  4519  001630  EF12  F00B         	goto	u1505
  4520  001634  C064  F06F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4521  001638  C065  F070         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4522  00163C  C066  F071         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4523  001640  C067  F072         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4524  001644                     
  4525                           ; BSR set to: 0
  4526                           ;mcc_generated_files/ecan.c: 349:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  4527  001644  516D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits& (0+255),w,b
  4528  001646  256F               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  4529  001648  6F6F               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  4530  00164A  0E00               	movlw	0
  4531  00164C  2170               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  4532  00164E  6F70               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  4533  001650  0E00               	movlw	0
  4534  001652  2171               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  4535  001654  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4536  001656  0E00               	movlw	0
  4537  001658  2172               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  4538  00165A  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4539                           
  4540                           ;mcc_generated_files/ecan.c: 350:     ConvertedID = (ConvertedID << 8);
  4541  00165C  C06F  F065         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4542  001660  C070  F066         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4543  001664  C071  F067         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4544  001668  6B64               	clrf	??_convertReg2ExtendedCANid& (0+255),b
  4545  00166A  C064  F06F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4546  00166E  C065  F070         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4547  001672  C066  F071         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4548  001676  C067  F072         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4549  00167A                     
  4550                           ; BSR set to: 0
  4551                           ;mcc_generated_files/ecan.c: 351:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  4552  00167A  5168               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH& (0+255),w,b
  4553  00167C  256F               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  4554  00167E  6F6F               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  4555  001680  0E00               	movlw	0
  4556  001682  2170               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  4557  001684  6F70               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  4558  001686  0E00               	movlw	0
  4559  001688  2171               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  4560  00168A  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4561  00168C  0E00               	movlw	0
  4562  00168E  2172               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  4563  001690  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4564  001692                     
  4565                           ; BSR set to: 0
  4566                           ;mcc_generated_files/ecan.c: 352:     ConvertedID = (ConvertedID << 8);
  4567  001692  C06F  F065         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4568  001696  C070  F066         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4569  00169A  C071  F067         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4570  00169E  6B64               	clrf	??_convertReg2ExtendedCANid& (0+255),b
  4571  0016A0  C064  F06F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4572  0016A4  C065  F070         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4573  0016A8  C066  F071         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4574  0016AC  C067  F072         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4575                           
  4576                           ;mcc_generated_files/ecan.c: 353:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  4577  0016B0  5160               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL& (0+255),w,b
  4578  0016B2  256F               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  4579  0016B4  6F6F               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  4580  0016B6  0E00               	movlw	0
  4581  0016B8  2170               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  4582  0016BA  6F70               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  4583  0016BC  0E00               	movlw	0
  4584  0016BE  2171               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  4585  0016C0  6F71               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  4586  0016C2  0E00               	movlw	0
  4587  0016C4  2172               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  4588  0016C6  6F72               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  4589  0016C8                     
  4590                           ; BSR set to: 0
  4591                           ;mcc_generated_files/ecan.c: 354:     returnValue = ConvertedID;
  4592  0016C8  C06F  F069         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  4593  0016CC  C070  F06A         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  4594  0016D0  C071  F06B         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  4595  0016D4  C072  F06C         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  4596  0016D8                     
  4597                           ; BSR set to: 0
  4598                           ;mcc_generated_files/ecan.c: 355:     return (returnValue);
  4599  0016D8  C069  F060         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  4600  0016DC  C06A  F061         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  4601  0016E0  C06B  F062         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  4602  0016E4  C06C  F063         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  4603  0016E8                     
  4604                           ; BSR set to: 0
  4605  0016E8  0012               	return		;funcret
  4606  0016EA                     __end_of_convertReg2ExtendedCANid:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _Event_getData *****************
  4610 ;; Defined at:
  4611 ;;		line 18 in file "xf/event.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  me              2    0[BANK0 ] PTR struct Event_
  4614 ;;		 -> XF_executeOnce@ev(15), 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  8    0[BANK0 ] long long 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4626 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;Total ram usage:       16 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 6
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_commControl_processEvent
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text16
  4641  00257A                     __ptext16:
  4642                           	callstack 0
  4643  00257A                     _Event_getData:
  4644                           	callstack 22
  4645  00257A                     
  4646                           ;xf/event.c: 18: int64_t Event_getData(Event* me);xf/event.c: 19: {;xf/event.c: 20:     
      +                          return me->data;
  4647  00257A  0100               	movlb	0	; () banked
  4648  00257C  EE20 F007          	lfsr	2,7
  4649  002580  5160               	movf	Event_getData@me& (0+255),w,b
  4650  002582  26D9               	addwf	fsr2l,f,c
  4651  002584  5161               	movf	(Event_getData@me+1)& (0+255),w,b
  4652  002586  22DA               	addwfc	fsr2h,f,c
  4653  002588  006F FF78  F068    	movff	postinc2,??_Event_getData
  4654  00258E  006F FF78  F069    	movff	postinc2,??_Event_getData+1
  4655  002594  006F FF78  F06A    	movff	postinc2,??_Event_getData+2
  4656  00259A  006F FF78  F06B    	movff	postinc2,??_Event_getData+3
  4657  0025A0  006F FF78  F06C    	movff	postinc2,??_Event_getData+4
  4658  0025A6  006F FF78  F06D    	movff	postinc2,??_Event_getData+5
  4659  0025AC  006F FF78  F06E    	movff	postinc2,??_Event_getData+6
  4660  0025B2  006F FF78  F06F    	movff	postinc2,??_Event_getData+7
  4661  0025B8  C068  F060         	movff	??_Event_getData,?_Event_getData
  4662  0025BC  C069  F061         	movff	??_Event_getData+1,?_Event_getData+1
  4663  0025C0  C06A  F062         	movff	??_Event_getData+2,?_Event_getData+2
  4664  0025C4  C06B  F063         	movff	??_Event_getData+3,?_Event_getData+3
  4665  0025C8  C06C  F064         	movff	??_Event_getData+4,?_Event_getData+4
  4666  0025CC  C06D  F065         	movff	??_Event_getData+5,?_Event_getData+5
  4667  0025D0  C06E  F066         	movff	??_Event_getData+6,?_Event_getData+6
  4668  0025D4  C06F  F067         	movff	??_Event_getData+7,?_Event_getData+7
  4669  0025D8                     
  4670                           ; BSR set to: 0
  4671  0025D8  0012               	return		;funcret
  4672  0025DA                     __end_of_Event_getData:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function _XF_popEvent *****************
  4676 ;; Defined at:
  4677 ;;		line 130 in file "xf/xf.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  inISR           1    wreg     _Bool 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  inISR           1   23[BANK0 ] _Bool 
  4682 ;;  ev             15   24[BANK0 ] struct Event_
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  15    6[BANK0 ] struct Event_
  4685 ;; Registers used:
  4686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4692 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;Total ram usage:       33 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 7
  4699 ;; This function calls:
  4700 ;;		_ENTERCRITICAL
  4701 ;;		_LEAVECRITICAL
  4702 ;;		___awmod
  4703 ;; This function is called by:
  4704 ;;		_XF_executeOnce
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text17
  4709  001CD6                     __ptext17:
  4710                           	callstack 0
  4711  001CD6                     _XF_popEvent:
  4712                           	callstack 22
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;incstack = 0
  4716                           ;XF_popEvent@inISR stored from wreg
  4717  001CD6  0100               	movlb	0	; () banked
  4718  001CD8  6F77               	movwf	XF_popEvent@inISR& (0+255),b
  4719  001CDA                     
  4720                           ;xf/xf.c: 130: Event XF_popEvent(_Bool inISR);xf/xf.c: 131: {;xf/xf.c: 132:     Event ev
      +                          ;;xf/xf.c: 133:     ev.id = 0;
  4721  001CDA  0E00               	movlw	0
  4722  001CDC  0100               	movlb	0	; () banked
  4723  001CDE  6F78               	movwf	XF_popEvent@ev& (0+255),b
  4724                           
  4725                           ;xf/xf.c: 134:     ev.target = ((void*)0);
  4726  001CE0  0E00               	movlw	0
  4727  001CE2  6F7B               	movwf	(XF_popEvent@ev+3)& (0+255),b
  4728  001CE4  0E00               	movlw	0
  4729  001CE6  6F7C               	movwf	(XF_popEvent@ev+4)& (0+255),b
  4730                           
  4731                           ;xf/xf.c: 135:     ev.processEvent = ((void*)0);
  4732  001CE8  0E00               	movlw	0
  4733  001CEA  6F79               	movwf	(XF_popEvent@ev+1)& (0+255),b
  4734  001CEC  0E00               	movlw	0
  4735  001CEE  6F7A               	movwf	(XF_popEvent@ev+2)& (0+255),b
  4736  001CF0                     
  4737                           ; BSR set to: 0
  4738                           ;xf/xf.c: 137:     ENTERCRITICAL(inISR);
  4739  001CF0  5177               	movf	XF_popEvent@inISR& (0+255),w,b
  4740  001CF2  ECF4  F014         	call	_ENTERCRITICAL
  4741  001CF6                     
  4742                           ;xf/xf.c: 138:     if(theXF.in == theXF.out)
  4743  001CF6  EE20  F235         	lfsr	2,_theXF+317
  4744  001CFA  EE10  F234         	lfsr	1,_theXF+316
  4745  001CFE  50DE               	movf	postinc2,w,c
  4746  001D00  18E6               	xorwf	postinc1,w,c
  4747  001D02  A4D8               	btfss	status,2,c
  4748  001D04  EF86  F00E         	goto	u2211
  4749  001D08  EF88  F00E         	goto	u2210
  4750  001D0C                     u2211:
  4751  001D0C  EF98  F00E         	goto	l4631
  4752  001D10                     u2210:
  4753  001D10                     
  4754                           ;xf/xf.c: 139:     {;xf/xf.c: 140:       LEAVECRITICAL(inISR);
  4755  001D10  0100               	movlb	0	; () banked
  4756  001D12  5177               	movf	XF_popEvent@inISR& (0+255),w,b
  4757  001D14  ECE7  F014         	call	_LEAVECRITICAL
  4758  001D18                     l4627:
  4759                           
  4760                           ;xf/xf.c: 141:       return ev;
  4761  001D18  EE20  F078         	lfsr	2,XF_popEvent@ev
  4762  001D1C  EE00  F066         	lfsr	0,?_XF_popEvent
  4763  001D20  0E0E               	movlw	14
  4764  001D22                     u2221:
  4765  001D22  006F FF6F FFEB     	movff	plusw2,plusw0
  4766  001D28  06E8               	decf	wreg,f,c
  4767  001D2A  E2FB               	bc	u2221
  4768  001D2C  EFC4  F00E         	goto	l1060
  4769  001D30                     l4631:
  4770                           
  4771                           ;xf/xf.c: 143:     ev = theXF.eventQueue[theXF.out];
  4772  001D30  0060  F8D4  F075   	movff	_theXF+317,??_XF_popEvent
  4773  001D36  0100               	movlb	0	; () banked
  4774  001D38  5175               	movf	??_XF_popEvent& (0+255),w,b
  4775  001D3A  0D0F               	mullw	15
  4776  001D3C  0E80               	movlw	low (_theXF+136)
  4777  001D3E  24F3               	addwf	243,w,c
  4778  001D40  6ED9               	movwf	fsr2l,c
  4779  001D42  0E01               	movlw	high (_theXF+136)
  4780  001D44  20F4               	addwfc	prodh,w,c
  4781  001D46  6EDA               	movwf	fsr2h,c
  4782  001D48  EE10  F078         	lfsr	1,XF_popEvent@ev
  4783  001D4C  0E0E               	movlw	14
  4784  001D4E                     u2231:
  4785  001D4E  006F FF6F FFE3     	movff	plusw2,plusw1
  4786  001D54  06E8               	decf	wreg,f,c
  4787  001D56  E2FB               	bc	u2231
  4788  001D58                     
  4789                           ; BSR set to: 0
  4790                           ;xf/xf.c: 144:     theXF.out = (theXF.out + 1)%(uint8_t)(sizeof(theXF.eventQueue) / size
      +                          of(Event));
  4791  001D58  0060  F8D4  F075   	movff	_theXF+317,??_XF_popEvent
  4792  001D5E  0E01               	movlw	1
  4793  001D60  2575               	addwf	??_XF_popEvent& (0+255),w,b
  4794  001D62  6F60               	movwf	___awmod@dividend& (0+255),b
  4795  001D64  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4796  001D66  0E00               	movlw	0
  4797  001D68  2361               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4798  001D6A  0E00               	movlw	0
  4799  001D6C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4800  001D6E  0E0C               	movlw	12
  4801  001D70  6F62               	movwf	___awmod@divisor& (0+255),b
  4802  001D72  ECC5  F00E         	call	___awmod	;wreg free
  4803  001D76  0100               	movlb	0	; () banked
  4804  001D78  0060  F180  F235   	movff	?___awmod,_theXF+317
  4805  001D7E                     
  4806                           ; BSR set to: 0
  4807                           ;xf/xf.c: 145:     LEAVECRITICAL(inISR);
  4808  001D7E  5177               	movf	XF_popEvent@inISR& (0+255),w,b
  4809  001D80  ECE7  F014         	call	_LEAVECRITICAL
  4810  001D84  EF8C  F00E         	goto	l4627
  4811  001D88                     l1060:
  4812  001D88  0012               	return		;funcret
  4813  001D8A                     __end_of_XF_popEvent:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _Event_getId *****************
  4817 ;; Defined at:
  4818 ;;		line 48 in file "xf/event.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  me              2    0[BANK0 ] PTR struct Event_
  4821 ;;		 -> XF_executeOnce@ev(15), 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      unsigned char 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr2l, fsr2h
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        2 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 6
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_ButtonSM_processEvent
  4844 ;;		_commControl_processEvent
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text18
  4849  002AA2                     __ptext18:
  4850                           	callstack 0
  4851  002AA2                     _Event_getId:
  4852                           	callstack 22
  4853  002AA2                     
  4854                           ;xf/event.c: 48: evIDT Event_getId(Event* me);xf/event.c: 49: {;xf/event.c: 50:     retu
      +                          rn me->id;
  4855  002AA2  0060  F183  FFD9   	movff	Event_getId@me,fsr2l
  4856  002AA8  0060  F187  FFDA   	movff	Event_getId@me+1,fsr2h
  4857  002AAE  50DF               	movf	indf2,w,c
  4858  002AB0  0012               	return		;funcret
  4859  002AB2                     __end_of_Event_getId:
  4860                           	callstack 0
  4861                           
  4862 ;; *************** function _Button_getId *****************
  4863 ;; Defined at:
  4864 ;;		line 57 in file "board/button/button.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  me              2    0[BANK0 ] PTR struct Button_
  4867 ;;		 -> theFactory(29), 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      unsigned char 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr2l, fsr2h
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 6
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_ButtonSM_processEvent
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text19
  4894  002AB2                     __ptext19:
  4895                           	callstack 0
  4896  002AB2                     _Button_getId:
  4897                           	callstack 22
  4898  002AB2                     
  4899                           ;board/button/button.c: 57: uint8_t Button_getId(Button* me);board/button/button.c: 58: 
      +                          {;board/button/button.c: 59:     return me->id;
  4900  002AB2  0060  F183  FFD9   	movff	Button_getId@me,fsr2l
  4901  002AB8  0060  F187  FFDA   	movff	Button_getId@me+1,fsr2h
  4902  002ABE  50DF               	movf	indf2,w,c
  4903  002AC0  0012               	return		;funcret
  4904  002AC2                     __end_of_Button_getId:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _BLControl_onButton *****************
  4908 ;; Defined at:
  4909 ;;		line 11 in file "app/blcontrol.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  me              2    6[BANK0 ] PTR void 
  4912 ;;		 -> theFactory(29), NULL(0), 
  4913 ;;  buttonId        1    8[BANK0 ] unsigned char 
  4914 ;;  pressed         1    9[BANK0 ] _Bool 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  realMe          2    0        PTR struct BLControl_
  4917 ;;		 -> theFactory(29), NULL(0), 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        4 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 7
  4934 ;; This function calls:
  4935 ;;		_LED_off
  4936 ;;		_LED_on
  4937 ;;		_l
  4938 ;; This function is called by:
  4939 ;;		_Factory_build
  4940 ;;		_ButtonSM_processEvent
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text20
  4945  0026EA                     __ptext20:
  4946                           	callstack 0
  4947  0026EA                     _BLControl_onButton:
  4948                           	callstack 21
  4949  0026EA                     
  4950                           ;app/blcontrol.c: 14:     if (buttonId == 1)
  4951  0026EA  0100               	movlb	0	; () banked
  4952  0026EC  0568               	decf	BLControl_onButton@buttonId& (0+255),w,b
  4953  0026EE  A4D8               	btfss	status,2,c
  4954  0026F0  EF7C  F013         	goto	u1741
  4955  0026F4  EF7E  F013         	goto	u1740
  4956  0026F8                     u1741:
  4957  0026F8  EF98  F013         	goto	l15
  4958  0026FC                     u1740:
  4959  0026FC                     
  4960                           ; BSR set to: 0
  4961                           ;app/blcontrol.c: 15:     {;app/blcontrol.c: 16:         if (pressed)
  4962  0026FC  5169               	movf	BLControl_onButton@pressed& (0+255),w,b
  4963  0026FE  B4D8               	btfsc	status,2,c
  4964  002700  EF84  F013         	goto	u1751
  4965  002704  EF86  F013         	goto	u1750
  4966  002708                     u1751:
  4967  002708  EF90  F013         	goto	l4035
  4968  00270C                     u1750:
  4969  00270C                     
  4970                           ; BSR set to: 0
  4971                           ;app/blcontrol.c: 17:         {;app/blcontrol.c: 18:             LED_on(l());
  4972  00270C  EC68  F015         	call	_l	;wreg free
  4973  002710  C060  F062         	movff	?_l,LED_on@me
  4974  002714  C061  F063         	movff	?_l+1,LED_on@me+1
  4975  002718  EC90  F010         	call	_LED_on	;wreg free
  4976                           
  4977                           ;app/blcontrol.c: 19:         }
  4978  00271C  EF98  F013         	goto	l15
  4979  002720                     l4035:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;app/blcontrol.c: 21:         {;app/blcontrol.c: 22:             LED_off(l());
  4983  002720  EC68  F015         	call	_l	;wreg free
  4984  002724  C060  F062         	movff	?_l,LED_off@me
  4985  002728  C061  F063         	movff	?_l+1,LED_off@me+1
  4986  00272C  ECD2  F010         	call	_LED_off	;wreg free
  4987  002730                     l15:
  4988  002730  0012               	return		;funcret
  4989  002732                     __end_of_BLControl_onButton:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _LED_on *****************
  4993 ;; Defined at:
  4994 ;;		line 31 in file "board/led/led.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  me              2    2[BANK0 ] PTR struct LED_
  4997 ;;		 -> theFactory.l_(1), theFactory(29), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;Total ram usage:        4 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 6
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_BLControl_onButton
  5020 ;;		_LED_setState
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text21
  5025  002120                     __ptext21:
  5026                           	callstack 0
  5027  002120                     _LED_on:
  5028                           	callstack 21
  5029  002120                     
  5030                           ;board/led/led.c: 31: void LED_on(LED* me);board/led/led.c: 32: {;board/led/led.c: 33:  
      +                             switch (me->id)
  5031  002120  EF95  F010         	goto	l3839
  5032  002124                     l110:
  5033                           
  5034                           ; BSR set to: 0
  5035  002124  82BB               	bsf	187,1,c	;volatile
  5036  002126  EFD1  F010         	goto	l122
  5037  00212A                     l3839:
  5038  00212A  0060  F18B  FFD9   	movff	LED_on@me,fsr2l
  5039  002130  0060  F18F  FFDA   	movff	LED_on@me+1,fsr2h
  5040  002136  50DF               	movf	indf2,w,c
  5041  002138  0100               	movlb	0	; () banked
  5042  00213A  6F64               	movwf	??_LED_on& (0+255),b
  5043  00213C  6B65               	clrf	(??_LED_on+1)& (0+255),b
  5044                           
  5045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5046                           ; Switch size 1, requested type "simple"
  5047                           ; Number of cases is 1, Range of values is 0 to 0
  5048                           ; switch strategies available:
  5049                           ; Name         Instructions Cycles
  5050                           ; simple_byte            4     3 (average)
  5051                           ;	Chosen strategy is simple_byte
  5052  00213E  5165               	movf	(??_LED_on+1)& (0+255),w,b
  5053  002140  0A00               	xorlw	0	; case 0
  5054  002142  B4D8               	btfsc	status,2,c
  5055  002144  EFA6  F010         	goto	l5531
  5056  002148  EFD1  F010         	goto	l122
  5057  00214C                     l5531:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ; Switch size 1, requested type "simple"
  5061                           ; Number of cases is 10, Range of values is 1 to 10
  5062                           ; switch strategies available:
  5063                           ; Name         Instructions Cycles
  5064                           ; simple_byte           31    16 (average)
  5065                           ;	Chosen strategy is simple_byte
  5066  00214C  5164               	movf	??_LED_on& (0+255),w,b
  5067  00214E  0A01               	xorlw	1	; case 1
  5068  002150  B4D8               	btfsc	status,2,c
  5069  002152  EF92  F010         	goto	l110
  5070  002156  0A03               	xorlw	3	; case 2
  5071  002158  B4D8               	btfsc	status,2,c
  5072  00215A  EFD1  F010         	goto	l122
  5073  00215E  0A01               	xorlw	1	; case 3
  5074  002160  B4D8               	btfsc	status,2,c
  5075  002162  EFD1  F010         	goto	l122
  5076  002166  0A07               	xorlw	7	; case 4
  5077  002168  B4D8               	btfsc	status,2,c
  5078  00216A  EFD1  F010         	goto	l122
  5079  00216E  0A01               	xorlw	1	; case 5
  5080  002170  B4D8               	btfsc	status,2,c
  5081  002172  EFD1  F010         	goto	l122
  5082  002176  0A03               	xorlw	3	; case 6
  5083  002178  B4D8               	btfsc	status,2,c
  5084  00217A  EFD1  F010         	goto	l122
  5085  00217E  0A01               	xorlw	1	; case 7
  5086  002180  B4D8               	btfsc	status,2,c
  5087  002182  EFD1  F010         	goto	l122
  5088  002186  0A0F               	xorlw	15	; case 8
  5089  002188  B4D8               	btfsc	status,2,c
  5090  00218A  EFD1  F010         	goto	l122
  5091  00218E  0A01               	xorlw	1	; case 9
  5092  002190  B4D8               	btfsc	status,2,c
  5093  002192  EFD1  F010         	goto	l122
  5094  002196  0A03               	xorlw	3	; case 10
  5095  002198  B4D8               	btfsc	status,2,c
  5096  00219A  EFD1  F010         	goto	l122
  5097  00219E  EFD1  F010         	goto	l122
  5098  0021A2                     l122:
  5099                           
  5100                           ; BSR set to: 0
  5101  0021A2  0012               	return		;funcret
  5102  0021A4                     __end_of_LED_on:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _SYSTEM_Initialize *****************
  5106 ;; Defined at:
  5107 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 8
  5128 ;; This function calls:
  5129 ;;		_ECAN_Initialize
  5130 ;;		_INTERRUPT_Initialize
  5131 ;;		_OSCILLATOR_Initialize
  5132 ;;		_PIN_MANAGER_Initialize
  5133 ;;		_PMD_Initialize
  5134 ;;		_TMR0_Initialize
  5135 ;;		_UART1_Initialize
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text22
  5142  002940                     __ptext22:
  5143                           	callstack 0
  5144  002940                     _SYSTEM_Initialize:
  5145                           	callstack 22
  5146  002940                     
  5147                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5148  002940  EC9A  F015         	call	_INTERRUPT_Initialize	;wreg free
  5149  002944                     
  5150                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5151  002944  EC8E  F014         	call	_PMD_Initialize	;wreg free
  5152  002948                     
  5153                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5154  002948  ECED  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  5155  00294C                     
  5156                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5157  00294C  EC1B  F015         	call	_OSCILLATOR_Initialize	;wreg free
  5158  002950                     
  5159                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  5160  002950  EC7B  F014         	call	_TMR0_Initialize	;wreg free
  5161  002954                     
  5162                           ;mcc_generated_files/mcc.c: 57:     UART1_Initialize();
  5163  002954  EC8C  F011         	call	_UART1_Initialize	;wreg free
  5164  002958                     
  5165                           ;mcc_generated_files/mcc.c: 58:     ECAN_Initialize();
  5166  002958  EC0C  F008         	call	_ECAN_Initialize	;wreg free
  5167  00295C  0012               	return		;funcret
  5168  00295E                     __end_of_SYSTEM_Initialize:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _UART1_Initialize *****************
  5172 ;; Defined at:
  5173 ;;		line 66 in file "mcc_generated_files/uart1.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 7
  5194 ;; This function calls:
  5195 ;;		_UART1_SetErrorHandler
  5196 ;;		_UART1_SetFramingErrorHandler
  5197 ;;		_UART1_SetOverrunErrorHandler
  5198 ;; This function is called by:
  5199 ;;		_SYSTEM_Initialize
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text23
  5204  002318                     __ptext23:
  5205                           	callstack 0
  5206  002318                     _UART1_Initialize:
  5207                           	callstack 22
  5208  002318                     
  5209                           ;mcc_generated_files/uart1.c: 73:     U1P1L = 0x00;
  5210  002318  0E00               	movlw	0
  5211  00231A  013D               	movlb	61	; () banked
  5212  00231C  6FEC               	movwf	236,b	;volatile
  5213                           
  5214                           ;mcc_generated_files/uart1.c: 76:     U1P1H = 0x00;
  5215  00231E  0E00               	movlw	0
  5216  002320  6FED               	movwf	237,b	;volatile
  5217                           
  5218                           ;mcc_generated_files/uart1.c: 79:     U1P2L = 0x00;
  5219  002322  0E00               	movlw	0
  5220  002324  6FEE               	movwf	238,b	;volatile
  5221                           
  5222                           ;mcc_generated_files/uart1.c: 82:     U1P2H = 0x00;
  5223  002326  0E00               	movlw	0
  5224  002328  6FEF               	movwf	239,b	;volatile
  5225                           
  5226                           ;mcc_generated_files/uart1.c: 85:     U1P3L = 0x00;
  5227  00232A  0E00               	movlw	0
  5228  00232C  6FF0               	movwf	240,b	;volatile
  5229                           
  5230                           ;mcc_generated_files/uart1.c: 88:     U1P3H = 0x00;
  5231  00232E  0E00               	movlw	0
  5232  002330  6FF1               	movwf	241,b	;volatile
  5233                           
  5234                           ;mcc_generated_files/uart1.c: 91:     U1CON0 = 0xB0;
  5235  002332  0EB0               	movlw	176
  5236  002334  6FF2               	movwf	242,b	;volatile
  5237                           
  5238                           ;mcc_generated_files/uart1.c: 94:     U1CON1 = 0x80;
  5239  002336  0E80               	movlw	128
  5240  002338  6FF3               	movwf	243,b	;volatile
  5241                           
  5242                           ;mcc_generated_files/uart1.c: 97:     U1CON2 = 0x00;
  5243  00233A  0E00               	movlw	0
  5244  00233C  6FF4               	movwf	244,b	;volatile
  5245                           
  5246                           ;mcc_generated_files/uart1.c: 100:     U1BRGL = 0x8A;
  5247  00233E  0E8A               	movlw	138
  5248  002340  6FF5               	movwf	245,b	;volatile
  5249                           
  5250                           ;mcc_generated_files/uart1.c: 103:     U1BRGH = 0x00;
  5251  002342  0E00               	movlw	0
  5252  002344  6FF6               	movwf	246,b	;volatile
  5253                           
  5254                           ;mcc_generated_files/uart1.c: 106:     U1FIFO = 0x00;
  5255  002346  0E00               	movlw	0
  5256  002348  6FF7               	movwf	247,b	;volatile
  5257                           
  5258                           ;mcc_generated_files/uart1.c: 109:     U1UIR = 0x00;
  5259  00234A  0E00               	movlw	0
  5260  00234C  6FF8               	movwf	248,b	;volatile
  5261                           
  5262                           ;mcc_generated_files/uart1.c: 112:     U1ERRIR = 0x00;
  5263  00234E  0E00               	movlw	0
  5264  002350  6FF9               	movwf	249,b	;volatile
  5265                           
  5266                           ;mcc_generated_files/uart1.c: 115:     U1ERRIE = 0x00;
  5267  002352  0E00               	movlw	0
  5268  002354  6FFA               	movwf	250,b	;volatile
  5269  002356                     
  5270                           ; BSR set to: 61
  5271                           ;mcc_generated_files/uart1.c: 118:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  5272  002356  0E00               	movlw	0
  5273  002358  0100               	movlb	0	; () banked
  5274  00235A  6F60               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  5275  00235C  0E00               	movlw	0
  5276  00235E  6F61               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  5277  002360  EC8B  F015         	call	_UART1_SetFramingErrorHandler	;wreg free
  5278  002364                     
  5279                           ;mcc_generated_files/uart1.c: 119:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  5280  002364  0E00               	movlw	0
  5281  002366  0100               	movlb	0	; () banked
  5282  002368  6F60               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  5283  00236A  0E00               	movlw	0
  5284  00236C  6F61               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  5285  00236E  EC86  F015         	call	_UART1_SetOverrunErrorHandler	;wreg free
  5286  002372                     
  5287                           ;mcc_generated_files/uart1.c: 120:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  5288  002372  0E00               	movlw	0
  5289  002374  0100               	movlb	0	; () banked
  5290  002376  6F60               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  5291  002378  0E00               	movlw	0
  5292  00237A  6F61               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  5293  00237C  EC90  F015         	call	_UART1_SetErrorHandler	;wreg free
  5294  002380                     
  5295                           ;mcc_generated_files/uart1.c: 122:     uart1RxLastError.status = 0;
  5296  002380  0E00               	movlw	0
  5297  002382  0100               	movlb	0	; () banked
  5298  002384  6FD4               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5299  002386                     
  5300                           ; BSR set to: 0
  5301  002386  0012               	return		;funcret
  5302  002388                     __end_of_UART1_Initialize:
  5303                           	callstack 0
  5304                           
  5305 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  5306 ;; Defined at:
  5307 ;;		line 194 in file "mcc_generated_files/uart1.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5310 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:        2 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 6
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_UART1_Initialize
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text24
  5337  002B0C                     __ptext24:
  5338                           	callstack 0
  5339  002B0C                     _UART1_SetOverrunErrorHandler:
  5340                           	callstack 22
  5341  002B0C                     
  5342                           ;mcc_generated_files/uart1.c: 195:     UART1_OverrunErrorHandler = interruptHandler;
  5343  002B0C  C060  F0F4         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  5344  002B10  C061  F0F5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  5345  002B14  0012               	return		;funcret
  5346  002B16                     __end_of_UART1_SetOverrunErrorHandler:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5350 ;; Defined at:
  5351 ;;		line 190 in file "mcc_generated_files/uart1.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5354 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;Total ram usage:        2 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 6
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_UART1_Initialize
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text25
  5381  002B16                     __ptext25:
  5382                           	callstack 0
  5383  002B16                     _UART1_SetFramingErrorHandler:
  5384                           	callstack 22
  5385  002B16                     
  5386                           ;mcc_generated_files/uart1.c: 191:     UART1_FramingErrorHandler = interruptHandler;
  5387  002B16  C060  F0F6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5388  002B1A  C061  F0F7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5389  002B1E  0012               	return		;funcret
  5390  002B20                     __end_of_UART1_SetFramingErrorHandler:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function _UART1_SetErrorHandler *****************
  5394 ;; Defined at:
  5395 ;;		line 198 in file "mcc_generated_files/uart1.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5398 ;;		 -> UART1_DefaultErrorHandler(1), 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;Total ram usage:        2 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 6
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_UART1_Initialize
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text26
  5425  002B20                     __ptext26:
  5426                           	callstack 0
  5427  002B20                     _UART1_SetErrorHandler:
  5428                           	callstack 22
  5429  002B20                     
  5430                           ;mcc_generated_files/uart1.c: 199:     UART1_ErrorHandler = interruptHandler;
  5431  002B20  C060  F0F2         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5432  002B24  C061  F0F3         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5433  002B28  0012               	return		;funcret
  5434  002B2A                     __end_of_UART1_SetErrorHandler:
  5435                           	callstack 0
  5436                           
  5437 ;; *************** function _TMR0_Initialize *****************
  5438 ;; Defined at:
  5439 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 7
  5460 ;; This function calls:
  5461 ;;		_TMR0_SetInterruptHandler
  5462 ;; This function is called by:
  5463 ;;		_SYSTEM_Initialize
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text27
  5468  0028F6                     __ptext27:
  5469                           	callstack 0
  5470  0028F6                     _TMR0_Initialize:
  5471                           	callstack 22
  5472  0028F6                     
  5473                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x46;
  5474  0028F6  0E46               	movlw	70
  5475  0028F8  6EB9               	movwf	185,c	;volatile
  5476                           
  5477                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  5478  0028FA  0EF9               	movlw	249
  5479  0028FC  6EB7               	movwf	183,c	;volatile
  5480                           
  5481                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  5482  0028FE  0E00               	movlw	0
  5483  002900  6EB6               	movwf	182,c	;volatile
  5484  002902                     
  5485                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  5486  002902  0139               	movlb	57	; () banked
  5487  002904  9FA3               	bcf	163,7,b	;volatile
  5488  002906                     
  5489                           ; BSR set to: 57
  5490                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  5491  002906  8F93               	bsf	147,7,b	;volatile
  5492  002908                     
  5493                           ; BSR set to: 57
  5494                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5495  002908  0E46               	movlw	low _TMR0_DefaultInterruptHandler
  5496  00290A  0100               	movlb	0	; () banked
  5497  00290C  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  5498  00290E  0E2B               	movlw	high _TMR0_DefaultInterruptHandler
  5499  002910  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5500  002912  EC95  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  5501  002916                     
  5502                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x89;
  5503  002916  0E89               	movlw	137
  5504  002918  6EB8               	movwf	184,c	;volatile
  5505  00291A  0012               	return		;funcret
  5506  00291C                     __end_of_TMR0_Initialize:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _TMR0_SetInterruptHandler *****************
  5510 ;; Defined at:
  5511 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5514 ;;		 -> XF_decrementAndQueueTimers(1), TMR0_DefaultInterruptHandler(1), 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;Total ram usage:        2 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 6
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_TMR0_Initialize
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text28
  5542  002B2A                     __ptext28:
  5543                           	callstack 0
  5544  002B2A                     _TMR0_SetInterruptHandler:
  5545                           	callstack 24
  5546  002B2A                     
  5547                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  5548  002B2A  C060  F031         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5549  002B2E  C061  F032         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5550  002B32  0012               	return		;funcret
  5551  002B34                     __end_of_TMR0_SetInterruptHandler:
  5552                           	callstack 0
  5553                           
  5554 ;; *************** function _PMD_Initialize *****************
  5555 ;; Defined at:
  5556 ;;		line 75 in file "mcc_generated_files/mcc.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 6
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_SYSTEM_Initialize
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text29
  5585  00291C                     __ptext29:
  5586                           	callstack 0
  5587  00291C                     _PMD_Initialize:
  5588                           	callstack 23
  5589  00291C                     
  5590                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  5591  00291C  0E00               	movlw	0
  5592  00291E  0139               	movlb	57	; () banked
  5593  002920  6FC0               	movwf	192,b	;volatile
  5594                           
  5595                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  5596  002922  0E00               	movlw	0
  5597  002924  6FC1               	movwf	193,b	;volatile
  5598                           
  5599                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  5600  002926  0E00               	movlw	0
  5601  002928  6FC2               	movwf	194,b	;volatile
  5602                           
  5603                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  5604  00292A  0E00               	movlw	0
  5605  00292C  6FC3               	movwf	195,b	;volatile
  5606                           
  5607                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  5608  00292E  0E00               	movlw	0
  5609  002930  6FC4               	movwf	196,b	;volatile
  5610                           
  5611                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  5612  002932  0E00               	movlw	0
  5613  002934  6FC5               	movwf	197,b	;volatile
  5614                           
  5615                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  5616  002936  0E00               	movlw	0
  5617  002938  6FC6               	movwf	198,b	;volatile
  5618                           
  5619                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  5620  00293A  0E00               	movlw	0
  5621  00293C  6FC7               	movwf	199,b	;volatile
  5622  00293E                     
  5623                           ; BSR set to: 57
  5624  00293E  0012               	return		;funcret
  5625  002940                     __end_of_PMD_Initialize:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _PIN_MANAGER_Initialize *****************
  5629 ;; Defined at:
  5630 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 6
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_SYSTEM_Initialize
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text30
  5659  0025DA                     __ptext30:
  5660                           	callstack 0
  5661  0025DA                     _PIN_MANAGER_Initialize:
  5662                           	callstack 23
  5663  0025DA                     
  5664                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5665  0025DA  0E00               	movlw	0
  5666  0025DC  6EBA               	movwf	186,c	;volatile
  5667                           
  5668                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5669  0025DE  0E00               	movlw	0
  5670  0025E0  6EBB               	movwf	187,c	;volatile
  5671                           
  5672                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5673  0025E2  0E00               	movlw	0
  5674  0025E4  6EBC               	movwf	188,c	;volatile
  5675  0025E6                     
  5676                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5677  0025E6  68C2               	setf	194,c	;volatile
  5678                           
  5679                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
  5680  0025E8  0EF8               	movlw	248
  5681  0025EA  6EC3               	movwf	195,c	;volatile
  5682                           
  5683                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5684  0025EC  0EBF               	movlw	191
  5685  0025EE  6EC4               	movwf	196,c	;volatile
  5686                           
  5687                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC7;
  5688  0025F0  0EC7               	movlw	199
  5689  0025F2  013A               	movlb	58	; () banked
  5690  0025F4  6F60               	movwf	96,b	;volatile
  5691                           
  5692                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF4;
  5693  0025F6  0EF4               	movlw	244
  5694  0025F8  6F50               	movwf	80,b	;volatile
  5695  0025FA                     
  5696                           ; BSR set to: 58
  5697                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  5698  0025FA  6940               	setf	64,b	;volatile
  5699                           
  5700                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  5701  0025FC  0E00               	movlw	0
  5702  0025FE  6F81               	movwf	129,b	;volatile
  5703                           
  5704                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  5705  002600  0E00               	movlw	0
  5706  002602  6F51               	movwf	81,b	;volatile
  5707                           
  5708                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x80;
  5709  002604  0E80               	movlw	128
  5710  002606  6F41               	movwf	65,b	;volatile
  5711                           
  5712                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  5713  002608  0E00               	movlw	0
  5714  00260A  6F61               	movwf	97,b	;volatile
  5715                           
  5716                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5717  00260C  0E00               	movlw	0
  5718  00260E  6F42               	movwf	66,b	;volatile
  5719                           
  5720                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5721  002610  0E00               	movlw	0
  5722  002612  6F52               	movwf	82,b	;volatile
  5723                           
  5724                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5725  002614  0E00               	movlw	0
  5726  002616  6F62               	movwf	98,b	;volatile
  5727  002618                     
  5728                           ; BSR set to: 58
  5729                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  5730  002618  6943               	setf	67,b	;volatile
  5731  00261A                     
  5732                           ; BSR set to: 58
  5733                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  5734  00261A  6953               	setf	83,b	;volatile
  5735  00261C                     
  5736                           ; BSR set to: 58
  5737                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5738  00261C  6963               	setf	99,b	;volatile
  5739  00261E                     
  5740                           ; BSR set to: 58
  5741                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  5742  00261E  6944               	setf	68,b	;volatile
  5743  002620                     
  5744                           ; BSR set to: 58
  5745                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  5746  002620  6954               	setf	84,b	;volatile
  5747  002622                     
  5748                           ; BSR set to: 58
  5749                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5750  002622  6964               	setf	100,b	;volatile
  5751                           
  5752                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  5753  002624  0E08               	movlw	8
  5754  002626  6F84               	movwf	132,b	;volatile
  5755                           
  5756                           ;mcc_generated_files/pin_manager.c: 115:     RB2PPS = 0x33;
  5757  002628  0E33               	movlw	51
  5758  00262A  6F0A               	movwf	10,b	;volatile
  5759                           
  5760                           ;mcc_generated_files/pin_manager.c: 116:     CANRXPPS = 0x0B;
  5761  00262C  0E0B               	movlw	11
  5762  00262E  6FED               	movwf	237,b	;volatile
  5763                           
  5764                           ;mcc_generated_files/pin_manager.c: 117:     RC6PPS = 0x13;
  5765  002630  0E13               	movlw	19
  5766  002632  6F16               	movwf	22,b	;volatile
  5767                           
  5768                           ;mcc_generated_files/pin_manager.c: 118:     U1RXPPS = 0x15;
  5769  002634  0E15               	movlw	21
  5770  002636  6FE7               	movwf	231,b	;volatile
  5771  002638                     
  5772                           ; BSR set to: 58
  5773  002638  0012               	return		;funcret
  5774  00263A                     __end_of_PIN_MANAGER_Initialize:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _OSCILLATOR_Initialize *****************
  5778 ;; Defined at:
  5779 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 6
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_SYSTEM_Initialize
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text31
  5808  002A36                     __ptext31:
  5809                           	callstack 0
  5810  002A36                     _OSCILLATOR_Initialize:
  5811                           	callstack 23
  5812  002A36                     
  5813                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  5814  002A36  0E60               	movlw	96
  5815  002A38  0139               	movlb	57	; () banked
  5816  002A3A  6FD9               	movwf	217,b	;volatile
  5817                           
  5818                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  5819  002A3C  0E00               	movlw	0
  5820  002A3E  6FDB               	movwf	219,b	;volatile
  5821                           
  5822                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  5823  002A40  0E00               	movlw	0
  5824  002A42  6FDD               	movwf	221,b	;volatile
  5825                           
  5826                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x08;
  5827  002A44  0E08               	movlw	8
  5828  002A46  6FDF               	movwf	223,b	;volatile
  5829                           
  5830                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  5831  002A48  0E00               	movlw	0
  5832  002A4A  6FDE               	movwf	222,b	;volatile
  5833  002A4C                     
  5834                           ; BSR set to: 57
  5835  002A4C  0012               	return		;funcret
  5836  002A4E                     __end_of_OSCILLATOR_Initialize:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _INTERRUPT_Initialize *****************
  5840 ;; Defined at:
  5841 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		None
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 6
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_SYSTEM_Initialize
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text32
  5870  002B34                     __ptext32:
  5871                           	callstack 0
  5872  002B34                     _INTERRUPT_Initialize:
  5873                           	callstack 23
  5874  002B34                     
  5875                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  5876  002B34  9AD2               	bcf	210,5,c	;volatile
  5877  002B36  0012               	return		;funcret
  5878  002B38                     __end_of_INTERRUPT_Initialize:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _ECAN_Initialize *****************
  5882 ;; Defined at:
  5883 ;;		line 62 in file "mcc_generated_files/ecan.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;Total ram usage:        1 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 7
  5904 ;; This function calls:
  5905 ;;		_convertCANid2Reg
  5906 ;; This function is called by:
  5907 ;;		_SYSTEM_Initialize
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text33
  5912  001018                     __ptext33:
  5913                           	callstack 0
  5914  001018                     _ECAN_Initialize:
  5915                           	callstack 22
  5916  001018                     
  5917                           ;mcc_generated_files/ecan.c: 64:     CANCON = 0x80;
  5918  001018  0E80               	movlw	128
  5919  00101A  6E8F               	movwf	143,c	;volatile
  5920  00101C                     l4597:
  5921  00101C  508E               	movf	142,w,c	;volatile
  5922  00101E  0BE0               	andlw	224
  5923  001020  0A80               	xorlw	128
  5924  001022  A4D8               	btfss	status,2,c
  5925  001024  EF16  F008         	goto	u2191
  5926  001028  EF18  F008         	goto	u2190
  5927  00102C                     u2191:
  5928  00102C  EF0E  F008         	goto	l4597
  5929  001030                     u2190:
  5930  001030                     
  5931                           ;mcc_generated_files/ecan.c: 70:     ECANCON = 0x00;
  5932  001030  0E00               	movlw	0
  5933  001032  6E91               	movwf	145,c	;volatile
  5934                           
  5935                           ;mcc_generated_files/ecan.c: 75:     CIOCON = 0x00;
  5936  001034  0E00               	movlw	0
  5937  001036  0137               	movlb	55	; () banked
  5938  001038  6F00               	movwf	0,b	;volatile
  5939  00103A                     
  5940                           ; BSR set to: 55
  5941                           ;mcc_generated_files/ecan.c: 85:     convertCANid2Reg(0x7FF, 1, &RXM0EIDH, &RXM0EIDL, &R
      +                          XM0SIDH, &RXM0SIDL);
  5942  00103A  0EFF               	movlw	255
  5943  00103C  0100               	movlb	0	; () banked
  5944  00103E  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  5945  001040  0E07               	movlw	7
  5946  001042  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  5947  001044  0E00               	movlw	0
  5948  001046  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  5949  001048  0E00               	movlw	0
  5950  00104A  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  5951  00104C  0E01               	movlw	1
  5952  00104E  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  5953  001050  0EBA               	movlw	186
  5954  001052  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  5955  001054  0E37               	movlw	55
  5956  001056  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  5957  001058  0EBB               	movlw	187
  5958  00105A  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  5959  00105C  0E37               	movlw	55
  5960  00105E  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  5961  001060  0EB8               	movlw	184
  5962  001062  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  5963  001064  0E37               	movlw	55
  5964  001066  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  5965  001068  0EB9               	movlw	185
  5966  00106A  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  5967  00106C  0E37               	movlw	55
  5968  00106E  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  5969  001070  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  5970  001074                     
  5971                           ;mcc_generated_files/ecan.c: 87:     convertCANid2Reg(0x7FF, 1, &RXF0EIDH, &RXF0EIDL, &R
      +                          XF0SIDH, &RXF0SIDL);
  5972  001074  0EFF               	movlw	255
  5973  001076  0100               	movlb	0	; () banked
  5974  001078  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  5975  00107A  0E07               	movlw	7
  5976  00107C  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  5977  00107E  0E00               	movlw	0
  5978  001080  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  5979  001082  0E00               	movlw	0
  5980  001084  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  5981  001086  0E01               	movlw	1
  5982  001088  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  5983  00108A  0EA2               	movlw	162
  5984  00108C  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  5985  00108E  0E37               	movlw	55
  5986  001090  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  5987  001092  0EA3               	movlw	163
  5988  001094  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  5989  001096  0E37               	movlw	55
  5990  001098  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  5991  00109A  0EA0               	movlw	160
  5992  00109C  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  5993  00109E  0E37               	movlw	55
  5994  0010A0  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  5995  0010A2  0EA1               	movlw	161
  5996  0010A4  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  5997  0010A6  0E37               	movlw	55
  5998  0010A8  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  5999  0010AA  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6000  0010AE                     
  6001                           ;mcc_generated_files/ecan.c: 88:     convertCANid2Reg(0x7FF, 1, &RXF1EIDH, &RXF1EIDL, &R
      +                          XF1SIDH, &RXF1SIDL);
  6002  0010AE  0EFF               	movlw	255
  6003  0010B0  0100               	movlb	0	; () banked
  6004  0010B2  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6005  0010B4  0E07               	movlw	7
  6006  0010B6  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6007  0010B8  0E00               	movlw	0
  6008  0010BA  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6009  0010BC  0E00               	movlw	0
  6010  0010BE  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6011  0010C0  0E01               	movlw	1
  6012  0010C2  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6013  0010C4  0EA6               	movlw	166
  6014  0010C6  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6015  0010C8  0E37               	movlw	55
  6016  0010CA  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6017  0010CC  0EA7               	movlw	167
  6018  0010CE  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6019  0010D0  0E37               	movlw	55
  6020  0010D2  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6021  0010D4  0EA4               	movlw	164
  6022  0010D6  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6023  0010D8  0E37               	movlw	55
  6024  0010DA  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6025  0010DC  0EA5               	movlw	165
  6026  0010DE  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6027  0010E0  0E37               	movlw	55
  6028  0010E2  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6029  0010E4  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6030  0010E8                     
  6031                           ;mcc_generated_files/ecan.c: 91:     convertCANid2Reg(0x03F, 1, &RXM1EIDH, &RXM1EIDL, &R
      +                          XM1SIDH, &RXM1SIDL);
  6032  0010E8  0E3F               	movlw	63
  6033  0010EA  0100               	movlb	0	; () banked
  6034  0010EC  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6035  0010EE  0E00               	movlw	0
  6036  0010F0  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6037  0010F2  0E00               	movlw	0
  6038  0010F4  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6039  0010F6  0E00               	movlw	0
  6040  0010F8  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6041  0010FA  0E01               	movlw	1
  6042  0010FC  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6043  0010FE  0EBE               	movlw	190
  6044  001100  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6045  001102  0E37               	movlw	55
  6046  001104  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6047  001106  0EBF               	movlw	191
  6048  001108  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6049  00110A  0E37               	movlw	55
  6050  00110C  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6051  00110E  0EBC               	movlw	188
  6052  001110  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6053  001112  0E37               	movlw	55
  6054  001114  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6055  001116  0EBD               	movlw	189
  6056  001118  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6057  00111A  0E37               	movlw	55
  6058  00111C  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6059  00111E  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6060  001122                     
  6061                           ;mcc_generated_files/ecan.c: 93:     convertCANid2Reg(0x4, 1, &RXF2EIDH, &RXF2EIDL, &RXF
      +                          2SIDH, &RXF2SIDL);
  6062  001122  0E04               	movlw	4
  6063  001124  0100               	movlb	0	; () banked
  6064  001126  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6065  001128  0E00               	movlw	0
  6066  00112A  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6067  00112C  0E00               	movlw	0
  6068  00112E  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6069  001130  0E00               	movlw	0
  6070  001132  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6071  001134  0E01               	movlw	1
  6072  001136  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6073  001138  0EAA               	movlw	170
  6074  00113A  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6075  00113C  0E37               	movlw	55
  6076  00113E  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6077  001140  0EAB               	movlw	171
  6078  001142  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6079  001144  0E37               	movlw	55
  6080  001146  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6081  001148  0EA8               	movlw	168
  6082  00114A  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6083  00114C  0E37               	movlw	55
  6084  00114E  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6085  001150  0EA9               	movlw	169
  6086  001152  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6087  001154  0E37               	movlw	55
  6088  001156  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6089  001158  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6090  00115C                     
  6091                           ;mcc_generated_files/ecan.c: 94:     convertCANid2Reg(0x03F, 1, &RXF3EIDH, &RXF3EIDL, &R
      +                          XF3SIDH, &RXF3SIDL);
  6092  00115C  0E3F               	movlw	63
  6093  00115E  0100               	movlb	0	; () banked
  6094  001160  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6095  001162  0E00               	movlw	0
  6096  001164  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6097  001166  0E00               	movlw	0
  6098  001168  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6099  00116A  0E00               	movlw	0
  6100  00116C  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6101  00116E  0E01               	movlw	1
  6102  001170  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6103  001172  0EAE               	movlw	174
  6104  001174  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6105  001176  0E37               	movlw	55
  6106  001178  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6107  00117A  0EAF               	movlw	175
  6108  00117C  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6109  00117E  0E37               	movlw	55
  6110  001180  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6111  001182  0EAC               	movlw	172
  6112  001184  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6113  001186  0E37               	movlw	55
  6114  001188  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6115  00118A  0EAD               	movlw	173
  6116  00118C  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6117  00118E  0E37               	movlw	55
  6118  001190  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6119  001192  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6120  001196                     
  6121                           ;mcc_generated_files/ecan.c: 95:     convertCANid2Reg(0x4, 1, &RXF4EIDH, &RXF4EIDL, &RXF
      +                          4SIDH, &RXF4SIDL);
  6122  001196  0E04               	movlw	4
  6123  001198  0100               	movlb	0	; () banked
  6124  00119A  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6125  00119C  0E00               	movlw	0
  6126  00119E  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6127  0011A0  0E00               	movlw	0
  6128  0011A2  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6129  0011A4  0E00               	movlw	0
  6130  0011A6  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6131  0011A8  0E01               	movlw	1
  6132  0011AA  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6133  0011AC  0EB2               	movlw	178
  6134  0011AE  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6135  0011B0  0E37               	movlw	55
  6136  0011B2  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6137  0011B4  0EB3               	movlw	179
  6138  0011B6  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6139  0011B8  0E37               	movlw	55
  6140  0011BA  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6141  0011BC  0EB0               	movlw	176
  6142  0011BE  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6143  0011C0  0E37               	movlw	55
  6144  0011C2  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6145  0011C4  0EB1               	movlw	177
  6146  0011C6  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6147  0011C8  0E37               	movlw	55
  6148  0011CA  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6149  0011CC  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6150  0011D0                     
  6151                           ;mcc_generated_files/ecan.c: 96:     convertCANid2Reg(0x4, 1, &RXF5EIDH, &RXF5EIDL, &RXF
      +                          5SIDH, &RXF5SIDL);
  6152  0011D0  0E04               	movlw	4
  6153  0011D2  0100               	movlb	0	; () banked
  6154  0011D4  6F60               	movwf	convertCANid2Reg@tempPassedInID& (0+255),b
  6155  0011D6  0E00               	movlw	0
  6156  0011D8  6F61               	movwf	(convertCANid2Reg@tempPassedInID+1)& (0+255),b
  6157  0011DA  0E00               	movlw	0
  6158  0011DC  6F62               	movwf	(convertCANid2Reg@tempPassedInID+2)& (0+255),b
  6159  0011DE  0E00               	movlw	0
  6160  0011E0  6F63               	movwf	(convertCANid2Reg@tempPassedInID+3)& (0+255),b
  6161  0011E2  0E01               	movlw	1
  6162  0011E4  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6163  0011E6  0EB6               	movlw	182
  6164  0011E8  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6165  0011EA  0E37               	movlw	55
  6166  0011EC  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6167  0011EE  0EB7               	movlw	183
  6168  0011F0  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6169  0011F2  0E37               	movlw	55
  6170  0011F4  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6171  0011F6  0EB4               	movlw	180
  6172  0011F8  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6173  0011FA  0E37               	movlw	55
  6174  0011FC  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6175  0011FE  0EB5               	movlw	181
  6176  001200  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6177  001202  0E37               	movlw	55
  6178  001204  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6179  001206  EC09  F00A         	call	_convertCANid2Reg	;wreg free
  6180                           
  6181                           ;mcc_generated_files/ecan.c: 112:     BRGCON1 = 0x0F;
  6182  00120A  0E0F               	movlw	15
  6183  00120C  0137               	movlb	55	; () banked
  6184  00120E  6F03               	movwf	3,b	;volatile
  6185                           
  6186                           ;mcc_generated_files/ecan.c: 113:     BRGCON2 = 0x98;
  6187  001210  0E98               	movlw	152
  6188  001212  6F04               	movwf	4,b	;volatile
  6189                           
  6190                           ;mcc_generated_files/ecan.c: 114:     BRGCON3 = 0x81;
  6191  001214  0E81               	movlw	129
  6192  001216  6F05               	movwf	5,b	;volatile
  6193                           
  6194                           ;mcc_generated_files/ecan.c: 116:     CANCON = 0x00;
  6195  001218  0E00               	movlw	0
  6196  00121A  6E8F               	movwf	143,c	;volatile
  6197  00121C                     l4617:
  6198  00121C  006F FE38  F072    	movff	16270,??_ECAN_Initialize	;volatile
  6199  001222  0EE0               	movlw	224
  6200  001224  0100               	movlb	0	; () banked
  6201  001226  1772               	andwf	??_ECAN_Initialize& (0+255),f,b
  6202  001228  A4D8               	btfss	status,2,c
  6203  00122A  EF19  F009         	goto	u2201
  6204  00122E  EF1B  F009         	goto	u2200
  6205  001232                     u2201:
  6206  001232  EF0E  F009         	goto	l4617
  6207  001236                     u2200:
  6208  001236                     
  6209                           ; BSR set to: 0
  6210  001236  0012               	return		;funcret
  6211  001238                     __end_of_ECAN_Initialize:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function _convertCANid2Reg *****************
  6215 ;; Defined at:
  6216 ;;		line 371 in file "mcc_generated_files/ecan.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  tempPassedIn    4    0[BANK0 ] unsigned long 
  6219 ;;  canIdType       1    4[BANK0 ] unsigned char 
  6220 ;;  passedInEIDH    2    5[BANK0 ] PTR volatile unsigned ch
  6221 ;;		 -> CAN_transmit@tempEIDH(1), RXF5EIDH(1), RXF4EIDH(1), RXF3EIDH(1), 
  6222 ;;		 -> RXF2EIDH(1), RXM1EIDH(1), RXF1EIDH(1), RXF0EIDH(1), 
  6223 ;;		 -> RXM0EIDH(1), 
  6224 ;;  passedInEIDL    2    7[BANK0 ] PTR volatile unsigned ch
  6225 ;;		 -> CAN_transmit@tempEIDL(1), RXF5EIDL(1), RXF4EIDL(1), RXF3EIDL(1), 
  6226 ;;		 -> RXF2EIDL(1), RXM1EIDL(1), RXF1EIDL(1), RXF0EIDL(1), 
  6227 ;;		 -> RXM0EIDL(1), 
  6228 ;;  passedInSIDH    2    9[BANK0 ] PTR volatile unsigned ch
  6229 ;;		 -> CAN_transmit@tempSIDH(1), RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), 
  6230 ;;		 -> RXF2SIDH(1), RXM1SIDH(1), RXF1SIDH(1), RXF0SIDH(1), 
  6231 ;;		 -> RXM0SIDH(1), 
  6232 ;;  passedInSIDL    2   11[BANK0 ] PTR volatile unsigned ch
  6233 ;;		 -> CAN_transmit@tempSIDL(1), RXF5SIDL(1), RXF4SIDL(1), RXF3SIDL(1), 
  6234 ;;		 -> RXF2SIDL(1), RXM1SIDL(1), RXF1SIDL(1), RXF0SIDL(1), 
  6235 ;;		 -> RXM0SIDL(1), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  wipSIDL         1   17[BANK0 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:       18 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 6
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_ECAN_Initialize
  6258 ;;		_CAN_transmit
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text34
  6263  001412                     __ptext34:
  6264                           	callstack 0
  6265  001412                     _convertCANid2Reg:
  6266                           	callstack 22
  6267  001412                     
  6268                           ;mcc_generated_files/ecan.c: 375:     if (canIdType == 2) {
  6269  001412  0E02               	movlw	2
  6270  001414  0100               	movlb	0	; () banked
  6271  001416  1964               	xorwf	convertCANid2Reg@canIdType& (0+255),w,b
  6272  001418  A4D8               	btfss	status,2,c
  6273  00141A  EF11  F00A         	goto	u1801
  6274  00141E  EF13  F00A         	goto	u1800
  6275  001422                     u1801:
  6276  001422  EFA1  F00A         	goto	l4135
  6277  001426                     u1800:
  6278  001426                     
  6279                           ; BSR set to: 0
  6280                           ;mcc_generated_files/ecan.c: 378:         *passedInEIDL = 0xFF & tempPassedInID;
  6281  001426  0060  F19F  FFD9   	movff	convertCANid2Reg@passedInEIDL,fsr2l
  6282  00142C  0060  F1A3  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  6283  001432  0060  F183  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  6284  001438                     
  6285                           ; BSR set to: 0
  6286                           ;mcc_generated_files/ecan.c: 379:         tempPassedInID = tempPassedInID >> 8;
  6287  001438  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6288  00143C  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6289  001440  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6290  001444  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6291  001448  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6292  00144C  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6293  001450  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6294  001454  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6295  001456  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6296  00145A  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6297  00145E  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6298  001462  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6299  001466                     
  6300                           ; BSR set to: 0
  6301                           ;mcc_generated_files/ecan.c: 382:         *passedInEIDH = 0xFF & tempPassedInID;
  6302  001466  0060  F197  FFD9   	movff	convertCANid2Reg@passedInEIDH,fsr2l
  6303  00146C  0060  F19B  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  6304  001472  0060  F183  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  6305                           
  6306                           ;mcc_generated_files/ecan.c: 383:         tempPassedInID = tempPassedInID >> 8;
  6307  001478  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6308  00147C  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6309  001480  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6310  001484  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6311  001488  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6312  00148C  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6313  001490  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6314  001494  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6315  001496  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6316  00149A  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6317  00149E  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6318  0014A2  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6319  0014A6                     
  6320                           ; BSR set to: 0
  6321                           ;mcc_generated_files/ecan.c: 387:         wipSIDL = 0x03 & tempPassedInID;
  6322  0014A6  5160               	movf	convertCANid2Reg@tempPassedInID& (0+255),w,b
  6323  0014A8  0B03               	andlw	3
  6324  0014AA  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6325  0014AC                     
  6326                           ; BSR set to: 0
  6327                           ;mcc_generated_files/ecan.c: 388:         tempPassedInID = tempPassedInID << 3;
  6328  0014AC  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6329  0014B0  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6330  0014B4  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6331  0014B8  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6332  0014BC  0E03               	movlw	3
  6333  0014BE                     u1815:
  6334  0014BE  90D8               	bcf	status,0,c
  6335  0014C0  376D               	rlcf	??_convertCANid2Reg& (0+255),f,b
  6336  0014C2  376E               	rlcf	(??_convertCANid2Reg+1)& (0+255),f,b
  6337  0014C4  376F               	rlcf	(??_convertCANid2Reg+2)& (0+255),f,b
  6338  0014C6  3770               	rlcf	(??_convertCANid2Reg+3)& (0+255),f,b
  6339  0014C8  2EE8               	decfsz	wreg,f,c
  6340  0014CA  EF5F  F00A         	goto	u1815
  6341  0014CE  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6342  0014D2  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6343  0014D6  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6344  0014DA  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6345  0014DE                     
  6346                           ; BSR set to: 0
  6347                           ;mcc_generated_files/ecan.c: 389:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  6348  0014DE  5160               	movf	convertCANid2Reg@tempPassedInID& (0+255),w,b
  6349  0014E0  0BE0               	andlw	224
  6350  0014E2  2571               	addwf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6351  0014E4  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6352  0014E6                     
  6353                           ; BSR set to: 0
  6354                           ;mcc_generated_files/ecan.c: 390:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  6355  0014E6  5171               	movf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6356  0014E8  0F08               	addlw	8
  6357  0014EA  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6358  0014EC                     
  6359                           ; BSR set to: 0
  6360                           ;mcc_generated_files/ecan.c: 391:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  6361  0014EC  5171               	movf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6362  0014EE  0BEB               	andlw	235
  6363  0014F0  0060  F1AF  FFD9   	movff	convertCANid2Reg@passedInSIDL,fsr2l
  6364  0014F6  0060  F1B3  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  6365  0014FC  6EDF               	movwf	indf2,c
  6366  0014FE                     l4131:
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;mcc_generated_files/ecan.c: 394:         tempPassedInID = tempPassedInID >> 8;
  6370  0014FE  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6371  001502  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6372  001506  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6373  00150A  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6374  00150E  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6375  001512  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6376  001516  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6377  00151A  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6378  00151C  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6379  001520  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6380  001524  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6381  001528  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6382  00152C                     
  6383                           ; BSR set to: 0
  6384                           ;mcc_generated_files/ecan.c: 395:         *passedInSIDH = 0xFF & tempPassedInID;
  6385  00152C  0060  F1A7  FFD9   	movff	convertCANid2Reg@passedInSIDH,fsr2l
  6386  001532  0060  F1AB  FFDA   	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  6387  001538  0060  F183  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  6388                           
  6389                           ;mcc_generated_files/ecan.c: 396:     }
  6390  00153E  EFD5  F00A         	goto	l876
  6391  001542                     l4135:
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;mcc_generated_files/ecan.c: 398:     {;mcc_generated_files/ecan.c: 399:         *passed
      +                          InEIDH = 0;
  6395  001542  0060  F197  FFD9   	movff	convertCANid2Reg@passedInEIDH,fsr2l
  6396  001548  0060  F19B  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  6397  00154E  0E00               	movlw	0
  6398  001550  6EDF               	movwf	indf2,c
  6399                           
  6400                           ;mcc_generated_files/ecan.c: 400:         *passedInEIDL = 0;
  6401  001552  0060  F19F  FFD9   	movff	convertCANid2Reg@passedInEIDL,fsr2l
  6402  001558  0060  F1A3  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  6403  00155E  0E00               	movlw	0
  6404  001560  6EDF               	movwf	indf2,c
  6405  001562                     
  6406                           ; BSR set to: 0
  6407                           ;mcc_generated_files/ecan.c: 401:         tempPassedInID = tempPassedInID << 5;
  6408  001562  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6409  001566  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6410  00156A  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6411  00156E  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6412  001572  0E05               	movlw	5
  6413  001574                     u1825:
  6414  001574  90D8               	bcf	status,0,c
  6415  001576  376D               	rlcf	??_convertCANid2Reg& (0+255),f,b
  6416  001578  376E               	rlcf	(??_convertCANid2Reg+1)& (0+255),f,b
  6417  00157A  376F               	rlcf	(??_convertCANid2Reg+2)& (0+255),f,b
  6418  00157C  3770               	rlcf	(??_convertCANid2Reg+3)& (0+255),f,b
  6419  00157E  2EE8               	decfsz	wreg,f,c
  6420  001580  EFBA  F00A         	goto	u1825
  6421  001584  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6422  001588  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6423  00158C  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6424  001590  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6425  001594                     
  6426                           ; BSR set to: 0
  6427                           ;mcc_generated_files/ecan.c: 402:         *passedInSIDL = 0xFF & tempPassedInID;
  6428  001594  0060  F1AF  FFD9   	movff	convertCANid2Reg@passedInSIDL,fsr2l
  6429  00159A  0060  F1B3  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  6430  0015A0  0060  F183  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  6431  0015A6  EF7F  F00A         	goto	l4131
  6432  0015AA                     l876:
  6433                           
  6434                           ; BSR set to: 0
  6435  0015AA  0012               	return		;funcret
  6436  0015AC                     __end_of_convertCANid2Reg:
  6437                           	callstack 0
  6438                           
  6439 ;; *************** function _Factory_start *****************
  6440 ;; Defined at:
  6441 ;;		line 62 in file "factory/factory.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 11
  6462 ;; This function calls:
  6463 ;;		_ButtonSM_startBehaviour
  6464 ;;		_POST
  6465 ;;		_bsm
  6466 ;;		_cc
  6467 ;;		_commControl_startBehaviour
  6468 ;; This function is called by:
  6469 ;;		_main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text35
  6474  0023EC                     __ptext35:
  6475                           	callstack 0
  6476  0023EC                     _Factory_start:
  6477                           	callstack 19
  6478  0023EC                     
  6479                           ;factory/factory.c: 64:     ButtonSM_startBehaviour(bsm());
  6480  0023EC  EC7A  F015         	call	_bsm	;wreg free
  6481  0023F0  C060  F0A9         	movff	?_bsm,ButtonSM_startBehaviour@me
  6482  0023F4  C061  F0AA         	movff	?_bsm+1,ButtonSM_startBehaviour@me+1
  6483  0023F8  EC76  F00F         	call	_ButtonSM_startBehaviour	;wreg free
  6484                           
  6485                           ;factory/factory.c: 65:     commControl_startBehaviour(cc());
  6486  0023FC  EC6E  F015         	call	_cc	;wreg free
  6487  002400  C060  F0A9         	movff	?_cc,commControl_startBehaviour@me
  6488  002404  C061  F0AA         	movff	?_cc+1,commControl_startBehaviour@me+1
  6489  002408  EC48  F00D         	call	_commControl_startBehaviour	;wreg free
  6490                           
  6491                           ;factory/factory.c: 66:     POST(&theFactory, &factory_toggleLed, 11, 1000, 0);
  6492  00240C  0ED5               	movlw	low _theFactory
  6493  00240E  0100               	movlb	0	; () banked
  6494  002410  6F8A               	movwf	POST@target& (0+255),b
  6495  002412  0E00               	movlw	high _theFactory
  6496  002414  6F8B               	movwf	(POST@target+1)& (0+255),b
  6497  002416  0E88               	movlw	low _factory_toggleLed
  6498  002418  6F8C               	movwf	POST@processEvent& (0+255),b
  6499  00241A  0E23               	movlw	high _factory_toggleLed
  6500  00241C  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  6501  00241E  0E0B               	movlw	11
  6502  002420  6F8E               	movwf	POST@id& (0+255),b
  6503  002422  0E03               	movlw	3
  6504  002424  6F90               	movwf	(POST@delay+1)& (0+255),b
  6505  002426  0EE8               	movlw	232
  6506  002428  6F8F               	movwf	POST@delay& (0+255),b
  6507  00242A  0E00               	movlw	0
  6508  00242C  6F91               	movwf	POST@data& (0+255),b
  6509  00242E  0E00               	movlw	0
  6510  002430  6F92               	movwf	(POST@data+1)& (0+255),b
  6511  002432  0E00               	movlw	0
  6512  002434  6F93               	movwf	(POST@data+2)& (0+255),b
  6513  002436  0E00               	movlw	0
  6514  002438  6F94               	movwf	(POST@data+3)& (0+255),b
  6515  00243A  0E00               	movlw	0
  6516  00243C  6F95               	movwf	(POST@data+4)& (0+255),b
  6517  00243E  0E00               	movlw	0
  6518  002440  6F96               	movwf	(POST@data+5)& (0+255),b
  6519  002442  0E00               	movlw	0
  6520  002444  6F97               	movwf	(POST@data+6)& (0+255),b
  6521  002446  0E00               	movlw	0
  6522  002448  6F98               	movwf	(POST@data+7)& (0+255),b
  6523  00244A  EC0D  F00E         	call	_POST	;wreg free
  6524  00244E  0012               	return		;funcret
  6525  002450                     __end_of_Factory_start:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _commControl_startBehaviour *****************
  6529 ;; Defined at:
  6530 ;;		line 31 in file "driveControl/commControl.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  me              2   73[BANK0 ] PTR struct CommControl_
  6533 ;;		 -> theFactory.cc_(18), theFactory(29), 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;Total ram usage:        2 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 10
  6552 ;; This function calls:
  6553 ;;		_POST
  6554 ;; This function is called by:
  6555 ;;		_Factory_start
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text36
  6560  001A90                     __ptext36:
  6561                           	callstack 0
  6562  001A90                     _commControl_startBehaviour:
  6563                           	callstack 19
  6564  001A90                     
  6565                           ;driveControl/commControl.c: 32:     POST(me, &commControl_processEvent, evAInit, 0, 0);
  6566  001A90  C0A9  F08A         	movff	commControl_startBehaviour@me,POST@target
  6567  001A94  C0AA  F08B         	movff	commControl_startBehaviour@me+1,POST@target+1
  6568  001A98  0E1E               	movlw	low _commControl_processEvent
  6569  001A9A  0100               	movlb	0	; () banked
  6570  001A9C  6F8C               	movwf	POST@processEvent& (0+255),b
  6571  001A9E  0E00               	movlw	high _commControl_processEvent
  6572  001AA0  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  6573  001AA2  0E2F               	movlw	47
  6574  001AA4  6F8E               	movwf	POST@id& (0+255),b
  6575  001AA6  0E00               	movlw	0
  6576  001AA8  6F90               	movwf	(POST@delay+1)& (0+255),b
  6577  001AAA  0E00               	movlw	0
  6578  001AAC  6F8F               	movwf	POST@delay& (0+255),b
  6579  001AAE  0E00               	movlw	0
  6580  001AB0  6F91               	movwf	POST@data& (0+255),b
  6581  001AB2  0E00               	movlw	0
  6582  001AB4  6F92               	movwf	(POST@data+1)& (0+255),b
  6583  001AB6  0E00               	movlw	0
  6584  001AB8  6F93               	movwf	(POST@data+2)& (0+255),b
  6585  001ABA  0E00               	movlw	0
  6586  001ABC  6F94               	movwf	(POST@data+3)& (0+255),b
  6587  001ABE  0E00               	movlw	0
  6588  001AC0  6F95               	movwf	(POST@data+4)& (0+255),b
  6589  001AC2  0E00               	movlw	0
  6590  001AC4  6F96               	movwf	(POST@data+5)& (0+255),b
  6591  001AC6  0E00               	movlw	0
  6592  001AC8  6F97               	movwf	(POST@data+6)& (0+255),b
  6593  001ACA  0E00               	movlw	0
  6594  001ACC  6F98               	movwf	(POST@data+7)& (0+255),b
  6595  001ACE  EC0D  F00E         	call	_POST	;wreg free
  6596                           
  6597                           ;driveControl/commControl.c: 33:     POST(me, &commControl_processEvent, evSInit, 0, 0);
  6598  001AD2  C0A9  F08A         	movff	commControl_startBehaviour@me,POST@target
  6599  001AD6  C0AA  F08B         	movff	commControl_startBehaviour@me+1,POST@target+1
  6600  001ADA  0E1E               	movlw	low _commControl_processEvent
  6601  001ADC  0100               	movlb	0	; () banked
  6602  001ADE  6F8C               	movwf	POST@processEvent& (0+255),b
  6603  001AE0  0E00               	movlw	high _commControl_processEvent
  6604  001AE2  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  6605  001AE4  0E2C               	movlw	44
  6606  001AE6  6F8E               	movwf	POST@id& (0+255),b
  6607  001AE8  0E00               	movlw	0
  6608  001AEA  6F90               	movwf	(POST@delay+1)& (0+255),b
  6609  001AEC  0E00               	movlw	0
  6610  001AEE  6F8F               	movwf	POST@delay& (0+255),b
  6611  001AF0  0E00               	movlw	0
  6612  001AF2  6F91               	movwf	POST@data& (0+255),b
  6613  001AF4  0E00               	movlw	0
  6614  001AF6  6F92               	movwf	(POST@data+1)& (0+255),b
  6615  001AF8  0E00               	movlw	0
  6616  001AFA  6F93               	movwf	(POST@data+2)& (0+255),b
  6617  001AFC  0E00               	movlw	0
  6618  001AFE  6F94               	movwf	(POST@data+3)& (0+255),b
  6619  001B00  0E00               	movlw	0
  6620  001B02  6F95               	movwf	(POST@data+4)& (0+255),b
  6621  001B04  0E00               	movlw	0
  6622  001B06  6F96               	movwf	(POST@data+5)& (0+255),b
  6623  001B08  0E00               	movlw	0
  6624  001B0A  6F97               	movwf	(POST@data+6)& (0+255),b
  6625  001B0C  0E00               	movlw	0
  6626  001B0E  6F98               	movwf	(POST@data+7)& (0+255),b
  6627  001B10  EC0D  F00E         	call	_POST	;wreg free
  6628                           
  6629                           ;driveControl/commControl.c: 34:     POST(me, &commControl_processEvent, evCInit, 0, 0);
  6630  001B14  C0A9  F08A         	movff	commControl_startBehaviour@me,POST@target
  6631  001B18  C0AA  F08B         	movff	commControl_startBehaviour@me+1,POST@target+1
  6632  001B1C  0E1E               	movlw	low _commControl_processEvent
  6633  001B1E  0100               	movlb	0	; () banked
  6634  001B20  6F8C               	movwf	POST@processEvent& (0+255),b
  6635  001B22  0E00               	movlw	high _commControl_processEvent
  6636  001B24  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  6637  001B26  0E28               	movlw	40
  6638  001B28  6F8E               	movwf	POST@id& (0+255),b
  6639  001B2A  0E00               	movlw	0
  6640  001B2C  6F90               	movwf	(POST@delay+1)& (0+255),b
  6641  001B2E  0E00               	movlw	0
  6642  001B30  6F8F               	movwf	POST@delay& (0+255),b
  6643  001B32  0E00               	movlw	0
  6644  001B34  6F91               	movwf	POST@data& (0+255),b
  6645  001B36  0E00               	movlw	0
  6646  001B38  6F92               	movwf	(POST@data+1)& (0+255),b
  6647  001B3A  0E00               	movlw	0
  6648  001B3C  6F93               	movwf	(POST@data+2)& (0+255),b
  6649  001B3E  0E00               	movlw	0
  6650  001B40  6F94               	movwf	(POST@data+3)& (0+255),b
  6651  001B42  0E00               	movlw	0
  6652  001B44  6F95               	movwf	(POST@data+4)& (0+255),b
  6653  001B46  0E00               	movlw	0
  6654  001B48  6F96               	movwf	(POST@data+5)& (0+255),b
  6655  001B4A  0E00               	movlw	0
  6656  001B4C  6F97               	movwf	(POST@data+6)& (0+255),b
  6657  001B4E  0E00               	movlw	0
  6658  001B50  6F98               	movwf	(POST@data+7)& (0+255),b
  6659  001B52  EC0D  F00E         	call	_POST	;wreg free
  6660  001B56  0012               	return		;funcret
  6661  001B58                     __end_of_commControl_startBehaviour:
  6662                           	callstack 0
  6663                           
  6664 ;; *************** function _ButtonSM_startBehaviour *****************
  6665 ;; Defined at:
  6666 ;;		line 109 in file "board/button/buttonsm.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  me              2   73[BANK0 ] PTR struct ButtonSM_
  6669 ;;		 -> theFactory.bsm_(10), theFactory(29), 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;Total ram usage:        3 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; Hardware stack levels required when called: 10
  6688 ;; This function calls:
  6689 ;;		_Button_read
  6690 ;;		_POST
  6691 ;; This function is called by:
  6692 ;;		_Factory_start
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text37
  6697  001EEC                     __ptext37:
  6698                           	callstack 0
  6699  001EEC                     _ButtonSM_startBehaviour:
  6700                           	callstack 19
  6701  001EEC                     
  6702                           ;board/button/buttonsm.c: 109: void ButtonSM_startBehaviour(ButtonSM* me);board/button/b
      +                          uttonsm.c: 110: {;board/button/buttonsm.c: 111:     POST(me, &ButtonSM_processEvent, evB
      +                          SMInit,0,0);
  6703  001EEC  C0A9  F08A         	movff	ButtonSM_startBehaviour@me,POST@target
  6704  001EF0  C0AA  F08B         	movff	ButtonSM_startBehaviour@me+1,POST@target+1
  6705  001EF4  0E8C               	movlw	low _ButtonSM_processEvent
  6706  001EF6  0100               	movlb	0	; () banked
  6707  001EF8  6F8C               	movwf	POST@processEvent& (0+255),b
  6708  001EFA  0E08               	movlw	high _ButtonSM_processEvent
  6709  001EFC  6F8D               	movwf	(POST@processEvent+1)& (0+255),b
  6710  001EFE  0E0A               	movlw	10
  6711  001F00  6F8E               	movwf	POST@id& (0+255),b
  6712  001F02  0E00               	movlw	0
  6713  001F04  6F90               	movwf	(POST@delay+1)& (0+255),b
  6714  001F06  0E00               	movlw	0
  6715  001F08  6F8F               	movwf	POST@delay& (0+255),b
  6716  001F0A  0E00               	movlw	0
  6717  001F0C  6F91               	movwf	POST@data& (0+255),b
  6718  001F0E  0E00               	movlw	0
  6719  001F10  6F92               	movwf	(POST@data+1)& (0+255),b
  6720  001F12  0E00               	movlw	0
  6721  001F14  6F93               	movwf	(POST@data+2)& (0+255),b
  6722  001F16  0E00               	movlw	0
  6723  001F18  6F94               	movwf	(POST@data+3)& (0+255),b
  6724  001F1A  0E00               	movlw	0
  6725  001F1C  6F95               	movwf	(POST@data+4)& (0+255),b
  6726  001F1E  0E00               	movlw	0
  6727  001F20  6F96               	movwf	(POST@data+5)& (0+255),b
  6728  001F22  0E00               	movlw	0
  6729  001F24  6F97               	movwf	(POST@data+6)& (0+255),b
  6730  001F26  0E00               	movlw	0
  6731  001F28  6F98               	movwf	(POST@data+7)& (0+255),b
  6732  001F2A  EC0D  F00E         	call	_POST	;wreg free
  6733  001F2E                     
  6734                           ;board/button/buttonsm.c: 112:     me->actualState = Button_read(me->button)==1?ST_BSMPR
      +                          ESSED:ST_BSMRELEASED;
  6735  001F2E  0100               	movlb	0	; () banked
  6736  001F30  EE20 F001          	lfsr	2,1
  6737  001F34  51A9               	movf	ButtonSM_startBehaviour@me& (0+255),w,b
  6738  001F36  26D9               	addwf	fsr2l,f,c
  6739  001F38  51AA               	movf	(ButtonSM_startBehaviour@me+1)& (0+255),w,b
  6740  001F3A  22DA               	addwfc	fsr2h,f,c
  6741  001F3C  006F FF78  F060    	movff	postinc2,Button_read@me
  6742  001F42  006F FF74  F061    	movff	postdec2,Button_read@me+1
  6743  001F48  ECAC  F00D         	call	_Button_read	;wreg free
  6744  001F4C  06E8               	decf	wreg,f,c
  6745  001F4E  B4D8               	btfsc	status,2,c
  6746  001F50  EFAC  F00F         	goto	u2001
  6747  001F54  EFAE  F00F         	goto	u2000
  6748  001F58                     u2001:
  6749  001F58  EFB3  F00F         	goto	l4283
  6750  001F5C                     u2000:
  6751  001F5C  0E04               	movlw	4
  6752  001F5E  0100               	movlb	0	; () banked
  6753  001F60  6FAB               	movwf	_ButtonSM_startBehaviour$212& (0+255),b
  6754  001F62  EFB6  F00F         	goto	l4285
  6755  001F66                     l4283:
  6756  001F66  0E03               	movlw	3
  6757  001F68  0100               	movlb	0	; () banked
  6758  001F6A  6FAB               	movwf	_ButtonSM_startBehaviour$212& (0+255),b
  6759  001F6C                     l4285:
  6760                           
  6761                           ; BSR set to: 0
  6762  001F6C  EE20 F003          	lfsr	2,3
  6763  001F70  51A9               	movf	ButtonSM_startBehaviour@me& (0+255),w,b
  6764  001F72  26D9               	addwf	fsr2l,f,c
  6765  001F74  51AA               	movf	(ButtonSM_startBehaviour@me+1)& (0+255),w,b
  6766  001F76  22DA               	addwfc	fsr2h,f,c
  6767  001F78  0060  F2AF  FFDF   	movff	_ButtonSM_startBehaviour$212,indf2
  6768  001F7E                     
  6769                           ; BSR set to: 0
  6770  001F7E  0012               	return		;funcret
  6771  001F80                     __end_of_ButtonSM_startBehaviour:
  6772                           	callstack 0
  6773                           
  6774 ;; *************** function _POST *****************
  6775 ;; Defined at:
  6776 ;;		line 257 in file "xf/xf.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  target          2   42[BANK0 ] PTR void 
  6779 ;;		 -> theFactory.cc_(18), theFactory.bsm_(10), theFactory(29), NULL(0), 
  6780 ;;  processEvent    2   44[BANK0 ] PTR FTN(PTR struct Event
  6781 ;;		 -> factory_toggleLed(1), commControl_processEvent(1), ButtonSM_processEvent(1), 
  6782 ;;  id              1   46[BANK0 ] unsigned char 
  6783 ;;  delay           2   47[BANK0 ] unsigned short 
  6784 ;;  data            8   49[BANK0 ] long long 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  ev             15   58[BANK0 ] struct Event_
  6787 ;;  tmid            1   57[BANK0 ] unsigned char 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      unsigned char 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6797 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;Total ram usage:       31 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 9
  6804 ;; This function calls:
  6805 ;;		_Event_init
  6806 ;;		_Event_setData
  6807 ;;		_Event_setDelay
  6808 ;;		_Event_setId
  6809 ;;		_Event_setPE
  6810 ;;		_Event_setTarget
  6811 ;;		_XF_pushEvent
  6812 ;; This function is called by:
  6813 ;;		_ButtonSM_processEvent
  6814 ;;		_ButtonSM_startBehaviour
  6815 ;;		_commControl_startBehaviour
  6816 ;;		_commControl_processEvent
  6817 ;;		_readCANFrame
  6818 ;;		_factory_toggleLed
  6819 ;;		_Factory_start
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text38
  6824  001C1A                     __ptext38:
  6825                           	callstack 0
  6826  001C1A                     _POST:
  6827                           	callstack 19
  6828  001C1A                     
  6829                           ;xf/xf.c: 257: uint8_t POST(void* target, processEventT processEvent, uint8_t id, uint16
      +                          _t delay , int64_t data);xf/xf.c: 258: {;xf/xf.c: 259:     uint8_t tmid = 8;
  6830  001C1A  0E08               	movlw	8
  6831  001C1C  0100               	movlb	0	; () banked
  6832  001C1E  6F99               	movwf	POST@tmid& (0+255),b
  6833  001C20                     
  6834                           ; BSR set to: 0
  6835                           ;xf/xf.c: 262:     Event ev;;xf/xf.c: 263:     Event_init(&ev);
  6836  001C20  0E9A               	movlw	low POST@ev
  6837  001C22  6F66               	movwf	Event_init@me& (0+255),b
  6838  001C24  0E00               	movlw	high POST@ev
  6839  001C26  6F67               	movwf	(Event_init@me+1)& (0+255),b
  6840  001C28  EC28  F012         	call	_Event_init	;wreg free
  6841  001C2C                     
  6842                           ;xf/xf.c: 264:     Event_setTarget(&ev,target);
  6843  001C2C  0E9A               	movlw	low POST@ev
  6844  001C2E  0100               	movlb	0	; () banked
  6845  001C30  6F60               	movwf	Event_setTarget@me& (0+255),b
  6846  001C32  0E00               	movlw	high POST@ev
  6847  001C34  6F61               	movwf	(Event_setTarget@me+1)& (0+255),b
  6848  001C36  C08A  F062         	movff	POST@target,Event_setTarget@target
  6849  001C3A  C08B  F063         	movff	POST@target+1,Event_setTarget@target+1
  6850  001C3E  ECCB  F014         	call	_Event_setTarget	;wreg free
  6851  001C42                     
  6852                           ;xf/xf.c: 265:     Event_setPE(&ev,processEvent);
  6853  001C42  0E9A               	movlw	low POST@ev
  6854  001C44  0100               	movlb	0	; () banked
  6855  001C46  6F60               	movwf	Event_setPE@me& (0+255),b
  6856  001C48  0E00               	movlw	high POST@ev
  6857  001C4A  6F61               	movwf	(Event_setPE@me+1)& (0+255),b
  6858  001C4C  C08C  F062         	movff	POST@processEvent,Event_setPE@processEvent
  6859  001C50  C08D  F063         	movff	POST@processEvent+1,Event_setPE@processEvent+1
  6860  001C54  ECD9  F014         	call	_Event_setPE	;wreg free
  6861  001C58                     
  6862                           ;xf/xf.c: 266:     Event_setId(&ev,id);
  6863  001C58  0E9A               	movlw	low POST@ev
  6864  001C5A  0100               	movlb	0	; () banked
  6865  001C5C  6F60               	movwf	Event_setId@me& (0+255),b
  6866  001C5E  0E00               	movlw	high POST@ev
  6867  001C60  6F61               	movwf	(Event_setId@me+1)& (0+255),b
  6868  001C62  C08E  F062         	movff	POST@id,Event_setId@eventID
  6869  001C66  EC3D  F015         	call	_Event_setId	;wreg free
  6870  001C6A                     
  6871                           ;xf/xf.c: 267:     Event_setDelay(&ev,delay);
  6872  001C6A  0E9A               	movlw	low POST@ev
  6873  001C6C  0100               	movlb	0	; () banked
  6874  001C6E  6F60               	movwf	Event_setDelay@me& (0+255),b
  6875  001C70  0E00               	movlw	high POST@ev
  6876  001C72  6F61               	movwf	(Event_setDelay@me+1)& (0+255),b
  6877  001C74  C08F  F062         	movff	POST@delay,Event_setDelay@delay
  6878  001C78  C090  F063         	movff	POST@delay+1,Event_setDelay@delay+1
  6879  001C7C  ECAF  F014         	call	_Event_setDelay	;wreg free
  6880  001C80                     
  6881                           ;xf/xf.c: 268:     Event_setData(&ev,data);
  6882  001C80  0E9A               	movlw	low POST@ev
  6883  001C82  0100               	movlb	0	; () banked
  6884  001C84  6F60               	movwf	Event_setData@me& (0+255),b
  6885  001C86  0E00               	movlw	high POST@ev
  6886  001C88  6F61               	movwf	(Event_setData@me+1)& (0+255),b
  6887  001C8A  C091  F062         	movff	POST@data,Event_setData@data
  6888  001C8E  C092  F063         	movff	POST@data+1,Event_setData@data+1
  6889  001C92  C093  F064         	movff	POST@data+2,Event_setData@data+2
  6890  001C96  C094  F065         	movff	POST@data+3,Event_setData@data+3
  6891  001C9A  C095  F066         	movff	POST@data+4,Event_setData@data+4
  6892  001C9E  C096  F067         	movff	POST@data+5,Event_setData@data+5
  6893  001CA2  C097  F068         	movff	POST@data+6,Event_setData@data+6
  6894  001CA6  C098  F069         	movff	POST@data+7,Event_setData@data+7
  6895  001CAA  EC99  F013         	call	_Event_setData	;wreg free
  6896  001CAE                     
  6897                           ;xf/xf.c: 269:     XF_pushEvent(ev,0,&tmid);
  6898  001CAE  EE20  F09A         	lfsr	2,POST@ev
  6899  001CB2  EE00  F074         	lfsr	0,XF_pushEvent@ev
  6900  001CB6  0E0E               	movlw	14
  6901  001CB8                     u1591:
  6902  001CB8  006F FF6F FFEB     	movff	plusw2,plusw0
  6903  001CBE  06E8               	decf	wreg,f,c
  6904  001CC0  E2FB               	bc	u1591
  6905  001CC2  0E00               	movlw	0
  6906  001CC4  0100               	movlb	0	; () banked
  6907  001CC6  6F83               	movwf	XF_pushEvent@inISR& (0+255),b
  6908  001CC8  0E99               	movlw	low POST@tmid
  6909  001CCA  6F84               	movwf	XF_pushEvent@tmid& (0+255),b
  6910  001CCC  0E00               	movlw	high POST@tmid
  6911  001CCE  6F85               	movwf	(XF_pushEvent@tmid+1)& (0+255),b
  6912  001CD0  EC75  F00B         	call	_XF_pushEvent	;wreg free
  6913  001CD4  0012               	return		;funcret
  6914  001CD6                     __end_of_POST:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _XF_pushEvent *****************
  6918 ;; Defined at:
  6919 ;;		line 97 in file "xf/xf.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  ev             15   20[BANK0 ] struct Event_
  6922 ;;  inISR           1   35[BANK0 ] _Bool 
  6923 ;;  tmid            2   36[BANK0 ] PTR unsigned char 
  6924 ;;		 -> POST@tmid(1), XF_decrementAndQueueTimers@dummy(1), 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  tm              2   39[BANK0 ] unsigned short 
  6927 ;;  temp            1   41[BANK0 ] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      _Bool 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6937 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;Total ram usage:       22 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 8
  6944 ;; This function calls:
  6945 ;;		_ENTERCRITICAL
  6946 ;;		_Event_getDelay
  6947 ;;		_Event_setDelay
  6948 ;;		_LEAVECRITICAL
  6949 ;;		_XF_scheduleTimer
  6950 ;;		___awmod
  6951 ;; This function is called by:
  6952 ;;		_POST
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text39
  6957  0016EA                     __ptext39:
  6958                           	callstack 0
  6959  0016EA                     _XF_pushEvent:
  6960                           	callstack 19
  6961  0016EA                     
  6962                           ;xf/xf.c: 97: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 98: {;xf
      +                          /xf.c: 99:     uint8_t temp;;xf/xf.c: 100:     uint16_t tm;;xf/xf.c: 101:     tm = Event
      +                          _getDelay(&ev);
  6963  0016EA  0E74               	movlw	low XF_pushEvent@ev
  6964  0016EC  0100               	movlb	0	; () banked
  6965  0016EE  6F60               	movwf	Event_getDelay@me& (0+255),b
  6966  0016F0  0E00               	movlw	high XF_pushEvent@ev
  6967  0016F2  6F61               	movwf	(Event_getDelay@me+1)& (0+255),b
  6968  0016F4  ECBD  F014         	call	_Event_getDelay	;wreg free
  6969  0016F8  C060  F087         	movff	?_Event_getDelay,XF_pushEvent@tm
  6970  0016FC  C061  F088         	movff	?_Event_getDelay+1,XF_pushEvent@tm+1
  6971  001700                     
  6972                           ;xf/xf.c: 102:     if ( tm > 0)
  6973  001700  0100               	movlb	0	; () banked
  6974  001702  5187               	movf	XF_pushEvent@tm& (0+255),w,b
  6975  001704  1188               	iorwf	(XF_pushEvent@tm+1)& (0+255),w,b
  6976  001706  B4D8               	btfsc	status,2,c
  6977  001708  EF88  F00B         	goto	u1531
  6978  00170C  EF8A  F00B         	goto	u1530
  6979  001710                     u1531:
  6980  001710  EFAF  F00B         	goto	l3801
  6981  001714                     u1530:
  6982  001714                     
  6983                           ; BSR set to: 0
  6984                           ;xf/xf.c: 103:     {;xf/xf.c: 104:         Event_setDelay(&ev,0);
  6985  001714  0E74               	movlw	low XF_pushEvent@ev
  6986  001716  6F60               	movwf	Event_setDelay@me& (0+255),b
  6987  001718  0E00               	movlw	high XF_pushEvent@ev
  6988  00171A  6F61               	movwf	(Event_setDelay@me+1)& (0+255),b
  6989  00171C  0E00               	movlw	0
  6990  00171E  6F63               	movwf	(Event_setDelay@delay+1)& (0+255),b
  6991  001720  0E00               	movlw	0
  6992  001722  6F62               	movwf	Event_setDelay@delay& (0+255),b
  6993  001724  ECAF  F014         	call	_Event_setDelay	;wreg free
  6994  001728                     
  6995                           ;xf/xf.c: 105:         *tmid = XF_scheduleTimer(tm, ev, inISR);
  6996  001728  C087  F061         	movff	XF_pushEvent@tm,XF_scheduleTimer@tm
  6997  00172C  C088  F062         	movff	XF_pushEvent@tm+1,XF_scheduleTimer@tm+1
  6998  001730  EE20  F074         	lfsr	2,XF_pushEvent@ev
  6999  001734  EE00  F063         	lfsr	0,XF_scheduleTimer@ev
  7000  001738  0E0E               	movlw	14
  7001  00173A                     u1541:
  7002  00173A  006F FF6F FFEB     	movff	plusw2,plusw0
  7003  001740  06E8               	decf	wreg,f,c
  7004  001742  E2FB               	bc	u1541
  7005  001744  C083  F072         	movff	XF_pushEvent@inISR,XF_scheduleTimer@inISR
  7006  001748  EC07  F010         	call	_XF_scheduleTimer	;wreg free
  7007  00174C  0060  F213  FFD9   	movff	XF_pushEvent@tmid,fsr2l
  7008  001752  0060  F217  FFDA   	movff	XF_pushEvent@tmid+1,fsr2h
  7009  001758  6EDF               	movwf	indf2,c
  7010                           
  7011                           ;xf/xf.c: 106:     }
  7012  00175A  EFF1  F00B         	goto	l3819
  7013  00175E                     l3801:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;xf/xf.c: 108:     {;xf/xf.c: 109:         ENTERCRITICAL(inISR);
  7017  00175E  5183               	movf	XF_pushEvent@inISR& (0+255),w,b
  7018  001760  ECF4  F014         	call	_ENTERCRITICAL
  7019  001764                     
  7020                           ;xf/xf.c: 111:         temp = (theXF.in+1) % (uint8_t)(sizeof(theXF.eventQueue) / sizeof
      +                          (Event));
  7021  001764  0060  F8D0  F086   	movff	_theXF+316,??_XF_pushEvent
  7022  00176A  0E01               	movlw	1
  7023  00176C  0100               	movlb	0	; () banked
  7024  00176E  2586               	addwf	??_XF_pushEvent& (0+255),w,b
  7025  001770  6F60               	movwf	___awmod@dividend& (0+255),b
  7026  001772  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7027  001774  0E00               	movlw	0
  7028  001776  2361               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  7029  001778  0E00               	movlw	0
  7030  00177A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7031  00177C  0E0C               	movlw	12
  7032  00177E  6F62               	movwf	___awmod@divisor& (0+255),b
  7033  001780  ECC5  F00E         	call	___awmod	;wreg free
  7034  001784  0100               	movlb	0	; () banked
  7035  001786  5160               	movf	?___awmod& (0+255),w,b
  7036  001788  6F89               	movwf	XF_pushEvent@temp& (0+255),b
  7037  00178A                     
  7038                           ; BSR set to: 0
  7039                           ;xf/xf.c: 112:         if(temp == theXF.out)
  7040  00178A  EE20  F235         	lfsr	2,_theXF+317
  7041  00178E  5189               	movf	XF_pushEvent@temp& (0+255),w,b
  7042  001790  18DE               	xorwf	postinc2,w,c
  7043  001792  A4D8               	btfss	status,2,c
  7044  001794  EFCE  F00B         	goto	u1551
  7045  001798  EFD0  F00B         	goto	u1550
  7046  00179C                     u1551:
  7047  00179C  EFD6  F00B         	goto	l3813
  7048  0017A0                     u1550:
  7049  0017A0                     
  7050                           ; BSR set to: 0
  7051                           ;xf/xf.c: 113:         {;xf/xf.c: 114:           LEAVECRITICAL(inISR);
  7052  0017A0  5183               	movf	XF_pushEvent@inISR& (0+255),w,b
  7053  0017A2  ECE7  F014         	call	_LEAVECRITICAL
  7054  0017A6                     
  7055                           ;xf/xf.c: 115:           return 0;
  7056  0017A6  0E00               	movlw	0
  7057  0017A8  EFF2  F00B         	goto	l1056
  7058  0017AC                     l3813:
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;xf/xf.c: 117:         theXF.eventQueue[theXF.in] = ev;
  7062  0017AC  EE20  F074         	lfsr	2,XF_pushEvent@ev
  7063  0017B0  0060  F8D0  F086   	movff	_theXF+316,??_XF_pushEvent
  7064  0017B6  5186               	movf	??_XF_pushEvent& (0+255),w,b
  7065  0017B8  0D0F               	mullw	15
  7066  0017BA  0E80               	movlw	low (_theXF+136)
  7067  0017BC  24F3               	addwf	243,w,c
  7068  0017BE  6EE1               	movwf	fsr1l,c
  7069  0017C0  0E01               	movlw	high (_theXF+136)
  7070  0017C2  20F4               	addwfc	prodh,w,c
  7071  0017C4  6EE2               	movwf	fsr1h,c
  7072  0017C6  0E0E               	movlw	14
  7073  0017C8                     u1561:
  7074  0017C8  006F FF6F FFE3     	movff	plusw2,plusw1
  7075  0017CE  06E8               	decf	wreg,f,c
  7076  0017D0  E2FB               	bc	u1561
  7077  0017D2                     
  7078                           ; BSR set to: 0
  7079                           ;xf/xf.c: 118:         theXF.in = temp;
  7080  0017D2  EE20  F234         	lfsr	2,_theXF+316
  7081  0017D6  0060  F227  FFDF   	movff	XF_pushEvent@temp,indf2
  7082  0017DC                     
  7083                           ; BSR set to: 0
  7084                           ;xf/xf.c: 119:         LEAVECRITICAL(inISR);
  7085  0017DC  5183               	movf	XF_pushEvent@inISR& (0+255),w,b
  7086  0017DE  ECE7  F014         	call	_LEAVECRITICAL
  7087  0017E2                     l3819:
  7088                           
  7089                           ;xf/xf.c: 121:     return 1;
  7090  0017E2  0E01               	movlw	1
  7091  0017E4                     l1056:
  7092  0017E4  0012               	return		;funcret
  7093  0017E6                     __end_of_XF_pushEvent:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function ___awmod *****************
  7097 ;; Defined at:
  7098 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awmod.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  dividend        2    0[BANK0 ] int 
  7101 ;;  divisor         2    2[BANK0 ] int 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  sign            1    5[BANK0 ] unsigned char 
  7104 ;;  counter         1    4[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  2    0[BANK0 ] int 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2, status,0
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        6 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; Hardware stack levels required when called: 6
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_XF_pushEvent
  7125 ;;		_XF_popEvent
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text40
  7130  001D8A                     __ptext40:
  7131                           	callstack 0
  7132  001D8A                     ___awmod:
  7133                           	callstack 20
  7134  001D8A  0E00               	movlw	0
  7135  001D8C  0100               	movlb	0	; () banked
  7136  001D8E  6F65               	movwf	___awmod@sign& (0+255),b
  7137  001D90                     
  7138                           ; BSR set to: 0
  7139  001D90  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  7140  001D92  EFCF  F00E         	goto	u1440
  7141  001D96  EFCD  F00E         	goto	u1441
  7142  001D9A                     u1441:
  7143  001D9A  EFD5  F00E         	goto	l3711
  7144  001D9E                     u1440:
  7145  001D9E                     
  7146                           ; BSR set to: 0
  7147  001D9E  6D60               	negf	___awmod@dividend& (0+255),b
  7148  001DA0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7149  001DA2  B0D8               	btfsc	status,0,c
  7150  001DA4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7151  001DA6                     
  7152                           ; BSR set to: 0
  7153  001DA6  0E01               	movlw	1
  7154  001DA8  6F65               	movwf	___awmod@sign& (0+255),b
  7155  001DAA                     l3711:
  7156                           
  7157                           ; BSR set to: 0
  7158  001DAA  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7159  001DAC  EFDC  F00E         	goto	u1450
  7160  001DB0  EFDA  F00E         	goto	u1451
  7161  001DB4                     u1451:
  7162  001DB4  EFE0  F00E         	goto	l3715
  7163  001DB8                     u1450:
  7164  001DB8                     
  7165                           ; BSR set to: 0
  7166  001DB8  6D62               	negf	___awmod@divisor& (0+255),b
  7167  001DBA  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7168  001DBC  B0D8               	btfsc	status,0,c
  7169  001DBE  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7170  001DC0                     l3715:
  7171                           
  7172                           ; BSR set to: 0
  7173  001DC0  5162               	movf	___awmod@divisor& (0+255),w,b
  7174  001DC2  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7175  001DC4  B4D8               	btfsc	status,2,c
  7176  001DC6  EFE7  F00E         	goto	u1461
  7177  001DCA  EFE9  F00E         	goto	u1460
  7178  001DCE                     u1461:
  7179  001DCE  EF0D  F00F         	goto	l3731
  7180  001DD2                     u1460:
  7181  001DD2                     
  7182                           ; BSR set to: 0
  7183  001DD2  0E01               	movlw	1
  7184  001DD4  6F64               	movwf	___awmod@counter& (0+255),b
  7185  001DD6  EFF1  F00E         	goto	l3721
  7186  001DDA                     l3719:
  7187                           
  7188                           ; BSR set to: 0
  7189  001DDA  90D8               	bcf	status,0,c
  7190  001DDC  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7191  001DDE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7192  001DE0  2B64               	incf	___awmod@counter& (0+255),f,b
  7193  001DE2                     l3721:
  7194                           
  7195                           ; BSR set to: 0
  7196  001DE2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7197  001DE4  EFF6  F00E         	goto	u1471
  7198  001DE8  EFF8  F00E         	goto	u1470
  7199  001DEC                     u1471:
  7200  001DEC  EFED  F00E         	goto	l3719
  7201  001DF0                     u1470:
  7202  001DF0                     l3723:
  7203                           
  7204                           ; BSR set to: 0
  7205  001DF0  5162               	movf	___awmod@divisor& (0+255),w,b
  7206  001DF2  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7207  001DF4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7208  001DF6  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7209  001DF8  A0D8               	btfss	status,0,c
  7210  001DFA  EF01  F00F         	goto	u1481
  7211  001DFE  EF03  F00F         	goto	u1480
  7212  001E02                     u1481:
  7213  001E02  EF07  F00F         	goto	l3727
  7214  001E06                     u1480:
  7215  001E06                     
  7216                           ; BSR set to: 0
  7217  001E06  5162               	movf	___awmod@divisor& (0+255),w,b
  7218  001E08  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7219  001E0A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7220  001E0C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7221  001E0E                     l3727:
  7222                           
  7223                           ; BSR set to: 0
  7224  001E0E  90D8               	bcf	status,0,c
  7225  001E10  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7226  001E12  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7227  001E14                     
  7228                           ; BSR set to: 0
  7229  001E14  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7230  001E16  EFF8  F00E         	goto	l3723
  7231  001E1A                     l3731:
  7232                           
  7233                           ; BSR set to: 0
  7234  001E1A  5165               	movf	___awmod@sign& (0+255),w,b
  7235  001E1C  B4D8               	btfsc	status,2,c
  7236  001E1E  EF13  F00F         	goto	u1491
  7237  001E22  EF15  F00F         	goto	u1490
  7238  001E26                     u1491:
  7239  001E26  EF19  F00F         	goto	l3735
  7240  001E2A                     u1490:
  7241  001E2A                     
  7242                           ; BSR set to: 0
  7243  001E2A  6D60               	negf	___awmod@dividend& (0+255),b
  7244  001E2C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7245  001E2E  B0D8               	btfsc	status,0,c
  7246  001E30  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7247  001E32                     l3735:
  7248                           
  7249                           ; BSR set to: 0
  7250  001E32  C060  F060         	movff	___awmod@dividend,?___awmod
  7251  001E36  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7252  001E3A                     
  7253                           ; BSR set to: 0
  7254  001E3A  0012               	return		;funcret
  7255  001E3C                     __end_of___awmod:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function _XF_scheduleTimer *****************
  7259 ;; Defined at:
  7260 ;;		line 157 in file "xf/xf.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  tm              2    1[BANK0 ] unsigned short 
  7263 ;;  ev             15    3[BANK0 ] struct Event_
  7264 ;;  inISR           1   18[BANK0 ] _Bool 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  i               1   19[BANK0 ] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      unsigned char 
  7269 ;; Registers used:
  7270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7276 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;Total ram usage:       19 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; Hardware stack levels required when called: 7
  7283 ;; This function calls:
  7284 ;;		_ENTERCRITICAL
  7285 ;;		_LEAVECRITICAL
  7286 ;; This function is called by:
  7287 ;;		_XF_pushEvent
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text41
  7292  00200E                     __ptext41:
  7293                           	callstack 0
  7294  00200E                     _XF_scheduleTimer:
  7295                           	callstack 19
  7296  00200E                     
  7297                           ;xf/xf.c: 157: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 158
      +                          : {;xf/xf.c: 159:     uint8_t i;;xf/xf.c: 161:     ENTERCRITICAL(inISR);
  7298  00200E  0100               	movlb	0	; () banked
  7299  002010  5172               	movf	XF_scheduleTimer@inISR& (0+255),w,b
  7300  002012  ECF4  F014         	call	_ENTERCRITICAL
  7301  002016                     
  7302                           ;xf/xf.c: 162:     for (i=0; i<8; i++)
  7303  002016  0E00               	movlw	0
  7304  002018  0100               	movlb	0	; () banked
  7305  00201A  6F73               	movwf	XF_scheduleTimer@i& (0+255),b
  7306  00201C                     l3687:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;xf/xf.c: 163:     {;xf/xf.c: 164:         if (theXF.timerList[i].ev.id == 0)
  7310  00201C  5173               	movf	XF_scheduleTimer@i& (0+255),w,b
  7311  00201E  0D11               	mullw	17
  7312  002020  0EFA               	movlw	low (_theXF+2)
  7313  002022  24F3               	addwf	243,w,c
  7314  002024  6ED9               	movwf	fsr2l,c
  7315  002026  0E00               	movlw	high (_theXF+2)
  7316  002028  20F4               	addwfc	prodh,w,c
  7317  00202A  6EDA               	movwf	fsr2h,c
  7318  00202C  50DF               	movf	indf2,w,c
  7319  00202E  A4D8               	btfss	status,2,c
  7320  002030  EF1C  F010         	goto	u1411
  7321  002034  EF1E  F010         	goto	u1410
  7322  002038                     u1411:
  7323  002038  EF3E  F010         	goto	l3693
  7324  00203C                     u1410:
  7325  00203C                     
  7326                           ; BSR set to: 0
  7327                           ;xf/xf.c: 165:         {;xf/xf.c: 166:             theXF.timerList[i].tm = tm;
  7328  00203C  5173               	movf	XF_scheduleTimer@i& (0+255),w,b
  7329  00203E  0D11               	mullw	17
  7330  002040  0EF8               	movlw	low _theXF
  7331  002042  24F3               	addwf	243,w,c
  7332  002044  6ED9               	movwf	fsr2l,c
  7333  002046  0E00               	movlw	high _theXF
  7334  002048  20F4               	addwfc	prodh,w,c
  7335  00204A  6EDA               	movwf	fsr2h,c
  7336  00204C  0060  F187  FFDE   	movff	XF_scheduleTimer@tm,postinc2
  7337  002052  0060  F18B  FFDD   	movff	XF_scheduleTimer@tm+1,postdec2
  7338  002058                     
  7339                           ; BSR set to: 0
  7340                           ;xf/xf.c: 167:             theXF.timerList[i].ev = ev;
  7341  002058  EE20  F063         	lfsr	2,XF_scheduleTimer@ev
  7342  00205C  5173               	movf	XF_scheduleTimer@i& (0+255),w,b
  7343  00205E  0D11               	mullw	17
  7344  002060  0EFA               	movlw	low (_theXF+2)
  7345  002062  24F3               	addwf	243,w,c
  7346  002064  6EE1               	movwf	fsr1l,c
  7347  002066  0E00               	movlw	high (_theXF+2)
  7348  002068  20F4               	addwfc	prodh,w,c
  7349  00206A  6EE2               	movwf	fsr1h,c
  7350  00206C  0E0E               	movlw	14
  7351  00206E                     u1421:
  7352  00206E  006F FF6F FFE3     	movff	plusw2,plusw1
  7353  002074  06E8               	decf	wreg,f,c
  7354  002076  E2FB               	bc	u1421
  7355                           
  7356                           ;xf/xf.c: 168:             break;
  7357  002078  EF47  F010         	goto	l3697
  7358  00207C                     l3693:
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;xf/xf.c: 170:     }
  7362  00207C  2B73               	incf	XF_scheduleTimer@i& (0+255),f,b
  7363  00207E                     
  7364                           ; BSR set to: 0
  7365  00207E  0E07               	movlw	7
  7366  002080  6573               	cpfsgt	XF_scheduleTimer@i& (0+255),b
  7367  002082  EF45  F010         	goto	u1431
  7368  002086  EF47  F010         	goto	u1430
  7369  00208A                     u1431:
  7370  00208A  EF0E  F010         	goto	l3687
  7371  00208E                     u1430:
  7372  00208E                     l3697:
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;xf/xf.c: 175:     LEAVECRITICAL(inISR);
  7376  00208E  5172               	movf	XF_scheduleTimer@inISR& (0+255),w,b
  7377  002090  ECE7  F014         	call	_LEAVECRITICAL
  7378  002094                     
  7379                           ;xf/xf.c: 176:     return i;
  7380  002094  0100               	movlb	0	; () banked
  7381  002096  5173               	movf	XF_scheduleTimer@i& (0+255),w,b
  7382  002098                     
  7383                           ; BSR set to: 0
  7384  002098  0012               	return		;funcret
  7385  00209A                     __end_of_XF_scheduleTimer:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function _LEAVECRITICAL *****************
  7389 ;; Defined at:
  7390 ;;		line 248 in file "xf/xf.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  inISR           1    wreg     _Bool 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  inISR           1    0[BANK0 ] _Bool 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;Total ram usage:        1 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 6
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_XF_pushEvent
  7415 ;;		_XF_popEvent
  7416 ;;		_XF_scheduleTimer
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text42
  7421  0029CE                     __ptext42:
  7422                           	callstack 0
  7423  0029CE                     _LEAVECRITICAL:
  7424                           	callstack 19
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;incstack = 0
  7428                           ;LEAVECRITICAL@inISR stored from wreg
  7429  0029CE  0100               	movlb	0	; () banked
  7430  0029D0  6F60               	movwf	LEAVECRITICAL@inISR& (0+255),b
  7431  0029D2                     
  7432                           ;xf/xf.c: 248: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 249: {;xf/xf.c: 250:     
      +                          if (inISR == 0)
  7433  0029D2  0100               	movlb	0	; () banked
  7434  0029D4  5160               	movf	LEAVECRITICAL@inISR& (0+255),w,b
  7435  0029D6  A4D8               	btfss	status,2,c
  7436  0029D8  EFF0  F014         	goto	u1401
  7437  0029DC  EFF2  F014         	goto	u1400
  7438  0029E0                     u1401:
  7439  0029E0  EFF3  F014         	goto	l1086
  7440  0029E4                     u1400:
  7441  0029E4                     
  7442                           ; BSR set to: 0
  7443                           ;xf/xf.c: 251:     {;xf/xf.c: 253:      (INTCON0bits.GIE = 1);
  7444  0029E4  8ED2               	bsf	210,7,c	;volatile
  7445  0029E6                     l1086:
  7446                           
  7447                           ; BSR set to: 0
  7448  0029E6  0012               	return		;funcret
  7449  0029E8                     __end_of_LEAVECRITICAL:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function _ENTERCRITICAL *****************
  7453 ;; Defined at:
  7454 ;;		line 233 in file "xf/xf.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  inISR           1    wreg     _Bool 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  inISR           1    0[BANK0 ] _Bool 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;Total ram usage:        1 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; Hardware stack levels required when called: 6
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_XF_pushEvent
  7479 ;;		_XF_popEvent
  7480 ;;		_XF_scheduleTimer
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text43
  7485  0029E8                     __ptext43:
  7486                           	callstack 0
  7487  0029E8                     _ENTERCRITICAL:
  7488                           	callstack 19
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;incstack = 0
  7492                           ;ENTERCRITICAL@inISR stored from wreg
  7493  0029E8  0100               	movlb	0	; () banked
  7494  0029EA  6F60               	movwf	ENTERCRITICAL@inISR& (0+255),b
  7495  0029EC                     
  7496                           ;xf/xf.c: 233: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 234: {;xf/xf.c: 235:     
      +                          if (inISR == 0)
  7497  0029EC  0100               	movlb	0	; () banked
  7498  0029EE  5160               	movf	ENTERCRITICAL@inISR& (0+255),w,b
  7499  0029F0  A4D8               	btfss	status,2,c
  7500  0029F2  EFFD  F014         	goto	u1391
  7501  0029F6  EFFF  F014         	goto	u1390
  7502  0029FA                     u1391:
  7503  0029FA  EF00  F015         	goto	l1082
  7504  0029FE                     u1390:
  7505  0029FE                     
  7506                           ; BSR set to: 0
  7507                           ;xf/xf.c: 236:     {;xf/xf.c: 238:       (INTCON0bits.GIE = 0);
  7508  0029FE  9ED2               	bcf	210,7,c	;volatile
  7509  002A00                     l1082:
  7510                           
  7511                           ; BSR set to: 0
  7512  002A00  0012               	return		;funcret
  7513  002A02                     __end_of_ENTERCRITICAL:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function _Event_setDelay *****************
  7517 ;; Defined at:
  7518 ;;		line 53 in file "xf/event.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  me              2    0[BANK0 ] PTR struct Event_
  7521 ;;		 -> POST@ev(15), XF_pushEvent@ev(15), 
  7522 ;;  delay           2    2[BANK0 ] unsigned short 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;Total ram usage:        4 bytes
  7539 ;; Hardware stack levels used: 1
  7540 ;; Hardware stack levels required when called: 6
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_XF_pushEvent
  7545 ;;		_POST
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text44
  7550  00295E                     __ptext44:
  7551                           	callstack 0
  7552  00295E                     _Event_setDelay:
  7553                           	callstack 20
  7554  00295E                     
  7555                           ;xf/event.c: 53: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 54: {;xf/eve
      +                          nt.c: 55:     me->delay = delay;
  7556  00295E  0100               	movlb	0	; () banked
  7557  002960  EE20 F005          	lfsr	2,5
  7558  002964  5160               	movf	Event_setDelay@me& (0+255),w,b
  7559  002966  26D9               	addwf	fsr2l,f,c
  7560  002968  5161               	movf	(Event_setDelay@me+1)& (0+255),w,b
  7561  00296A  22DA               	addwfc	fsr2h,f,c
  7562  00296C  0060  F18B  FFDE   	movff	Event_setDelay@delay,postinc2
  7563  002972  0060  F18F  FFDD   	movff	Event_setDelay@delay+1,postdec2
  7564  002978                     
  7565                           ; BSR set to: 0
  7566  002978  0012               	return		;funcret
  7567  00297A                     __end_of_Event_setDelay:
  7568                           	callstack 0
  7569                           
  7570 ;; *************** function _Event_getDelay *****************
  7571 ;; Defined at:
  7572 ;;		line 58 in file "xf/event.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  me              2    0[BANK0 ] PTR struct Event_
  7575 ;;		 -> XF_pushEvent@ev(15), 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2    0[BANK0 ] unsigned short 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;Total ram usage:        2 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; Hardware stack levels required when called: 6
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_XF_pushEvent
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text45
  7602  00297A                     __ptext45:
  7603                           	callstack 0
  7604  00297A                     _Event_getDelay:
  7605                           	callstack 20
  7606  00297A                     
  7607                           ;xf/event.c: 58: uint16_t Event_getDelay(Event* me);xf/event.c: 59: {;xf/event.c: 60:   
      +                            return me->delay;
  7608  00297A  0100               	movlb	0	; () banked
  7609  00297C  EE20 F005          	lfsr	2,5
  7610  002980  5160               	movf	Event_getDelay@me& (0+255),w,b
  7611  002982  26D9               	addwf	fsr2l,f,c
  7612  002984  5161               	movf	(Event_getDelay@me+1)& (0+255),w,b
  7613  002986  22DA               	addwfc	fsr2h,f,c
  7614  002988  006F FF78  F060    	movff	postinc2,?_Event_getDelay
  7615  00298E  006F FF74  F061    	movff	postdec2,?_Event_getDelay+1
  7616  002994                     
  7617                           ; BSR set to: 0
  7618  002994  0012               	return		;funcret
  7619  002996                     __end_of_Event_getDelay:
  7620                           	callstack 0
  7621                           
  7622 ;; *************** function _Event_setTarget *****************
  7623 ;; Defined at:
  7624 ;;		line 28 in file "xf/event.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  me              2    0[BANK0 ] PTR struct Event_
  7627 ;;		 -> POST@ev(15), 
  7628 ;;  target          2    2[BANK0 ] PTR void 
  7629 ;;		 -> theFactory.cc_(18), theFactory.bsm_(10), theFactory(29), NULL(0), 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;Total ram usage:        4 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 6
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_POST
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text46
  7656  002996                     __ptext46:
  7657                           	callstack 0
  7658  002996                     _Event_setTarget:
  7659                           	callstack 21
  7660  002996                     
  7661                           ;xf/event.c: 28: void Event_setTarget(Event* me, void* target);xf/event.c: 29: {;xf/even
      +                          t.c: 30:     me->target = target;
  7662  002996  0100               	movlb	0	; () banked
  7663  002998  EE20 F003          	lfsr	2,3
  7664  00299C  5160               	movf	Event_setTarget@me& (0+255),w,b
  7665  00299E  26D9               	addwf	fsr2l,f,c
  7666  0029A0  5161               	movf	(Event_setTarget@me+1)& (0+255),w,b
  7667  0029A2  22DA               	addwfc	fsr2h,f,c
  7668  0029A4  0060  F18B  FFDE   	movff	Event_setTarget@target,postinc2
  7669  0029AA  0060  F18F  FFDD   	movff	Event_setTarget@target+1,postdec2
  7670  0029B0                     
  7671                           ; BSR set to: 0
  7672  0029B0  0012               	return		;funcret
  7673  0029B2                     __end_of_Event_setTarget:
  7674                           	callstack 0
  7675                           
  7676 ;; *************** function _Event_setPE *****************
  7677 ;; Defined at:
  7678 ;;		line 23 in file "xf/event.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  me              2    0[BANK0 ] PTR struct Event_
  7681 ;;		 -> POST@ev(15), 
  7682 ;;  processEvent    2    2[BANK0 ] PTR FTN(PTR struct Event
  7683 ;;		 -> factory_toggleLed(1), commControl_processEvent(1), ButtonSM_processEvent(1), 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;Total ram usage:        4 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; Hardware stack levels required when called: 6
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_POST
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text47
  7710  0029B2                     __ptext47:
  7711                           	callstack 0
  7712  0029B2                     _Event_setPE:
  7713                           	callstack 21
  7714  0029B2                     
  7715                           ;xf/event.c: 23: void Event_setPE(Event* me, processEventT processEvent);xf/event.c: 24:
      +                           {;xf/event.c: 25:     me->processEvent = processEvent;
  7716  0029B2  0100               	movlb	0	; () banked
  7717  0029B4  EE20 F001          	lfsr	2,1
  7718  0029B8  5160               	movf	Event_setPE@me& (0+255),w,b
  7719  0029BA  26D9               	addwf	fsr2l,f,c
  7720  0029BC  5161               	movf	(Event_setPE@me+1)& (0+255),w,b
  7721  0029BE  22DA               	addwfc	fsr2h,f,c
  7722  0029C0  0060  F18B  FFDE   	movff	Event_setPE@processEvent,postinc2
  7723  0029C6  0060  F18F  FFDD   	movff	Event_setPE@processEvent+1,postdec2
  7724  0029CC                     
  7725                           ; BSR set to: 0
  7726  0029CC  0012               	return		;funcret
  7727  0029CE                     __end_of_Event_setPE:
  7728                           	callstack 0
  7729                           
  7730 ;; *************** function _Event_setId *****************
  7731 ;; Defined at:
  7732 ;;		line 43 in file "xf/event.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  me              2    0[BANK0 ] PTR struct Event_
  7735 ;;		 -> POST@ev(15), 
  7736 ;;  eventID         1    2[BANK0 ] unsigned char 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		fsr2l, fsr2h
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7748 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;Total ram usage:        3 bytes
  7753 ;; Hardware stack levels used: 1
  7754 ;; Hardware stack levels required when called: 6
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_POST
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text48
  7763  002A7A                     __ptext48:
  7764                           	callstack 0
  7765  002A7A                     _Event_setId:
  7766                           	callstack 21
  7767  002A7A                     
  7768                           ;xf/event.c: 43: void Event_setId(Event* me, evIDT eventID);xf/event.c: 44: {;xf/event.c
      +                          : 45:     me->id = eventID;
  7769  002A7A  0060  F183  FFD9   	movff	Event_setId@me,fsr2l
  7770  002A80  0060  F187  FFDA   	movff	Event_setId@me+1,fsr2h
  7771  002A86  0060  F18B  FFDF   	movff	Event_setId@eventID,indf2
  7772  002A8C  0012               	return		;funcret
  7773  002A8E                     __end_of_Event_setId:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _Event_setData *****************
  7777 ;; Defined at:
  7778 ;;		line 13 in file "xf/event.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  me              2    0[BANK0 ] PTR struct Event_
  7781 ;;		 -> POST@ev(15), 
  7782 ;;  data            8    2[BANK0 ] long long 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7794 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;Total ram usage:       10 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; Hardware stack levels required when called: 6
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_POST
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text49
  7809  002732                     __ptext49:
  7810                           	callstack 0
  7811  002732                     _Event_setData:
  7812                           	callstack 21
  7813  002732                     
  7814                           ;xf/event.c: 13: void Event_setData(Event* me, int64_t data);xf/event.c: 14: {;xf/event.
      +                          c: 15:     me->data = data;
  7815  002732  0100               	movlb	0	; () banked
  7816  002734  EE20 F007          	lfsr	2,7
  7817  002738  5160               	movf	Event_setData@me& (0+255),w,b
  7818  00273A  26D9               	addwf	fsr2l,f,c
  7819  00273C  5161               	movf	(Event_setData@me+1)& (0+255),w,b
  7820  00273E  22DA               	addwfc	fsr2h,f,c
  7821  002740  0060  F18B  FFDE   	movff	Event_setData@data,postinc2
  7822  002746  0060  F18F  FFDE   	movff	Event_setData@data+1,postinc2
  7823  00274C  0060  F193  FFDE   	movff	Event_setData@data+2,postinc2
  7824  002752  0060  F197  FFDE   	movff	Event_setData@data+3,postinc2
  7825  002758  0060  F19B  FFDE   	movff	Event_setData@data+4,postinc2
  7826  00275E  0060  F19F  FFDE   	movff	Event_setData@data+5,postinc2
  7827  002764  0060  F1A3  FFDE   	movff	Event_setData@data+6,postinc2
  7828  00276A  0060  F1A7  FFDE   	movff	Event_setData@data+7,postinc2
  7829  002770                     
  7830                           ; BSR set to: 0
  7831  002770  0012               	return		;funcret
  7832  002772                     __end_of_Event_setData:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _Event_init *****************
  7836 ;; Defined at:
  7837 ;;		line 4 in file "xf/event.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  me              2    6[BANK0 ] PTR struct Event_
  7840 ;;		 -> POST@ev(15), theXF.timerList(136), theXF.eventQueue(180), theXF(318), 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;Total ram usage:        2 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; Hardware stack levels required when called: 6
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_XF_init
  7863 ;;		_POST
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text50
  7868  002450                     __ptext50:
  7869                           	callstack 0
  7870  002450                     _Event_init:
  7871                           	callstack 23
  7872  002450                     
  7873                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
  7874  002450  0060  F19B  FFD9   	movff	Event_init@me,fsr2l
  7875  002456  0060  F19F  FFDA   	movff	Event_init@me+1,fsr2h
  7876  00245C  0E00               	movlw	0
  7877  00245E  6EDF               	movwf	indf2,c
  7878  002460                     
  7879                           ;xf/event.c: 7:     me->delay = 0;
  7880  002460  0100               	movlb	0	; () banked
  7881  002462  EE20 F005          	lfsr	2,5
  7882  002466  5166               	movf	Event_init@me& (0+255),w,b
  7883  002468  26D9               	addwf	fsr2l,f,c
  7884  00246A  5167               	movf	(Event_init@me+1)& (0+255),w,b
  7885  00246C  22DA               	addwfc	fsr2h,f,c
  7886  00246E  0E00               	movlw	0
  7887  002470  6EDE               	movwf	postinc2,c
  7888  002472  0E00               	movlw	0
  7889  002474  6EDD               	movwf	postdec2,c
  7890  002476                     
  7891                           ; BSR set to: 0
  7892                           ;xf/event.c: 8:     me->target = ((void*)(0));
  7893  002476  EE20 F003          	lfsr	2,3
  7894  00247A  5166               	movf	Event_init@me& (0+255),w,b
  7895  00247C  26D9               	addwf	fsr2l,f,c
  7896  00247E  5167               	movf	(Event_init@me+1)& (0+255),w,b
  7897  002480  22DA               	addwfc	fsr2h,f,c
  7898  002482  0E00               	movlw	0
  7899  002484  6EDE               	movwf	postinc2,c
  7900  002486  0E00               	movlw	0
  7901  002488  6EDD               	movwf	postdec2,c
  7902  00248A                     
  7903                           ; BSR set to: 0
  7904                           ;xf/event.c: 9:     me->data = 0x0;
  7905  00248A  EE20 F007          	lfsr	2,7
  7906  00248E  5166               	movf	Event_init@me& (0+255),w,b
  7907  002490  26D9               	addwf	fsr2l,f,c
  7908  002492  5167               	movf	(Event_init@me+1)& (0+255),w,b
  7909  002494  22DA               	addwfc	fsr2h,f,c
  7910  002496  0E07               	movlw	7
  7911  002498                     u1521:
  7912  002498  6ADE               	clrf	postinc2,c
  7913  00249A  06E8               	decf	wreg,f,c
  7914  00249C  E2FD               	bc	u1521
  7915  00249E                     
  7916                           ; BSR set to: 0
  7917                           ;xf/event.c: 10:     me->processEvent = ((void*)(0));
  7918  00249E  EE20 F001          	lfsr	2,1
  7919  0024A2  5166               	movf	Event_init@me& (0+255),w,b
  7920  0024A4  26D9               	addwf	fsr2l,f,c
  7921  0024A6  5167               	movf	(Event_init@me+1)& (0+255),w,b
  7922  0024A8  22DA               	addwfc	fsr2h,f,c
  7923  0024AA  0E00               	movlw	0
  7924  0024AC  6EDE               	movwf	postinc2,c
  7925  0024AE  0E00               	movlw	0
  7926  0024B0  6EDD               	movwf	postdec2,c
  7927  0024B2                     
  7928                           ; BSR set to: 0
  7929  0024B2  0012               	return		;funcret
  7930  0024B4                     __end_of_Event_init:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function _Button_read *****************
  7934 ;; Defined at:
  7935 ;;		line 22 in file "board/button/button.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  me              2    0[BANK0 ] PTR struct Button_
  7938 ;;		 -> theFactory(29), 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  value           1    4[BANK0 ] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      unsigned char 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;Total ram usage:        5 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 6
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_ButtonSM_processEvent
  7961 ;;		_ButtonSM_startBehaviour
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text51
  7966  001B58                     __ptext51:
  7967                           	callstack 0
  7968  001B58                     _Button_read:
  7969                           	callstack 22
  7970  001B58                     
  7971                           ;board/button/button.c: 22: uint8_t Button_read(Button* me);board/button/button.c: 23: {
      +                          ;board/button/button.c: 24:     uint8_t value = 0;
  7972  001B58  0E00               	movlw	0
  7973  001B5A  0100               	movlb	0	; () banked
  7974  001B5C  6F64               	movwf	Button_read@value& (0+255),b
  7975                           
  7976                           ;board/button/button.c: 25:     switch (me->id)
  7977  001B5E  EFB7  F00D         	goto	l4043
  7978  001B62                     l4039:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;board/button/button.c: 28:             value = PORTCbits.RC3;
  7982  001B62  0E00               	movlw	0
  7983  001B64  B6CC               	btfsc	204,3,c	;volatile
  7984  001B66  0E01               	movlw	1
  7985  001B68  6F64               	movwf	Button_read@value& (0+255),b
  7986                           
  7987                           ;board/button/button.c: 29:         break;
  7988  001B6A  EFF2  F00D         	goto	l4045
  7989  001B6E                     l4043:
  7990                           
  7991                           ; BSR set to: 0
  7992  001B6E  0060  F183  FFD9   	movff	Button_read@me,fsr2l
  7993  001B74  0060  F187  FFDA   	movff	Button_read@me+1,fsr2h
  7994  001B7A  50DF               	movf	indf2,w,c
  7995  001B7C  6F62               	movwf	??_Button_read& (0+255),b
  7996  001B7E  6B63               	clrf	(??_Button_read+1)& (0+255),b
  7997                           
  7998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7999                           ; Switch size 1, requested type "simple"
  8000                           ; Number of cases is 1, Range of values is 0 to 0
  8001                           ; switch strategies available:
  8002                           ; Name         Instructions Cycles
  8003                           ; simple_byte            4     3 (average)
  8004                           ;	Chosen strategy is simple_byte
  8005  001B80  5163               	movf	(??_Button_read+1)& (0+255),w,b
  8006  001B82  0A00               	xorlw	0	; case 0
  8007  001B84  B4D8               	btfsc	status,2,c
  8008  001B86  EFC7  F00D         	goto	l5533
  8009  001B8A  EFF2  F00D         	goto	l4045
  8010  001B8E                     l5533:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ; Switch size 1, requested type "simple"
  8014                           ; Number of cases is 10, Range of values is 1 to 10
  8015                           ; switch strategies available:
  8016                           ; Name         Instructions Cycles
  8017                           ; simple_byte           31    16 (average)
  8018                           ;	Chosen strategy is simple_byte
  8019  001B8E  5162               	movf	??_Button_read& (0+255),w,b
  8020  001B90  0A01               	xorlw	1	; case 1
  8021  001B92  B4D8               	btfsc	status,2,c
  8022  001B94  EFB1  F00D         	goto	l4039
  8023  001B98  0A03               	xorlw	3	; case 2
  8024  001B9A  B4D8               	btfsc	status,2,c
  8025  001B9C  EFF2  F00D         	goto	l4045
  8026  001BA0  0A01               	xorlw	1	; case 3
  8027  001BA2  B4D8               	btfsc	status,2,c
  8028  001BA4  EFF2  F00D         	goto	l4045
  8029  001BA8  0A07               	xorlw	7	; case 4
  8030  001BAA  B4D8               	btfsc	status,2,c
  8031  001BAC  EFF2  F00D         	goto	l4045
  8032  001BB0  0A01               	xorlw	1	; case 5
  8033  001BB2  B4D8               	btfsc	status,2,c
  8034  001BB4  EFF2  F00D         	goto	l4045
  8035  001BB8  0A03               	xorlw	3	; case 6
  8036  001BBA  B4D8               	btfsc	status,2,c
  8037  001BBC  EFF2  F00D         	goto	l4045
  8038  001BC0  0A01               	xorlw	1	; case 7
  8039  001BC2  B4D8               	btfsc	status,2,c
  8040  001BC4  EFF2  F00D         	goto	l4045
  8041  001BC8  0A0F               	xorlw	15	; case 8
  8042  001BCA  B4D8               	btfsc	status,2,c
  8043  001BCC  EFF2  F00D         	goto	l4045
  8044  001BD0  0A01               	xorlw	1	; case 9
  8045  001BD2  B4D8               	btfsc	status,2,c
  8046  001BD4  EFF2  F00D         	goto	l4045
  8047  001BD8  0A03               	xorlw	3	; case 10
  8048  001BDA  B4D8               	btfsc	status,2,c
  8049  001BDC  EFF2  F00D         	goto	l4045
  8050  001BE0  EFF2  F00D         	goto	l4045
  8051  001BE4                     l4045:
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;board/button/button.c: 49:     if (me->isPullUp == 1)
  8055  001BE4  EE20 F001          	lfsr	2,1
  8056  001BE8  5160               	movf	Button_read@me& (0+255),w,b
  8057  001BEA  26D9               	addwf	fsr2l,f,c
  8058  001BEC  5161               	movf	(Button_read@me+1)& (0+255),w,b
  8059  001BEE  22DA               	addwfc	fsr2h,f,c
  8060  001BF0  04DE               	decf	postinc2,w,c
  8061  001BF2  A4D8               	btfss	status,2,c
  8062  001BF4  EFFE  F00D         	goto	u1761
  8063  001BF8  EF00  F00E         	goto	u1760
  8064  001BFC                     u1761:
  8065  001BFC  EF0B  F00E         	goto	l38
  8066  001C00                     u1760:
  8067  001C00                     
  8068                           ; BSR set to: 0
  8069                           ;board/button/button.c: 50:     {;board/button/button.c: 51:         value=value==0?1:0;
  8070  001C00  5164               	movf	Button_read@value& (0+255),w,b
  8071  001C02  B4D8               	btfsc	status,2,c
  8072  001C04  EF06  F00E         	goto	u1771
  8073  001C08  EF09  F00E         	goto	u1770
  8074  001C0C                     u1771:
  8075  001C0C  0E01               	movlw	1
  8076  001C0E  EF0A  F00E         	goto	u1780
  8077  001C12                     u1770:
  8078  001C12  0E00               	movlw	0
  8079  001C14                     u1780:
  8080  001C14  6F64               	movwf	Button_read@value& (0+255),b
  8081  001C16                     l38:
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;board/button/button.c: 53:     return value;
  8085  001C16  5164               	movf	Button_read@value& (0+255),w,b
  8086  001C18                     
  8087                           ; BSR set to: 0
  8088  001C18  0012               	return		;funcret
  8089  001C1A                     __end_of_Button_read:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _Factory_init *****************
  8093 ;; Defined at:
  8094 ;;		line 35 in file "factory/factory.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:        0 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 8
  8115 ;; This function calls:
  8116 ;;		_BLControl_init
  8117 ;;		_ButtonSM_init
  8118 ;;		_Button_init
  8119 ;;		_Button_initHW
  8120 ;;		_LED_init
  8121 ;;		_LED_initHW
  8122 ;;		_b
  8123 ;;		_blc
  8124 ;;		_bsm
  8125 ;;		_cc
  8126 ;;		_commControl_init
  8127 ;;		_l
  8128 ;; This function is called by:
  8129 ;;		_main
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text52
  8134  001F80                     __ptext52:
  8135                           	callstack 0
  8136  001F80                     _Factory_init:
  8137                           	callstack 22
  8138  001F80                     
  8139                           ;factory/factory.c: 37:     LED_init(l(),1);
  8140  001F80  EC68  F015         	call	_l	;wreg free
  8141  001F84  C060  F062         	movff	?_l,LED_init@me
  8142  001F88  C061  F063         	movff	?_l+1,LED_init@me+1
  8143  001F8C  0E01               	movlw	1
  8144  001F8E  0100               	movlb	0	; () banked
  8145  001F90  6F64               	movwf	LED_init@id& (0+255),b
  8146  001F92  EC47  F015         	call	_LED_init	;wreg free
  8147                           
  8148                           ;factory/factory.c: 38:     LED_initHW(l());
  8149  001F96  EC68  F015         	call	_l	;wreg free
  8150  001F9A  C060  F066         	movff	?_l,LED_initHW@me
  8151  001F9E  C061  F067         	movff	?_l+1,LED_initHW@me+1
  8152  001FA2  EC61  F015         	call	_LED_initHW	;wreg free
  8153                           
  8154                           ;factory/factory.c: 39:     Button_init(b(),1, 1);
  8155  001FA6  EC74  F015         	call	_b	;wreg free
  8156  001FAA  C060  F062         	movff	?_b,Button_init@me
  8157  001FAE  C061  F063         	movff	?_b+1,Button_init@me+1
  8158  001FB2  0E01               	movlw	1
  8159  001FB4  0100               	movlb	0	; () banked
  8160  001FB6  6F64               	movwf	Button_init@id& (0+255),b
  8161  001FB8  0E01               	movlw	1
  8162  001FBA  6F65               	movwf	Button_init@isPullUp& (0+255),b
  8163  001FBC  EC53  F014         	call	_Button_init	;wreg free
  8164  001FC0                     
  8165                           ;factory/factory.c: 40:     Button_initHW(b());
  8166  001FC0  EC74  F015         	call	_b	;wreg free
  8167  001FC4  C060  F062         	movff	?_b,Button_initHW@me
  8168  001FC8  C061  F063         	movff	?_b+1,Button_initHW@me+1
  8169  001FCC  ECA1  F015         	call	_Button_initHW	;wreg free
  8170  001FD0                     
  8171                           ;factory/factory.c: 41:     ButtonSM_init(bsm(),b());
  8172  001FD0  EC7A  F015         	call	_bsm	;wreg free
  8173  001FD4  C060  F062         	movff	?_bsm,ButtonSM_init@me
  8174  001FD8  C061  F063         	movff	?_bsm+1,ButtonSM_init@me+1
  8175  001FDC  EC74  F015         	call	_b	;wreg free
  8176  001FE0  C060  F064         	movff	?_b,ButtonSM_init@button
  8177  001FE4  C061  F065         	movff	?_b+1,ButtonSM_init@button+1
  8178  001FE8  EC5A  F012         	call	_ButtonSM_init	;wreg free
  8179                           
  8180                           ;factory/factory.c: 42:     BLControl_init(blc());
  8181  001FEC  EC80  F015         	call	_blc	;wreg free
  8182  001FF0  C060  F062         	movff	?_blc,BLControl_init@me
  8183  001FF4  C061  F063         	movff	?_blc+1,BLControl_init@me+1
  8184  001FF8  ECA2  F015         	call	_BLControl_init	;wreg free
  8185  001FFC                     
  8186                           ;factory/factory.c: 43:     commControl_init(cc());
  8187  001FFC  EC6E  F015         	call	_cc	;wreg free
  8188  002000  C060  F062         	movff	?_cc,commControl_init@me
  8189  002004  C061  F063         	movff	?_cc+1,commControl_init@me+1
  8190  002008  EC4B  F013         	call	_commControl_init	;wreg free
  8191  00200C  0012               	return		;funcret
  8192  00200E                     __end_of_Factory_init:
  8193                           	callstack 0
  8194                           
  8195 ;; *************** function _l *****************
  8196 ;; Defined at:
  8197 ;;		line 9 in file "factory/factory.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  2    0[BANK0 ] PTR struct LED_
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;Total ram usage:        2 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 6
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		_BLControl_onButton
  8222 ;;		_Factory_init
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text53
  8227  002AD0                     __ptext53:
  8228                           	callstack 0
  8229  002AD0                     _l:
  8230                           	callstack 21
  8231  002AD0                     
  8232                           ;factory/factory.c: 11:     return &theFactory.l_;
  8233  002AD0  0ED5               	movlw	low _theFactory
  8234  002AD2  0100               	movlb	0	; () banked
  8235  002AD4  6F60               	movwf	?_l& (0+255),b
  8236  002AD6  0E00               	movlw	high _theFactory
  8237  002AD8  6F61               	movwf	(?_l+1)& (0+255),b
  8238  002ADA                     
  8239                           ; BSR set to: 0
  8240  002ADA  0012               	return		;funcret
  8241  002ADC                     __end_of_l:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _commControl_init *****************
  8245 ;; Defined at:
  8246 ;;		line 17 in file "driveControl/commControl.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  me              2    2[BANK0 ] PTR struct CommControl_
  8249 ;;		 -> theFactory.cc_(18), theFactory(29), 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;		None
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  1    wreg      void 
  8254 ;; Registers used:
  8255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;Total ram usage:        2 bytes
  8266 ;; Hardware stack levels used: 1
  8267 ;; Hardware stack levels required when called: 6
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_Factory_init
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text54
  8276  002696                     __ptext54:
  8277                           	callstack 0
  8278  002696                     _commControl_init:
  8279                           	callstack 23
  8280  002696                     
  8281                           ;driveControl/commControl.c: 18:     me->commSM_State = ST_CSMINIT;
  8282  002696  0060  F18B  FFD9   	movff	commControl_init@me,fsr2l
  8283  00269C  0060  F18F  FFDA   	movff	commControl_init@me+1,fsr2h
  8284  0026A2  0E0A               	movlw	10
  8285  0026A4  6EDF               	movwf	indf2,c
  8286  0026A6                     
  8287                           ;driveControl/commControl.c: 19:     me->speedSM_State = ST_SSMINIT;
  8288  0026A6  0100               	movlb	0	; () banked
  8289  0026A8  EE20 F001          	lfsr	2,1
  8290  0026AC  5162               	movf	commControl_init@me& (0+255),w,b
  8291  0026AE  26D9               	addwf	fsr2l,f,c
  8292  0026B0  5163               	movf	(commControl_init@me+1)& (0+255),w,b
  8293  0026B2  22DA               	addwfc	fsr2h,f,c
  8294  0026B4  0E14               	movlw	20
  8295  0026B6  6EDF               	movwf	indf2,c
  8296  0026B8                     
  8297                           ; BSR set to: 0
  8298                           ;driveControl/commControl.c: 20:     me->aliveSM_State = ST_ASMINIT;
  8299  0026B8  EE20 F002          	lfsr	2,2
  8300  0026BC  5162               	movf	commControl_init@me& (0+255),w,b
  8301  0026BE  26D9               	addwf	fsr2l,f,c
  8302  0026C0  5163               	movf	(commControl_init@me+1)& (0+255),w,b
  8303  0026C2  22DA               	addwfc	fsr2h,f,c
  8304  0026C4  0E1E               	movlw	30
  8305  0026C6  6EDF               	movwf	indf2,c
  8306  0026C8                     
  8307                           ; BSR set to: 0
  8308                           ;driveControl/commControl.c: 22:     me->msg.frame.idType = 1;
  8309  0026C8  EE20 F003          	lfsr	2,3
  8310  0026CC  5162               	movf	commControl_init@me& (0+255),w,b
  8311  0026CE  26D9               	addwf	fsr2l,f,c
  8312  0026D0  5163               	movf	(commControl_init@me+1)& (0+255),w,b
  8313  0026D2  22DA               	addwfc	fsr2h,f,c
  8314  0026D4  0E01               	movlw	1
  8315  0026D6  6EDF               	movwf	indf2,c
  8316  0026D8                     
  8317                           ; BSR set to: 0
  8318                           ;driveControl/commControl.c: 23:     me->msg.frame.rtr = 0;
  8319  0026D8  EE20 F011          	lfsr	2,17
  8320  0026DC  5162               	movf	commControl_init@me& (0+255),w,b
  8321  0026DE  26D9               	addwf	fsr2l,f,c
  8322  0026E0  5163               	movf	(commControl_init@me+1)& (0+255),w,b
  8323  0026E2  22DA               	addwfc	fsr2h,f,c
  8324  0026E4  0E00               	movlw	0
  8325  0026E6  6EDF               	movwf	indf2,c
  8326  0026E8                     
  8327                           ; BSR set to: 0
  8328  0026E8  0012               	return		;funcret
  8329  0026EA                     __end_of_commControl_init:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function _cc *****************
  8333 ;; Defined at:
  8334 ;;		line 29 in file "factory/factory.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2    0[BANK0 ] PTR struct CommControl_
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;Total ram usage:        2 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 6
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_Factory_init
  8359 ;;		_Factory_start
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text55
  8364  002ADC                     __ptext55:
  8365                           	callstack 0
  8366  002ADC                     _cc:
  8367                           	callstack 23
  8368  002ADC                     
  8369                           ;factory/factory.c: 30:     return &theFactory.cc_;
  8370  002ADC  0EE0               	movlw	low (_theFactory+11)
  8371  002ADE  0100               	movlb	0	; () banked
  8372  002AE0  6F60               	movwf	?_cc& (0+255),b
  8373  002AE2  0E00               	movlw	high (_theFactory+11)
  8374  002AE4  6F61               	movwf	(?_cc+1)& (0+255),b
  8375  002AE6                     
  8376                           ; BSR set to: 0
  8377  002AE6  0012               	return		;funcret
  8378  002AE8                     __end_of_cc:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function _b *****************
  8382 ;; Defined at:
  8383 ;;		line 14 in file "factory/factory.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2    0[BANK0 ] PTR struct Button_
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        2 bytes
  8402 ;; Hardware stack levels used: 1
  8403 ;; Hardware stack levels required when called: 6
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_Factory_init
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text56
  8412  002AE8                     __ptext56:
  8413                           	callstack 0
  8414  002AE8                     _b:
  8415                           	callstack 23
  8416  002AE8                     
  8417                           ;factory/factory.c: 16:     return &theFactory.b_;
  8418  002AE8  0ED6               	movlw	low (_theFactory+1)
  8419  002AEA  0100               	movlb	0	; () banked
  8420  002AEC  6F60               	movwf	?_b& (0+255),b
  8421  002AEE  0E00               	movlw	high (_theFactory+1)
  8422  002AF0  6F61               	movwf	(?_b+1)& (0+255),b
  8423  002AF2                     
  8424                           ; BSR set to: 0
  8425  002AF2  0012               	return		;funcret
  8426  002AF4                     __end_of_b:
  8427                           	callstack 0
  8428                           
  8429 ;; *************** function _LED_initHW *****************
  8430 ;; Defined at:
  8431 ;;		line 13 in file "board/led/led.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  me              2    6[BANK0 ] PTR struct LED_
  8434 ;;		 -> theFactory.l_(1), theFactory(29), 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;Total ram usage:        2 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 7
  8453 ;; This function calls:
  8454 ;;		_LED_off
  8455 ;; This function is called by:
  8456 ;;		_Factory_init
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text57
  8461  002AC2                     __ptext57:
  8462                           	callstack 0
  8463  002AC2                     _LED_initHW:
  8464                           	callstack 22
  8465  002AC2                     
  8466                           ;board/led/led.c: 13: void LED_initHW(LED* me);board/led/led.c: 14: {;board/led/led.c: 1
      +                          5:     LED_off(me);
  8467  002AC2  C066  F062         	movff	LED_initHW@me,LED_off@me
  8468  002AC6  C067  F063         	movff	LED_initHW@me+1,LED_off@me+1
  8469  002ACA  ECD2  F010         	call	_LED_off	;wreg free
  8470  002ACE  0012               	return		;funcret
  8471  002AD0                     __end_of_LED_initHW:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _LED_off *****************
  8475 ;; Defined at:
  8476 ;;		line 63 in file "board/led/led.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  me              2    2[BANK0 ] PTR struct LED_
  8479 ;;		 -> theFactory.l_(1), theFactory(29), 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;Total ram usage:        4 bytes
  8496 ;; Hardware stack levels used: 1
  8497 ;; Hardware stack levels required when called: 6
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_BLControl_onButton
  8502 ;;		_LED_initHW
  8503 ;;		_LED_setState
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           	psect	text58
  8508  0021A4                     __ptext58:
  8509                           	callstack 0
  8510  0021A4                     _LED_off:
  8511                           	callstack 21
  8512  0021A4                     
  8513                           ;board/led/led.c: 63: void LED_off(LED* me);board/led/led.c: 64: {;board/led/led.c: 65: 
      +                              switch (me->id)
  8514  0021A4  EFD7  F010         	goto	l3851
  8515  0021A8                     l127:
  8516                           
  8517                           ; BSR set to: 0
  8518  0021A8  92BB               	bcf	187,1,c	;volatile
  8519  0021AA  EF13  F011         	goto	l139
  8520  0021AE                     l3851:
  8521  0021AE  0060  F18B  FFD9   	movff	LED_off@me,fsr2l
  8522  0021B4  0060  F18F  FFDA   	movff	LED_off@me+1,fsr2h
  8523  0021BA  50DF               	movf	indf2,w,c
  8524  0021BC  0100               	movlb	0	; () banked
  8525  0021BE  6F64               	movwf	??_LED_off& (0+255),b
  8526  0021C0  6B65               	clrf	(??_LED_off+1)& (0+255),b
  8527                           
  8528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8529                           ; Switch size 1, requested type "simple"
  8530                           ; Number of cases is 1, Range of values is 0 to 0
  8531                           ; switch strategies available:
  8532                           ; Name         Instructions Cycles
  8533                           ; simple_byte            4     3 (average)
  8534                           ;	Chosen strategy is simple_byte
  8535  0021C2  5165               	movf	(??_LED_off+1)& (0+255),w,b
  8536  0021C4  0A00               	xorlw	0	; case 0
  8537  0021C6  B4D8               	btfsc	status,2,c
  8538  0021C8  EFE8  F010         	goto	l5535
  8539  0021CC  EF13  F011         	goto	l139
  8540  0021D0                     l5535:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ; Switch size 1, requested type "simple"
  8544                           ; Number of cases is 10, Range of values is 1 to 10
  8545                           ; switch strategies available:
  8546                           ; Name         Instructions Cycles
  8547                           ; simple_byte           31    16 (average)
  8548                           ;	Chosen strategy is simple_byte
  8549  0021D0  5164               	movf	??_LED_off& (0+255),w,b
  8550  0021D2  0A01               	xorlw	1	; case 1
  8551  0021D4  B4D8               	btfsc	status,2,c
  8552  0021D6  EFD4  F010         	goto	l127
  8553  0021DA  0A03               	xorlw	3	; case 2
  8554  0021DC  B4D8               	btfsc	status,2,c
  8555  0021DE  EF13  F011         	goto	l139
  8556  0021E2  0A01               	xorlw	1	; case 3
  8557  0021E4  B4D8               	btfsc	status,2,c
  8558  0021E6  EF13  F011         	goto	l139
  8559  0021EA  0A07               	xorlw	7	; case 4
  8560  0021EC  B4D8               	btfsc	status,2,c
  8561  0021EE  EF13  F011         	goto	l139
  8562  0021F2  0A01               	xorlw	1	; case 5
  8563  0021F4  B4D8               	btfsc	status,2,c
  8564  0021F6  EF13  F011         	goto	l139
  8565  0021FA  0A03               	xorlw	3	; case 6
  8566  0021FC  B4D8               	btfsc	status,2,c
  8567  0021FE  EF13  F011         	goto	l139
  8568  002202  0A01               	xorlw	1	; case 7
  8569  002204  B4D8               	btfsc	status,2,c
  8570  002206  EF13  F011         	goto	l139
  8571  00220A  0A0F               	xorlw	15	; case 8
  8572  00220C  B4D8               	btfsc	status,2,c
  8573  00220E  EF13  F011         	goto	l139
  8574  002212  0A01               	xorlw	1	; case 9
  8575  002214  B4D8               	btfsc	status,2,c
  8576  002216  EF13  F011         	goto	l139
  8577  00221A  0A03               	xorlw	3	; case 10
  8578  00221C  B4D8               	btfsc	status,2,c
  8579  00221E  EF13  F011         	goto	l139
  8580  002222  EF13  F011         	goto	l139
  8581  002226                     l139:
  8582                           
  8583                           ; BSR set to: 0
  8584  002226  0012               	return		;funcret
  8585  002228                     __end_of_LED_off:
  8586                           	callstack 0
  8587                           
  8588 ;; *************** function _LED_init *****************
  8589 ;; Defined at:
  8590 ;;		line 4 in file "board/led/led.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  me              2    2[BANK0 ] PTR struct LED_
  8593 ;;		 -> theFactory.l_(1), theFactory(29), 
  8594 ;;  id              1    4[BANK0 ] unsigned char 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		fsr2l, fsr2h
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8606 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;Total ram usage:        3 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 6
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_Factory_init
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text59
  8621  002A8E                     __ptext59:
  8622                           	callstack 0
  8623  002A8E                     _LED_init:
  8624                           	callstack 23
  8625  002A8E                     
  8626                           ;board/led/led.c: 4: void LED_init(LED* me, uint8_t id);board/led/led.c: 5: {;board/led/
      +                          led.c: 6:     me->id = id;
  8627  002A8E  0060  F18B  FFD9   	movff	LED_init@me,fsr2l
  8628  002A94  0060  F18F  FFDA   	movff	LED_init@me+1,fsr2h
  8629  002A9A  0060  F193  FFDF   	movff	LED_init@id,indf2
  8630  002AA0  0012               	return		;funcret
  8631  002AA2                     __end_of_LED_init:
  8632                           	callstack 0
  8633                           
  8634 ;; *************** function _Button_initHW *****************
  8635 ;; Defined at:
  8636 ;;		line 15 in file "board/button/button.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  me              2    2[BANK0 ] PTR struct Button_
  8639 ;;		 -> theFactory.b_(2), theFactory(29), 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      void 
  8644 ;; Registers used:
  8645 ;;		None
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;Total ram usage:        2 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; Hardware stack levels required when called: 6
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_Factory_init
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text60
  8666  002B42                     __ptext60:
  8667                           	callstack 0
  8668  002B42                     _Button_initHW:
  8669                           	callstack 23
  8670  002B42  0012               	return		;funcret
  8671  002B44                     __end_of_Button_initHW:
  8672                           	callstack 0
  8673                           
  8674 ;; *************** function _Button_init *****************
  8675 ;; Defined at:
  8676 ;;		line 5 in file "board/button/button.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  me              2    2[BANK0 ] PTR struct Button_
  8679 ;;		 -> theFactory.b_(2), theFactory(29), 
  8680 ;;  id              1    4[BANK0 ] unsigned char 
  8681 ;;  isPullUp        1    5[BANK0 ] _Bool 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  1    wreg      void 
  8686 ;; Registers used:
  8687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;Total ram usage:        4 bytes
  8698 ;; Hardware stack levels used: 1
  8699 ;; Hardware stack levels required when called: 6
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_Factory_init
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text61
  8708  0028A6                     __ptext61:
  8709                           	callstack 0
  8710  0028A6                     _Button_init:
  8711                           	callstack 23
  8712  0028A6                     
  8713                           ;board/button/button.c: 5: void Button_init(Button* me, uint8_t id, _Bool isPullUp);boar
      +                          d/button/button.c: 6: {;board/button/button.c: 7:     me->id = id;
  8714  0028A6  0060  F18B  FFD9   	movff	Button_init@me,fsr2l
  8715  0028AC  0060  F18F  FFDA   	movff	Button_init@me+1,fsr2h
  8716  0028B2  0060  F193  FFDF   	movff	Button_init@id,indf2
  8717  0028B8                     
  8718                           ;board/button/button.c: 8:     me->isPullUp = isPullUp;
  8719  0028B8  0100               	movlb	0	; () banked
  8720  0028BA  EE20 F001          	lfsr	2,1
  8721  0028BE  5162               	movf	Button_init@me& (0+255),w,b
  8722  0028C0  26D9               	addwf	fsr2l,f,c
  8723  0028C2  5163               	movf	(Button_init@me+1)& (0+255),w,b
  8724  0028C4  22DA               	addwfc	fsr2h,f,c
  8725  0028C6  0060  F197  FFDF   	movff	Button_init@isPullUp,indf2
  8726  0028CC                     
  8727                           ; BSR set to: 0
  8728  0028CC  0012               	return		;funcret
  8729  0028CE                     __end_of_Button_init:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _ButtonSM_init *****************
  8733 ;; Defined at:
  8734 ;;		line 6 in file "board/button/buttonsm.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  me              2    2[BANK0 ] PTR struct ButtonSM_
  8737 ;;		 -> theFactory.bsm_(10), theFactory(29), 
  8738 ;;  button          2    4[BANK0 ] PTR struct Button_
  8739 ;;		 -> theFactory.b_(2), theFactory(29), 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;Total ram usage:        4 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; Hardware stack levels required when called: 6
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_Factory_init
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text62
  8766  0024B4                     __ptext62:
  8767                           	callstack 0
  8768  0024B4                     _ButtonSM_init:
  8769                           	callstack 23
  8770  0024B4                     
  8771                           ;board/button/buttonsm.c: 6: void ButtonSM_init(ButtonSM* me, Button* button);board/butt
      +                          on/buttonsm.c: 7: {;board/button/buttonsm.c: 8:     me->state = ST_BSMINIT;
  8772  0024B4  0060  F18B  FFD9   	movff	ButtonSM_init@me,fsr2l
  8773  0024BA  0060  F18F  FFDA   	movff	ButtonSM_init@me+1,fsr2h
  8774  0024C0  0E00               	movlw	0
  8775  0024C2  6EDF               	movwf	indf2,c
  8776  0024C4                     
  8777                           ;board/button/buttonsm.c: 9:     me->button = button;
  8778  0024C4  0100               	movlb	0	; () banked
  8779  0024C6  EE20 F001          	lfsr	2,1
  8780  0024CA  5162               	movf	ButtonSM_init@me& (0+255),w,b
  8781  0024CC  26D9               	addwf	fsr2l,f,c
  8782  0024CE  5163               	movf	(ButtonSM_init@me+1)& (0+255),w,b
  8783  0024D0  22DA               	addwfc	fsr2h,f,c
  8784  0024D2  0060  F193  FFDE   	movff	ButtonSM_init@button,postinc2
  8785  0024D8  0060  F197  FFDD   	movff	ButtonSM_init@button+1,postdec2
  8786  0024DE                     
  8787                           ; BSR set to: 0
  8788                           ;board/button/buttonsm.c: 11:     me->actualState = ST_BSMINIT;
  8789  0024DE  EE20 F003          	lfsr	2,3
  8790  0024E2  5162               	movf	ButtonSM_init@me& (0+255),w,b
  8791  0024E4  26D9               	addwf	fsr2l,f,c
  8792  0024E6  5163               	movf	(ButtonSM_init@me+1)& (0+255),w,b
  8793  0024E8  22DA               	addwfc	fsr2h,f,c
  8794  0024EA  0E00               	movlw	0
  8795  0024EC  6EDF               	movwf	indf2,c
  8796  0024EE                     
  8797                           ; BSR set to: 0
  8798                           ;board/button/buttonsm.c: 12:     me->observer = ((void*)0);
  8799  0024EE  EE20 F006          	lfsr	2,6
  8800  0024F2  5162               	movf	ButtonSM_init@me& (0+255),w,b
  8801  0024F4  26D9               	addwf	fsr2l,f,c
  8802  0024F6  5163               	movf	(ButtonSM_init@me+1)& (0+255),w,b
  8803  0024F8  22DA               	addwfc	fsr2h,f,c
  8804  0024FA  0E00               	movlw	0
  8805  0024FC  6EDE               	movwf	postinc2,c
  8806  0024FE  0E00               	movlw	0
  8807  002500  6EDD               	movwf	postdec2,c
  8808  002502                     
  8809                           ; BSR set to: 0
  8810                           ;board/button/buttonsm.c: 13:     me->observerCB = ((void*)0);
  8811  002502  EE20 F004          	lfsr	2,4
  8812  002506  5162               	movf	ButtonSM_init@me& (0+255),w,b
  8813  002508  26D9               	addwf	fsr2l,f,c
  8814  00250A  5163               	movf	(ButtonSM_init@me+1)& (0+255),w,b
  8815  00250C  22DA               	addwfc	fsr2h,f,c
  8816  00250E  0E00               	movlw	0
  8817  002510  6EDE               	movwf	postinc2,c
  8818  002512  0E00               	movlw	0
  8819  002514  6EDD               	movwf	postdec2,c
  8820  002516                     
  8821                           ; BSR set to: 0
  8822  002516  0012               	return		;funcret
  8823  002518                     __end_of_ButtonSM_init:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _BLControl_init *****************
  8827 ;; Defined at:
  8828 ;;		line 6 in file "app/blcontrol.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  me              2    2[BANK0 ] PTR struct BLControl_
  8831 ;;		 -> theFactory.blc_(0), theFactory(29), 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		None
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8843 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8846 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;Total ram usage:        2 bytes
  8848 ;; Hardware stack levels used: 1
  8849 ;; Hardware stack levels required when called: 6
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_Factory_init
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text63
  8858  002B44                     __ptext63:
  8859                           	callstack 0
  8860  002B44                     _BLControl_init:
  8861                           	callstack 23
  8862  002B44  0012               	return		;funcret
  8863  002B46                     __end_of_BLControl_init:
  8864                           	callstack 0
  8865                           
  8866 ;; *************** function _Factory_build *****************
  8867 ;; Defined at:
  8868 ;;		line 48 in file "factory/factory.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;		None
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  1    wreg      void 
  8875 ;; Registers used:
  8876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8886 ;;Total ram usage:        0 bytes
  8887 ;; Hardware stack levels used: 1
  8888 ;; Hardware stack levels required when called: 7
  8889 ;; This function calls:
  8890 ;;		_ButtonSM_setObserver
  8891 ;;		_blc
  8892 ;;		_bsm
  8893 ;; This function is called by:
  8894 ;;		_main
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text64
  8899  0028CE                     __ptext64:
  8900                           	callstack 0
  8901  0028CE                     _Factory_build:
  8902                           	callstack 23
  8903  0028CE                     
  8904                           ;factory/factory.c: 50:     ButtonSM_setObserver(bsm(), blc(), &BLControl_onButton);
  8905  0028CE  EC7A  F015         	call	_bsm	;wreg free
  8906  0028D2  C060  F062         	movff	?_bsm,ButtonSM_setObserver@me
  8907  0028D6  C061  F063         	movff	?_bsm+1,ButtonSM_setObserver@me+1
  8908  0028DA  EC80  F015         	call	_blc	;wreg free
  8909  0028DE  C060  F064         	movff	?_blc,ButtonSM_setObserver@observer
  8910  0028E2  C061  F065         	movff	?_blc+1,ButtonSM_setObserver@observer+1
  8911  0028E6  0EEA               	movlw	low _BLControl_onButton
  8912  0028E8  0100               	movlb	0	; () banked
  8913  0028EA  6F66               	movwf	ButtonSM_setObserver@observerCB& (0+255),b
  8914  0028EC  0E26               	movlw	high _BLControl_onButton
  8915  0028EE  6F67               	movwf	(ButtonSM_setObserver@observerCB+1)& (0+255),b
  8916  0028F0  ECF2  F013         	call	_ButtonSM_setObserver	;wreg free
  8917  0028F4  0012               	return		;funcret
  8918  0028F6                     __end_of_Factory_build:
  8919                           	callstack 0
  8920                           
  8921 ;; *************** function _bsm *****************
  8922 ;; Defined at:
  8923 ;;		line 19 in file "factory/factory.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  2    0[BANK0 ] PTR struct ButtonSM_
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;Total ram usage:        2 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 6
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_Factory_init
  8948 ;;		_Factory_build
  8949 ;;		_Factory_start
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text65
  8954  002AF4                     __ptext65:
  8955                           	callstack 0
  8956  002AF4                     _bsm:
  8957                           	callstack 23
  8958  002AF4                     
  8959                           ;factory/factory.c: 21:     return &theFactory.bsm_;
  8960  002AF4  0ED8               	movlw	low (_theFactory+3)
  8961  002AF6  0100               	movlb	0	; () banked
  8962  002AF8  6F60               	movwf	?_bsm& (0+255),b
  8963  002AFA  0E00               	movlw	high (_theFactory+3)
  8964  002AFC  6F61               	movwf	(?_bsm+1)& (0+255),b
  8965  002AFE                     
  8966                           ; BSR set to: 0
  8967  002AFE  0012               	return		;funcret
  8968  002B00                     __end_of_bsm:
  8969                           	callstack 0
  8970                           
  8971 ;; *************** function _blc *****************
  8972 ;; Defined at:
  8973 ;;		line 24 in file "factory/factory.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  2    0[BANK0 ] PTR struct BLControl_
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;Total ram usage:        2 bytes
  8992 ;; Hardware stack levels used: 1
  8993 ;; Hardware stack levels required when called: 6
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_Factory_init
  8998 ;;		_Factory_build
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           	psect	text66
  9003  002B00                     __ptext66:
  9004                           	callstack 0
  9005  002B00                     _blc:
  9006                           	callstack 23
  9007  002B00                     
  9008                           ;factory/factory.c: 26:     return &theFactory.blc_;
  9009  002B00  0EE0               	movlw	low (_theFactory+11)
  9010  002B02  0100               	movlb	0	; () banked
  9011  002B04  6F60               	movwf	?_blc& (0+255),b
  9012  002B06  0E00               	movlw	high (_theFactory+11)
  9013  002B08  6F61               	movwf	(?_blc+1)& (0+255),b
  9014  002B0A                     
  9015                           ; BSR set to: 0
  9016  002B0A  0012               	return		;funcret
  9017  002B0C                     __end_of_blc:
  9018                           	callstack 0
  9019                           
  9020 ;; *************** function _ButtonSM_setObserver *****************
  9021 ;; Defined at:
  9022 ;;		line 125 in file "board/button/buttonsm.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  me              2    2[BANK0 ] PTR struct ButtonSM_
  9025 ;;		 -> theFactory.bsm_(10), theFactory(29), 
  9026 ;;  observer        2    4[BANK0 ] PTR void 
  9027 ;;		 -> theFactory.blc_(0), theFactory(29), 
  9028 ;;  observerCB      2    6[BANK0 ] PTR FTN(PTR void ,unsign
  9029 ;;		 -> BLControl_onButton(1), 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9041 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;Total ram usage:        6 bytes
  9046 ;; Hardware stack levels used: 1
  9047 ;; Hardware stack levels required when called: 6
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_Factory_build
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text67
  9056  0027E4                     __ptext67:
  9057                           	callstack 0
  9058  0027E4                     _ButtonSM_setObserver:
  9059                           	callstack 23
  9060  0027E4                     
  9061                           ;board/button/buttonsm.c: 125: void ButtonSM_setObserver(ButtonSM* me, void* observer, b
      +                          uttonObserverCBT observerCB);board/button/buttonsm.c: 126: {;board/button/buttonsm.c: 12
      +                          7:     me->observer = observer;
  9062  0027E4  0100               	movlb	0	; () banked
  9063  0027E6  EE20 F006          	lfsr	2,6
  9064  0027EA  5162               	movf	ButtonSM_setObserver@me& (0+255),w,b
  9065  0027EC  26D9               	addwf	fsr2l,f,c
  9066  0027EE  5163               	movf	(ButtonSM_setObserver@me+1)& (0+255),w,b
  9067  0027F0  22DA               	addwfc	fsr2h,f,c
  9068  0027F2  0060  F193  FFDE   	movff	ButtonSM_setObserver@observer,postinc2
  9069  0027F8  0060  F197  FFDD   	movff	ButtonSM_setObserver@observer+1,postdec2
  9070                           
  9071                           ;board/button/buttonsm.c: 128:     me->observerCB = observerCB;
  9072  0027FE  EE20 F004          	lfsr	2,4
  9073  002802  5162               	movf	ButtonSM_setObserver@me& (0+255),w,b
  9074  002804  26D9               	addwf	fsr2l,f,c
  9075  002806  5163               	movf	(ButtonSM_setObserver@me+1)& (0+255),w,b
  9076  002808  22DA               	addwfc	fsr2h,f,c
  9077  00280A  0060  F19B  FFDE   	movff	ButtonSM_setObserver@observerCB,postinc2
  9078  002810  0060  F19F  FFDD   	movff	ButtonSM_setObserver@observerCB+1,postdec2
  9079  002816                     
  9080                           ; BSR set to: 0
  9081  002816  0012               	return		;funcret
  9082  002818                     __end_of_ButtonSM_setObserver:
  9083                           	callstack 0
  9084                           
  9085 ;; *************** function _INTERRUPT_InterruptManager *****************
  9086 ;; Defined at:
  9087 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;Total ram usage:        2 bytes
  9106 ;; Hardware stack levels used: 1
  9107 ;; Hardware stack levels required when called: 5
  9108 ;; This function calls:
  9109 ;;		_TMR0_ISR
  9110 ;; This function is called by:
  9111 ;;		Interrupt level 2
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text68
  9116  00263A                     __ptext68:
  9117                           	callstack 0
  9118  00263A                     _INTERRUPT_InterruptManager:
  9119                           	callstack 18
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;incstack = 0
  9123  00263A  006F FFE8  F02F    	movff	pclath,??_INTERRUPT_InterruptManager
  9124  002640  006F FFEC  F030    	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9125  002646                     
  9126                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE5bits.WAKIE == 1 && PIR5bits.WAK
      +                          IF == 1)
  9127  002646  0139               	movlb	57	; () banked
  9128  002648  AD95               	btfss	149,6,b	;volatile
  9129  00264A  EF29  F013         	goto	i2u240_41
  9130  00264E  EF2B  F013         	goto	i2u240_40
  9131  002652                     i2u240_41:
  9132  002652  EF34  F013         	goto	i2l366
  9133  002656                     i2u240_40:
  9134  002656                     
  9135                           ; BSR set to: 57
  9136  002656  ADA5               	btfss	165,6,b	;volatile
  9137  002658  EF30  F013         	goto	i2u241_41
  9138  00265C  EF32  F013         	goto	i2u241_40
  9139  002660                     i2u241_41:
  9140  002660  EF34  F013         	goto	i2l366
  9141  002664                     i2u241_40:
  9142  002664  EF44  F013         	goto	i2l370
  9143  002668                     i2l366:
  9144                           
  9145                           ; BSR set to: 57
  9146  002668  AF93               	btfss	147,7,b	;volatile
  9147  00266A  EF39  F013         	goto	i2u242_41
  9148  00266E  EF3B  F013         	goto	i2u242_40
  9149  002672                     i2u242_41:
  9150  002672  EF44  F013         	goto	i2l370
  9151  002676                     i2u242_40:
  9152  002676                     
  9153                           ; BSR set to: 57
  9154  002676  AFA3               	btfss	163,7,b	;volatile
  9155  002678  EF40  F013         	goto	i2u243_41
  9156  00267C  EF42  F013         	goto	i2u243_40
  9157  002680                     i2u243_41:
  9158  002680  EF44  F013         	goto	i2l370
  9159  002684                     i2u243_40:
  9160  002684                     
  9161                           ; BSR set to: 57
  9162                           ;mcc_generated_files/interrupt_manager.c: 67:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 68:         TMR0_ISR();
  9163  002684  EC0C  F014         	call	_TMR0_ISR	;wreg free
  9164  002688                     i2l370:
  9165  002688  0060  F0C3  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9166  00268E  0060  F0BF  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
  9167  002694  0011               	retfie		f
  9168  002696                     __end_of_INTERRUPT_InterruptManager:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _TMR0_ISR *****************
  9172 ;; Defined at:
  9173 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 4
  9194 ;; This function calls:
  9195 ;;		Absolute function
  9196 ;;		_TMR0_DefaultInterruptHandler
  9197 ;;		_XF_decrementAndQueueTimers
  9198 ;; This function is called by:
  9199 ;;		_INTERRUPT_InterruptManager
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text69
  9204  002818                     __ptext69:
  9205                           	callstack 0
  9206  002818                     _TMR0_ISR:
  9207                           	callstack 18
  9208  002818                     
  9209                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
  9210  002818  0139               	movlb	57	; () banked
  9211  00281A  9FA3               	bcf	163,7,b	;volatile
  9212  00281C                     
  9213                           ; BSR set to: 57
  9214                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  9215  00281C  5031               	movf	_TMR0_InterruptHandler^0,w,c
  9216  00281E  1032               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  9217  002820  B4D8               	btfsc	status,2,c
  9218  002822  EF15  F014         	goto	i2u229_41
  9219  002826  EF17  F014         	goto	i2u229_40
  9220  00282A                     i2u229_41:
  9221  00282A  EF24  F014         	goto	i2l412
  9222  00282E                     i2u229_40:
  9223  00282E                     
  9224                           ; BSR set to: 57
  9225                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  9226  00282E  D802               	call	i2u230_48
  9227  002830  EF24  F014         	goto	i2u230_49
  9228  002834                     i2u230_48:
  9229  002834  0005               	push	
  9230  002836  6EFA               	movwf	pclath,c
  9231  002838  5031               	movf	_TMR0_InterruptHandler^0,w,c
  9232  00283A  6EFD               	movwf	tosl,c
  9233  00283C  5032               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  9234  00283E  6EFE               	movwf	tosh,c
  9235  002840  50F8               	movf	tblptru,w,c
  9236  002842  6EFF               	movwf	tosu,c
  9237  002844  50FA               	movf	pclath,w,c
  9238  002846  0012               	return		;indir
  9239  002848                     i2u230_49:
  9240  002848                     i2l412:
  9241  002848  0012               	return		;funcret
  9242  00284A                     __end_of_TMR0_ISR:
  9243                           	callstack 0
  9244                           
  9245 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9246 ;; Defined at:
  9247 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		None
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;Total ram usage:        0 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_TMR0_Initialize
  9271 ;;		_TMR0_ISR
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text70
  9276  002B46                     __ptext70:
  9277                           	callstack 0
  9278  002B46                     _TMR0_DefaultInterruptHandler:
  9279                           	callstack 21
  9280  002B46  0012               	return		;funcret
  9281  002B48                     __end_of_TMR0_DefaultInterruptHandler:
  9282                           	callstack 0
  9283                           
  9284 ;; *************** function _XF_decrementAndQueueTimers *****************
  9285 ;; Defined at:
  9286 ;;		line 200 in file "xf/xf.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;		None
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;  dummy           1   44[COMRAM] unsigned char 
  9291 ;;  i               1   45[COMRAM] unsigned char 
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      void 
  9294 ;; Registers used:
  9295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;Total ram usage:        4 bytes
  9306 ;; Hardware stack levels used: 1
  9307 ;; Hardware stack levels required when called: 3
  9308 ;; This function calls:
  9309 ;;		_XF_unscheduleTimer
  9310 ;;		i2_XF_pushEvent
  9311 ;; This function is called by:
  9312 ;;		_main
  9313 ;;		_TMR0_ISR
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           	psect	text71
  9318  0019B8                     __ptext71:
  9319                           	callstack 0
  9320  0019B8                     _XF_decrementAndQueueTimers:
  9321                           	callstack 18
  9322  0019B8                     
  9323                           ;xf/xf.c: 202:     uint8_t i;;xf/xf.c: 203:     for (i=0; i<8; i++)
  9324  0019B8  0E00               	movlw	0
  9325  0019BA  6E2E               	movwf	XF_decrementAndQueueTimers@i^0,c
  9326  0019BC                     i2l4647:
  9327                           
  9328                           ;xf/xf.c: 204:     {;xf/xf.c: 205:         if (theXF.timerList[i].ev.id != 0)
  9329  0019BC  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9330  0019BE  0D11               	mullw	17
  9331  0019C0  0EFA               	movlw	low (_theXF+2)
  9332  0019C2  24F3               	addwf	243,w,c
  9333  0019C4  6ED9               	movwf	fsr2l,c
  9334  0019C6  0E00               	movlw	high (_theXF+2)
  9335  0019C8  20F4               	addwfc	prodh,w,c
  9336  0019CA  6EDA               	movwf	fsr2h,c
  9337  0019CC  50DF               	movf	indf2,w,c
  9338  0019CE  B4D8               	btfsc	status,2,c
  9339  0019D0  EFEC  F00C         	goto	i2u224_41
  9340  0019D4  EFEE  F00C         	goto	i2u224_40
  9341  0019D8                     i2u224_41:
  9342  0019D8  EF3E  F00D         	goto	i2l4657
  9343  0019DC                     i2u224_40:
  9344  0019DC                     
  9345                           ;xf/xf.c: 206:         {;xf/xf.c: 207:             theXF.timerList[i].tm-=10;
  9346  0019DC  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9347  0019DE  0D11               	mullw	17
  9348  0019E0  0EF8               	movlw	low _theXF
  9349  0019E2  24F3               	addwf	243,w,c
  9350  0019E4  6ED9               	movwf	fsr2l,c
  9351  0019E6  0E00               	movlw	high _theXF
  9352  0019E8  20F4               	addwfc	prodh,w,c
  9353  0019EA  6EDA               	movwf	fsr2h,c
  9354  0019EC  0E0A               	movlw	10
  9355  0019EE  5EDE               	subwf	postinc2,f,c
  9356  0019F0  0E00               	movlw	0
  9357  0019F2  5ADD               	subwfb	postdec2,f,c
  9358                           
  9359                           ;xf/xf.c: 208:             if (theXF.timerList[i].tm ==0)
  9360  0019F4  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9361  0019F6  0D11               	mullw	17
  9362  0019F8  0EF8               	movlw	low _theXF
  9363  0019FA  24F3               	addwf	243,w,c
  9364  0019FC  6ED9               	movwf	fsr2l,c
  9365  0019FE  0E00               	movlw	high _theXF
  9366  001A00  20F4               	addwfc	prodh,w,c
  9367  001A02  6EDA               	movwf	fsr2h,c
  9368  001A04  50DE               	movf	postinc2,w,c
  9369  001A06  10DE               	iorwf	postinc2,w,c
  9370  001A08  A4D8               	btfss	status,2,c
  9371  001A0A  EF09  F00D         	goto	i2u225_41
  9372  001A0E  EF0B  F00D         	goto	i2u225_40
  9373  001A12                     i2u225_41:
  9374  001A12  EF3E  F00D         	goto	i2l4657
  9375  001A16                     i2u225_40:
  9376  001A16                     
  9377                           ;xf/xf.c: 209:             {;xf/xf.c: 210:                 uint8_t dummy;;xf/xf.c: 211: 
      +                                          if (XF_pushEvent(theXF.timerList[i].ev, 1, &dummy) == 1)
  9378  001A16  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9379  001A18  0D11               	mullw	17
  9380  001A1A  0EFA               	movlw	low (_theXF+2)
  9381  001A1C  24F3               	addwf	243,w,c
  9382  001A1E  6ED9               	movwf	fsr2l,c
  9383  001A20  0E00               	movlw	high (_theXF+2)
  9384  001A22  20F4               	addwfc	prodh,w,c
  9385  001A24  6EDA               	movwf	fsr2h,c
  9386  001A26  EE00  F015         	lfsr	0,i2XF_pushEvent@ev
  9387  001A2A  0E0E               	movlw	14
  9388  001A2C                     i2u226_41:
  9389  001A2C  006F FF6F FFEB     	movff	plusw2,plusw0
  9390  001A32  06E8               	decf	wreg,f,c
  9391  001A34  E2FB               	bc	i2u226_41
  9392  001A36  0E01               	movlw	1
  9393  001A38  6E24               	movwf	i2XF_pushEvent@inISR^0,c
  9394  001A3A  0E2D               	movlw	low XF_decrementAndQueueTimers@dummy
  9395  001A3C  6E25               	movwf	i2XF_pushEvent@tmid^0,c
  9396  001A3E  0E00               	movlw	high XF_decrementAndQueueTimers@dummy
  9397  001A40  6E26               	movwf	(i2XF_pushEvent@tmid+1)^0,c
  9398  001A42  ECF3  F00B         	call	i2_XF_pushEvent	;wreg free
  9399  001A46  06E8               	decf	wreg,f,c
  9400  001A48  A4D8               	btfss	status,2,c
  9401  001A4A  EF29  F00D         	goto	i2u227_41
  9402  001A4E  EF2B  F00D         	goto	i2u227_40
  9403  001A52                     i2u227_41:
  9404  001A52  EF32  F00D         	goto	i2l4655
  9405  001A56                     i2u227_40:
  9406  001A56                     
  9407                           ;xf/xf.c: 212:                 {;xf/xf.c: 213:                   XF_unscheduleTimer(i, 1
      +                          );
  9408  001A56  0E01               	movlw	1
  9409  001A58  6E03               	movwf	XF_unscheduleTimer@inISR^0,c
  9410  001A5A  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9411  001A5C  ECB9  F013         	call	_XF_unscheduleTimer
  9412                           
  9413                           ;xf/xf.c: 214:                 }
  9414  001A60  EF3E  F00D         	goto	i2l4657
  9415  001A64                     i2l4655:
  9416                           
  9417                           ;xf/xf.c: 216:                 {;xf/xf.c: 217:                   theXF.timerList[i].tm=1
      +                          ;
  9418  001A64  502E               	movf	XF_decrementAndQueueTimers@i^0,w,c
  9419  001A66  0D11               	mullw	17
  9420  001A68  0EF8               	movlw	low _theXF
  9421  001A6A  24F3               	addwf	243,w,c
  9422  001A6C  6ED9               	movwf	fsr2l,c
  9423  001A6E  0E00               	movlw	high _theXF
  9424  001A70  20F4               	addwfc	prodh,w,c
  9425  001A72  6EDA               	movwf	fsr2h,c
  9426  001A74  0E01               	movlw	1
  9427  001A76  6EDE               	movwf	postinc2,c
  9428  001A78  0E00               	movlw	0
  9429  001A7A  6EDD               	movwf	postdec2,c
  9430  001A7C                     i2l4657:
  9431                           
  9432                           ;xf/xf.c: 221:     }
  9433  001A7C  2A2E               	incf	XF_decrementAndQueueTimers@i^0,f,c
  9434  001A7E  0E07               	movlw	7
  9435  001A80  642E               	cpfsgt	XF_decrementAndQueueTimers@i^0,c
  9436  001A82  EF45  F00D         	goto	i2u228_41
  9437  001A86  EF47  F00D         	goto	i2u228_40
  9438  001A8A                     i2u228_41:
  9439  001A8A  EFDE  F00C         	goto	i2l4647
  9440  001A8E                     i2u228_40:
  9441  001A8E  0012               	return		;funcret
  9442  001A90                     __end_of_XF_decrementAndQueueTimers:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function i2_XF_pushEvent *****************
  9446 ;; Defined at:
  9447 ;;		line 97 in file "xf/xf.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  ev             15   20[COMRAM] struct Event_
  9450 ;;  inISR           1   35[COMRAM] _Bool 
  9451 ;;  tmid            2   36[COMRAM] PTR unsigned char 
  9452 ;;		 -> POST@tmid(1), XF_decrementAndQueueTimers@dummy(1), 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  tm              2   39[COMRAM] unsigned short 
  9455 ;;  temp            1   41[COMRAM] unsigned char 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      _Bool 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9465 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;Total ram usage:       22 bytes
  9470 ;; Hardware stack levels used: 1
  9471 ;; Hardware stack levels required when called: 2
  9472 ;; This function calls:
  9473 ;;		i2_ENTERCRITICAL
  9474 ;;		i2_Event_getDelay
  9475 ;;		i2_Event_setDelay
  9476 ;;		i2_LEAVECRITICAL
  9477 ;;		i2_XF_scheduleTimer
  9478 ;;		i2___awmod
  9479 ;; This function is called by:
  9480 ;;		_XF_decrementAndQueueTimers
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text72
  9485  0017E6                     __ptext72:
  9486                           	callstack 0
  9487  0017E6                     i2_XF_pushEvent:
  9488                           	callstack 18
  9489  0017E6                     
  9490                           ;xf/xf.c: 97: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 98: {;xf
      +                          /xf.c: 99:     uint8_t temp;;xf/xf.c: 100:     uint16_t tm;;xf/xf.c: 101:     tm = Event
      +                          _getDelay(&ev);
  9491  0017E6  0E15               	movlw	low i2XF_pushEvent@ev
  9492  0017E8  6E01               	movwf	i2Event_getDelay@me^0,c
  9493  0017EA  0E00               	movlw	high i2XF_pushEvent@ev
  9494  0017EC  6E02               	movwf	(i2Event_getDelay@me+1)^0,c
  9495  0017EE  EC0E  F015         	call	i2_Event_getDelay	;wreg free
  9496  0017F2  C001  F028         	movff	?i2_Event_getDelay,i2XF_pushEvent@tm
  9497  0017F6  C002  F029         	movff	?i2_Event_getDelay+1,i2XF_pushEvent@tm+1
  9498  0017FA                     
  9499                           ;xf/xf.c: 102:     if ( tm > 0)
  9500  0017FA  5028               	movf	i2XF_pushEvent@tm^0,w,c
  9501  0017FC  1029               	iorwf	(i2XF_pushEvent@tm+1)^0,w,c
  9502  0017FE  B4D8               	btfsc	status,2,c
  9503  001800  EF04  F00C         	goto	i2u183_41
  9504  001804  EF06  F00C         	goto	i2u183_40
  9505  001808                     i2u183_41:
  9506  001808  EF2B  F00C         	goto	i2l4167
  9507  00180C                     i2u183_40:
  9508  00180C                     
  9509                           ;xf/xf.c: 103:     {;xf/xf.c: 104:         Event_setDelay(&ev,0);
  9510  00180C  0E15               	movlw	low i2XF_pushEvent@ev
  9511  00180E  6E01               	movwf	i2Event_setDelay@me^0,c
  9512  001810  0E00               	movlw	high i2XF_pushEvent@ev
  9513  001812  6E02               	movwf	(i2Event_setDelay@me+1)^0,c
  9514  001814  0E00               	movlw	0
  9515  001816  6E04               	movwf	(i2Event_setDelay@delay+1)^0,c
  9516  001818  0E00               	movlw	0
  9517  00181A  6E03               	movwf	i2Event_setDelay@delay^0,c
  9518  00181C  EC01  F015         	call	i2_Event_setDelay	;wreg free
  9519  001820                     
  9520                           ;xf/xf.c: 105:         *tmid = XF_scheduleTimer(tm, ev, inISR);
  9521  001820  C028  F002         	movff	i2XF_pushEvent@tm,i2XF_scheduleTimer@tm
  9522  001824  C029  F003         	movff	i2XF_pushEvent@tm+1,i2XF_scheduleTimer@tm+1
  9523  001828  EE20  F015         	lfsr	2,i2XF_pushEvent@ev
  9524  00182C  EE00  F004         	lfsr	0,i2XF_scheduleTimer@ev
  9525  001830  0E0E               	movlw	14
  9526  001832                     i2u184_41:
  9527  001832  006F FF6F FFEB     	movff	plusw2,plusw0
  9528  001838  06E8               	decf	wreg,f,c
  9529  00183A  E2FB               	bc	i2u184_41
  9530  00183C  C024  F013         	movff	i2XF_pushEvent@inISR,i2XF_scheduleTimer@inISR
  9531  001840  EC4D  F010         	call	i2_XF_scheduleTimer	;wreg free
  9532  001844  0060  F097  FFD9   	movff	i2XF_pushEvent@tmid,fsr2l
  9533  00184A  0060  F09B  FFDA   	movff	i2XF_pushEvent@tmid+1,fsr2h
  9534  001850  6EDF               	movwf	indf2,c
  9535                           
  9536                           ;xf/xf.c: 106:     }
  9537  001852  EF6B  F00C         	goto	i2l4185
  9538  001856                     i2l4167:
  9539                           
  9540                           ;xf/xf.c: 108:     {;xf/xf.c: 109:         ENTERCRITICAL(inISR);
  9541  001856  5024               	movf	i2XF_pushEvent@inISR^0,w,c
  9542  001858  EC32  F015         	call	i2_ENTERCRITICAL
  9543  00185C                     
  9544                           ;xf/xf.c: 111:         temp = (theXF.in+1) % (uint8_t)(sizeof(theXF.eventQueue) / sizeof
      +                          (Event));
  9545  00185C  0060  F8D0  F027   	movff	_theXF+316,??i2_XF_pushEvent
  9546  001862  0E01               	movlw	1
  9547  001864  2427               	addwf	??i2_XF_pushEvent^0,w,c
  9548  001866  6E01               	movwf	i2___awmod@dividend^0,c
  9549  001868  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9550  00186A  0E00               	movlw	0
  9551  00186C  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  9552  00186E  0E00               	movlw	0
  9553  001870  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9554  001872  0E0C               	movlw	12
  9555  001874  6E03               	movwf	i2___awmod@divisor^0,c
  9556  001876  EC1E  F00F         	call	i2___awmod	;wreg free
  9557  00187A  5001               	movf	?i2___awmod^0,w,c
  9558  00187C  6E2A               	movwf	i2XF_pushEvent@temp^0,c
  9559  00187E                     
  9560                           ;xf/xf.c: 112:         if(temp == theXF.out)
  9561  00187E  EE20  F235         	lfsr	2,_theXF+317
  9562  001882  502A               	movf	i2XF_pushEvent@temp^0,w,c
  9563  001884  18DE               	xorwf	postinc2,w,c
  9564  001886  A4D8               	btfss	status,2,c
  9565  001888  EF48  F00C         	goto	i2u185_41
  9566  00188C  EF4A  F00C         	goto	i2u185_40
  9567  001890                     i2u185_41:
  9568  001890  EF50  F00C         	goto	i2l4179
  9569  001894                     i2u185_40:
  9570  001894                     
  9571                           ;xf/xf.c: 113:         {;xf/xf.c: 114:           LEAVECRITICAL(inISR);
  9572  001894  5024               	movf	i2XF_pushEvent@inISR^0,w,c
  9573  001896  EC27  F015         	call	i2_LEAVECRITICAL
  9574  00189A                     
  9575                           ;xf/xf.c: 115:           return 0;
  9576  00189A  0E00               	movlw	0
  9577  00189C  EF6C  F00C         	goto	i2l1056
  9578  0018A0                     i2l4179:
  9579                           
  9580                           ;xf/xf.c: 117:         theXF.eventQueue[theXF.in] = ev;
  9581  0018A0  EE20  F015         	lfsr	2,i2XF_pushEvent@ev
  9582  0018A4  0060  F8D0  F027   	movff	_theXF+316,??i2_XF_pushEvent
  9583  0018AA  5027               	movf	??i2_XF_pushEvent^0,w,c
  9584  0018AC  0D0F               	mullw	15
  9585  0018AE  0E80               	movlw	low (_theXF+136)
  9586  0018B0  24F3               	addwf	243,w,c
  9587  0018B2  6EE1               	movwf	fsr1l,c
  9588  0018B4  0E01               	movlw	high (_theXF+136)
  9589  0018B6  20F4               	addwfc	prodh,w,c
  9590  0018B8  6EE2               	movwf	fsr1h,c
  9591  0018BA  0E0E               	movlw	14
  9592  0018BC                     i2u186_41:
  9593  0018BC  006F FF6F FFE3     	movff	plusw2,plusw1
  9594  0018C2  06E8               	decf	wreg,f,c
  9595  0018C4  E2FB               	bc	i2u186_41
  9596  0018C6                     
  9597                           ;xf/xf.c: 118:         theXF.in = temp;
  9598  0018C6  EE20  F234         	lfsr	2,_theXF+316
  9599  0018CA  0060  F0AB  FFDF   	movff	i2XF_pushEvent@temp,indf2
  9600  0018D0                     
  9601                           ;xf/xf.c: 119:         LEAVECRITICAL(inISR);
  9602  0018D0  5024               	movf	i2XF_pushEvent@inISR^0,w,c
  9603  0018D2  EC27  F015         	call	i2_LEAVECRITICAL
  9604  0018D6                     i2l4185:
  9605                           
  9606                           ;xf/xf.c: 121:     return 1;
  9607  0018D6  0E01               	movlw	1
  9608  0018D8                     i2l1056:
  9609  0018D8  0012               	return		;funcret
  9610  0018DA                     __end_ofi2_XF_pushEvent:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function i2___awmod *****************
  9614 ;; Defined at:
  9615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awmod.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  dividend        2    0[COMRAM] int 
  9618 ;;  divisor         2    2[COMRAM] int 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  sign            1    5[COMRAM] unsigned char 
  9621 ;;  counter         1    4[COMRAM] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2    0[COMRAM] int 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;Total ram usage:        6 bytes
  9636 ;; Hardware stack levels used: 1
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		i2_XF_pushEvent
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text73
  9645  001E3C                     __ptext73:
  9646                           	callstack 0
  9647  001E3C                     i2___awmod:
  9648                           	callstack 19
  9649  001E3C  0E00               	movlw	0
  9650  001E3E  6E06               	movwf	i2___awmod@sign^0,c
  9651  001E40  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  9652  001E42  EF27  F00F         	goto	i2u168_40
  9653  001E46  EF25  F00F         	goto	i2u168_41
  9654  001E4A                     i2u168_41:
  9655  001E4A  EF2D  F00F         	goto	i2l4001
  9656  001E4E                     i2u168_40:
  9657  001E4E  6C01               	negf	i2___awmod@dividend^0,c
  9658  001E50  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9659  001E52  B0D8               	btfsc	status,0,c
  9660  001E54  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9661  001E56  0E01               	movlw	1
  9662  001E58  6E06               	movwf	i2___awmod@sign^0,c
  9663  001E5A                     i2l4001:
  9664  001E5A  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  9665  001E5C  EF34  F00F         	goto	i2u169_40
  9666  001E60  EF32  F00F         	goto	i2u169_41
  9667  001E64                     i2u169_41:
  9668  001E64  EF38  F00F         	goto	i2l4005
  9669  001E68                     i2u169_40:
  9670  001E68  6C03               	negf	i2___awmod@divisor^0,c
  9671  001E6A  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9672  001E6C  B0D8               	btfsc	status,0,c
  9673  001E6E  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9674  001E70                     i2l4005:
  9675  001E70  5003               	movf	i2___awmod@divisor^0,w,c
  9676  001E72  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9677  001E74  B4D8               	btfsc	status,2,c
  9678  001E76  EF3F  F00F         	goto	i2u170_41
  9679  001E7A  EF41  F00F         	goto	i2u170_40
  9680  001E7E                     i2u170_41:
  9681  001E7E  EF65  F00F         	goto	i2l4021
  9682  001E82                     i2u170_40:
  9683  001E82  0E01               	movlw	1
  9684  001E84  6E05               	movwf	i2___awmod@counter^0,c
  9685  001E86  EF49  F00F         	goto	i2l4011
  9686  001E8A                     i2l4009:
  9687  001E8A  90D8               	bcf	status,0,c
  9688  001E8C  3603               	rlcf	i2___awmod@divisor^0,f,c
  9689  001E8E  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9690  001E90  2A05               	incf	i2___awmod@counter^0,f,c
  9691  001E92                     i2l4011:
  9692  001E92  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9693  001E94  EF4E  F00F         	goto	i2u171_41
  9694  001E98  EF50  F00F         	goto	i2u171_40
  9695  001E9C                     i2u171_41:
  9696  001E9C  EF45  F00F         	goto	i2l4009
  9697  001EA0                     i2u171_40:
  9698  001EA0                     i2l4013:
  9699  001EA0  5003               	movf	i2___awmod@divisor^0,w,c
  9700  001EA2  5C01               	subwf	i2___awmod@dividend^0,w,c
  9701  001EA4  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9702  001EA6  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9703  001EA8  A0D8               	btfss	status,0,c
  9704  001EAA  EF59  F00F         	goto	i2u172_41
  9705  001EAE  EF5B  F00F         	goto	i2u172_40
  9706  001EB2                     i2u172_41:
  9707  001EB2  EF5F  F00F         	goto	i2l4017
  9708  001EB6                     i2u172_40:
  9709  001EB6  5003               	movf	i2___awmod@divisor^0,w,c
  9710  001EB8  5E01               	subwf	i2___awmod@dividend^0,f,c
  9711  001EBA  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9712  001EBC  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9713  001EBE                     i2l4017:
  9714  001EBE  90D8               	bcf	status,0,c
  9715  001EC0  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9716  001EC2  3203               	rrcf	i2___awmod@divisor^0,f,c
  9717  001EC4  2E05               	decfsz	i2___awmod@counter^0,f,c
  9718  001EC6  EF50  F00F         	goto	i2l4013
  9719  001ECA                     i2l4021:
  9720  001ECA  5006               	movf	i2___awmod@sign^0,w,c
  9721  001ECC  B4D8               	btfsc	status,2,c
  9722  001ECE  EF6B  F00F         	goto	i2u173_41
  9723  001ED2  EF6D  F00F         	goto	i2u173_40
  9724  001ED6                     i2u173_41:
  9725  001ED6  EF71  F00F         	goto	i2l4025
  9726  001EDA                     i2u173_40:
  9727  001EDA  6C01               	negf	i2___awmod@dividend^0,c
  9728  001EDC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9729  001EDE  B0D8               	btfsc	status,0,c
  9730  001EE0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9731  001EE2                     i2l4025:
  9732  001EE2  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9733  001EE6  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9734  001EEA  0012               	return		;funcret
  9735  001EEC                     __end_ofi2___awmod:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function i2_XF_scheduleTimer *****************
  9739 ;; Defined at:
  9740 ;;		line 157 in file "xf/xf.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  tm              2    1[COMRAM] unsigned short 
  9743 ;;  ev             15    3[COMRAM] struct Event_
  9744 ;;  inISR           1   18[COMRAM] _Bool 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  i               1   19[COMRAM] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      unsigned char 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9756 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;Total ram usage:       19 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; Hardware stack levels required when called: 1
  9763 ;; This function calls:
  9764 ;;		i2_ENTERCRITICAL
  9765 ;;		i2_LEAVECRITICAL
  9766 ;; This function is called by:
  9767 ;;		i2_XF_pushEvent
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text74
  9772  00209A                     __ptext74:
  9773                           	callstack 0
  9774  00209A                     i2_XF_scheduleTimer:
  9775                           	callstack 18
  9776  00209A                     
  9777                           ;xf/xf.c: 157: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 158
      +                          : {;xf/xf.c: 159:     uint8_t i;;xf/xf.c: 161:     ENTERCRITICAL(inISR);
  9778  00209A  5013               	movf	i2XF_scheduleTimer@inISR^0,w,c
  9779  00209C  EC32  F015         	call	i2_ENTERCRITICAL
  9780  0020A0                     
  9781                           ;xf/xf.c: 162:     for (i=0; i<8; i++)
  9782  0020A0  0E00               	movlw	0
  9783  0020A2  6E14               	movwf	i2XF_scheduleTimer@i^0,c
  9784  0020A4                     i2l3977:
  9785                           
  9786                           ;xf/xf.c: 163:     {;xf/xf.c: 164:         if (theXF.timerList[i].ev.id == 0)
  9787  0020A4  5014               	movf	i2XF_scheduleTimer@i^0,w,c
  9788  0020A6  0D11               	mullw	17
  9789  0020A8  0EFA               	movlw	low (_theXF+2)
  9790  0020AA  24F3               	addwf	243,w,c
  9791  0020AC  6ED9               	movwf	fsr2l,c
  9792  0020AE  0E00               	movlw	high (_theXF+2)
  9793  0020B0  20F4               	addwfc	prodh,w,c
  9794  0020B2  6EDA               	movwf	fsr2h,c
  9795  0020B4  50DF               	movf	indf2,w,c
  9796  0020B6  A4D8               	btfss	status,2,c
  9797  0020B8  EF60  F010         	goto	i2u165_41
  9798  0020BC  EF62  F010         	goto	i2u165_40
  9799  0020C0                     i2u165_41:
  9800  0020C0  EF82  F010         	goto	i2l3983
  9801  0020C4                     i2u165_40:
  9802  0020C4                     
  9803                           ;xf/xf.c: 165:         {;xf/xf.c: 166:             theXF.timerList[i].tm = tm;
  9804  0020C4  5014               	movf	i2XF_scheduleTimer@i^0,w,c
  9805  0020C6  0D11               	mullw	17
  9806  0020C8  0EF8               	movlw	low _theXF
  9807  0020CA  24F3               	addwf	243,w,c
  9808  0020CC  6ED9               	movwf	fsr2l,c
  9809  0020CE  0E00               	movlw	high _theXF
  9810  0020D0  20F4               	addwfc	prodh,w,c
  9811  0020D2  6EDA               	movwf	fsr2h,c
  9812  0020D4  0060  F00B  FFDE   	movff	i2XF_scheduleTimer@tm,postinc2
  9813  0020DA  0060  F00F  FFDD   	movff	i2XF_scheduleTimer@tm+1,postdec2
  9814  0020E0                     
  9815                           ;xf/xf.c: 167:             theXF.timerList[i].ev = ev;
  9816  0020E0  EE20  F004         	lfsr	2,i2XF_scheduleTimer@ev
  9817  0020E4  5014               	movf	i2XF_scheduleTimer@i^0,w,c
  9818  0020E6  0D11               	mullw	17
  9819  0020E8  0EFA               	movlw	low (_theXF+2)
  9820  0020EA  24F3               	addwf	243,w,c
  9821  0020EC  6EE1               	movwf	fsr1l,c
  9822  0020EE  0E00               	movlw	high (_theXF+2)
  9823  0020F0  20F4               	addwfc	prodh,w,c
  9824  0020F2  6EE2               	movwf	fsr1h,c
  9825  0020F4  0E0E               	movlw	14
  9826  0020F6                     i2u166_41:
  9827  0020F6  006F FF6F FFE3     	movff	plusw2,plusw1
  9828  0020FC  06E8               	decf	wreg,f,c
  9829  0020FE  E2FB               	bc	i2u166_41
  9830                           
  9831                           ;xf/xf.c: 168:             break;
  9832  002100  EF8B  F010         	goto	i2l3987
  9833  002104                     i2l3983:
  9834                           
  9835                           ;xf/xf.c: 170:     }
  9836  002104  2A14               	incf	i2XF_scheduleTimer@i^0,f,c
  9837  002106  0E07               	movlw	7
  9838  002108  6414               	cpfsgt	i2XF_scheduleTimer@i^0,c
  9839  00210A  EF89  F010         	goto	i2u167_41
  9840  00210E  EF8B  F010         	goto	i2u167_40
  9841  002112                     i2u167_41:
  9842  002112  EF52  F010         	goto	i2l3977
  9843  002116                     i2u167_40:
  9844  002116                     i2l3987:
  9845                           
  9846                           ;xf/xf.c: 175:     LEAVECRITICAL(inISR);
  9847  002116  5013               	movf	i2XF_scheduleTimer@inISR^0,w,c
  9848  002118  EC27  F015         	call	i2_LEAVECRITICAL
  9849  00211C                     
  9850                           ;xf/xf.c: 176:     return i;
  9851  00211C  5014               	movf	i2XF_scheduleTimer@i^0,w,c
  9852  00211E  0012               	return		;funcret
  9853  002120                     __end_ofi2_XF_scheduleTimer:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function i2_Event_setDelay *****************
  9857 ;; Defined at:
  9858 ;;		line 53 in file "xf/event.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  me              2    0[COMRAM] PTR struct Event_
  9861 ;;		 -> i2XF_pushEvent@ev(15), POST@ev(15), XF_pushEvent@ev(15), 
  9862 ;;  delay           2    2[COMRAM] unsigned short 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        4 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		i2_XF_pushEvent
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text75
  9888  002A02                     __ptext75:
  9889                           	callstack 0
  9890  002A02                     i2_Event_setDelay:
  9891                           	callstack 19
  9892  002A02                     
  9893                           ;xf/event.c: 53: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 54: {;xf/eve
      +                          nt.c: 55:     me->delay = delay;
  9894  002A02  EE20 F005          	lfsr	2,5
  9895  002A06  5001               	movf	i2Event_setDelay@me^0,w,c
  9896  002A08  26D9               	addwf	fsr2l,f,c
  9897  002A0A  5002               	movf	(i2Event_setDelay@me+1)^0,w,c
  9898  002A0C  22DA               	addwfc	fsr2h,f,c
  9899  002A0E  0060  F00F  FFDE   	movff	i2Event_setDelay@delay,postinc2
  9900  002A14  0060  F013  FFDD   	movff	i2Event_setDelay@delay+1,postdec2
  9901  002A1A  0012               	return		;funcret
  9902  002A1C                     __end_ofi2_Event_setDelay:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function i2_Event_getDelay *****************
  9906 ;; Defined at:
  9907 ;;		line 58 in file "xf/event.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  me              2    0[COMRAM] PTR struct Event_
  9910 ;;		 -> i2XF_pushEvent@ev(15), XF_pushEvent@ev(15), 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;		None
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  2    0[COMRAM] unsigned short 
  9915 ;; Registers used:
  9916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;Total ram usage:        2 bytes
  9927 ;; Hardware stack levels used: 1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		i2_XF_pushEvent
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text76
  9936  002A1C                     __ptext76:
  9937                           	callstack 0
  9938  002A1C                     i2_Event_getDelay:
  9939                           	callstack 19
  9940  002A1C                     
  9941                           ;xf/event.c: 58: uint16_t Event_getDelay(Event* me);xf/event.c: 59: {;xf/event.c: 60:   
      +                            return me->delay;
  9942  002A1C  EE20 F005          	lfsr	2,5
  9943  002A20  5001               	movf	i2Event_getDelay@me^0,w,c
  9944  002A22  26D9               	addwf	fsr2l,f,c
  9945  002A24  5002               	movf	(i2Event_getDelay@me+1)^0,w,c
  9946  002A26  22DA               	addwfc	fsr2h,f,c
  9947  002A28  006F FF78  F001    	movff	postinc2,?i2_Event_getDelay
  9948  002A2E  006F FF74  F002    	movff	postdec2,?i2_Event_getDelay+1
  9949  002A34  0012               	return		;funcret
  9950  002A36                     __end_ofi2_Event_getDelay:
  9951                           	callstack 0
  9952                           
  9953 ;; *************** function _XF_unscheduleTimer *****************
  9954 ;; Defined at:
  9955 ;;		line 186 in file "xf/xf.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  id              1    wreg     unsigned char 
  9958 ;;  inISR           1    2[COMRAM] _Bool 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  id              1    3[COMRAM] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9970 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9974 ;;Total ram usage:        2 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; Hardware stack levels required when called: 1
  9977 ;; This function calls:
  9978 ;;		i2_ENTERCRITICAL
  9979 ;;		i2_Event_init
  9980 ;;		i2_LEAVECRITICAL
  9981 ;; This function is called by:
  9982 ;;		_XF_decrementAndQueueTimers
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text77
  9987  002772                     __ptext77:
  9988                           	callstack 0
  9989  002772                     _XF_unscheduleTimer:
  9990                           	callstack 19
  9991                           
  9992                           ;incstack = 0
  9993                           ;XF_unscheduleTimer@id stored from wreg
  9994  002772  6E04               	movwf	XF_unscheduleTimer@id^0,c
  9995  002774                     
  9996                           ;xf/xf.c: 186: void XF_unscheduleTimer(uint8_t id, _Bool inISR);xf/xf.c: 187: {;xf/xf.c:
      +                           188:     ENTERCRITICAL(inISR);
  9997  002774  5003               	movf	XF_unscheduleTimer@inISR^0,w,c
  9998  002776  EC32  F015         	call	i2_ENTERCRITICAL
  9999  00277A                     
 10000                           ;xf/xf.c: 189:     theXF.timerList[id].tm = 0;
 10001  00277A  5004               	movf	XF_unscheduleTimer@id^0,w,c
 10002  00277C  0D11               	mullw	17
 10003  00277E  0EF8               	movlw	low _theXF
 10004  002780  24F3               	addwf	243,w,c
 10005  002782  6ED9               	movwf	fsr2l,c
 10006  002784  0E00               	movlw	high _theXF
 10007  002786  20F4               	addwfc	prodh,w,c
 10008  002788  6EDA               	movwf	fsr2h,c
 10009  00278A  0E00               	movlw	0
 10010  00278C  6EDE               	movwf	postinc2,c
 10011  00278E  0E00               	movlw	0
 10012  002790  6EDD               	movwf	postdec2,c
 10013  002792                     
 10014                           ;xf/xf.c: 190:     Event_init(&(theXF.timerList[id].ev));
 10015  002792  5004               	movf	XF_unscheduleTimer@id^0,w,c
 10016  002794  0D11               	mullw	17
 10017  002796  0EFA               	movlw	low (_theXF+2)
 10018  002798  24F3               	addwf	243,w,c
 10019  00279A  6E01               	movwf	i2Event_init@me^0,c
 10020  00279C  0E00               	movlw	high (_theXF+2)
 10021  00279E  20F4               	addwfc	prodh,w,c
 10022  0027A0  6E02               	movwf	(i2Event_init@me+1)^0,c
 10023  0027A2  EC8C  F012         	call	i2_Event_init	;wreg free
 10024  0027A6                     
 10025                           ;xf/xf.c: 191:     LEAVECRITICAL(inISR);
 10026  0027A6  5003               	movf	XF_unscheduleTimer@inISR^0,w,c
 10027  0027A8  EC27  F015         	call	i2_LEAVECRITICAL
 10028  0027AC  0012               	return		;funcret
 10029  0027AE                     __end_of_XF_unscheduleTimer:
 10030                           	callstack 0
 10031                           
 10032 ;; *************** function i2_LEAVECRITICAL *****************
 10033 ;; Defined at:
 10034 ;;		line 248 in file "xf/xf.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  inISR           1    wreg     _Bool 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  inISR           1    0[COMRAM] _Bool 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;Total ram usage:        1 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_XF_unscheduleTimer
 10058 ;;		i2_XF_pushEvent
 10059 ;;		i2_XF_scheduleTimer
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text78
 10064  002A4E                     __ptext78:
 10065                           	callstack 0
 10066  002A4E                     i2_LEAVECRITICAL:
 10067                           	callstack 18
 10068                           
 10069                           ;incstack = 0
 10070                           ;i2LEAVECRITICAL@inISR stored from wreg
 10071  002A4E  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 10072  002A50                     
 10073                           ;xf/xf.c: 248: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 249: {;xf/xf.c: 250:     
      +                          if (inISR == 0)
 10074  002A50  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 10075  002A52  A4D8               	btfss	status,2,c
 10076  002A54  EF2E  F015         	goto	i2u158_41
 10077  002A58  EF30  F015         	goto	i2u158_40
 10078  002A5C                     i2u158_41:
 10079  002A5C  EF31  F015         	goto	i2l1086
 10080  002A60                     i2u158_40:
 10081  002A60                     
 10082                           ;xf/xf.c: 251:     {;xf/xf.c: 253:      (INTCON0bits.GIE = 1);
 10083  002A60  8ED2               	bsf	210,7,c	;volatile
 10084  002A62                     i2l1086:
 10085  002A62  0012               	return		;funcret
 10086  002A64                     __end_ofi2_LEAVECRITICAL:
 10087                           	callstack 0
 10088                           
 10089 ;; *************** function i2_Event_init *****************
 10090 ;; Defined at:
 10091 ;;		line 4 in file "xf/event.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  me              2    0[COMRAM] PTR struct Event_
 10094 ;;		 -> POST@ev(15), theXF.timerList(136), theXF(318), 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;		None
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;Total ram usage:        2 bytes
 10111 ;; Hardware stack levels used: 1
 10112 ;; This function calls:
 10113 ;;		Nothing
 10114 ;; This function is called by:
 10115 ;;		_XF_unscheduleTimer
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text79
 10120  002518                     __ptext79:
 10121                           	callstack 0
 10122  002518                     i2_Event_init:
 10123                           	callstack 19
 10124  002518                     
 10125                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
 10126  002518  0060  F007  FFD9   	movff	i2Event_init@me,fsr2l
 10127  00251E  0060  F00B  FFDA   	movff	i2Event_init@me+1,fsr2h
 10128  002524  0E00               	movlw	0
 10129  002526  6EDF               	movwf	indf2,c
 10130  002528                     
 10131                           ;xf/event.c: 7:     me->delay = 0;
 10132  002528  EE20 F005          	lfsr	2,5
 10133  00252C  5001               	movf	i2Event_init@me^0,w,c
 10134  00252E  26D9               	addwf	fsr2l,f,c
 10135  002530  5002               	movf	(i2Event_init@me+1)^0,w,c
 10136  002532  22DA               	addwfc	fsr2h,f,c
 10137  002534  0E00               	movlw	0
 10138  002536  6EDE               	movwf	postinc2,c
 10139  002538  0E00               	movlw	0
 10140  00253A  6EDD               	movwf	postdec2,c
 10141  00253C                     
 10142                           ;xf/event.c: 8:     me->target = ((void*)(0));
 10143  00253C  EE20 F003          	lfsr	2,3
 10144  002540  5001               	movf	i2Event_init@me^0,w,c
 10145  002542  26D9               	addwf	fsr2l,f,c
 10146  002544  5002               	movf	(i2Event_init@me+1)^0,w,c
 10147  002546  22DA               	addwfc	fsr2h,f,c
 10148  002548  0E00               	movlw	0
 10149  00254A  6EDE               	movwf	postinc2,c
 10150  00254C  0E00               	movlw	0
 10151  00254E  6EDD               	movwf	postdec2,c
 10152  002550                     
 10153                           ;xf/event.c: 9:     me->data = 0x0;
 10154  002550  EE20 F007          	lfsr	2,7
 10155  002554  5001               	movf	i2Event_init@me^0,w,c
 10156  002556  26D9               	addwf	fsr2l,f,c
 10157  002558  5002               	movf	(i2Event_init@me+1)^0,w,c
 10158  00255A  22DA               	addwfc	fsr2h,f,c
 10159  00255C  0E07               	movlw	7
 10160  00255E                     i2u164_41:
 10161  00255E  6ADE               	clrf	postinc2,c
 10162  002560  06E8               	decf	wreg,f,c
 10163  002562  E2FD               	bc	i2u164_41
 10164  002564                     
 10165                           ;xf/event.c: 10:     me->processEvent = ((void*)(0));
 10166  002564  EE20 F001          	lfsr	2,1
 10167  002568  5001               	movf	i2Event_init@me^0,w,c
 10168  00256A  26D9               	addwf	fsr2l,f,c
 10169  00256C  5002               	movf	(i2Event_init@me+1)^0,w,c
 10170  00256E  22DA               	addwfc	fsr2h,f,c
 10171  002570  0E00               	movlw	0
 10172  002572  6EDE               	movwf	postinc2,c
 10173  002574  0E00               	movlw	0
 10174  002576  6EDD               	movwf	postdec2,c
 10175  002578  0012               	return		;funcret
 10176  00257A                     __end_ofi2_Event_init:
 10177                           	callstack 0
 10178                           
 10179 ;; *************** function i2_ENTERCRITICAL *****************
 10180 ;; Defined at:
 10181 ;;		line 233 in file "xf/xf.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  inISR           1    wreg     _Bool 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  inISR           1    0[COMRAM] _Bool 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, status,2
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;Total ram usage:        1 bytes
 10200 ;; Hardware stack levels used: 1
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_XF_unscheduleTimer
 10205 ;;		i2_XF_pushEvent
 10206 ;;		i2_XF_scheduleTimer
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text80
 10211  002A64                     __ptext80:
 10212                           	callstack 0
 10213  002A64                     i2_ENTERCRITICAL:
 10214                           	callstack 18
 10215                           
 10216                           ;incstack = 0
 10217                           ;i2ENTERCRITICAL@inISR stored from wreg
 10218  002A64  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 10219  002A66                     
 10220                           ;xf/xf.c: 233: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 234: {;xf/xf.c: 235:     
      +                          if (inISR == 0)
 10221  002A66  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 10222  002A68  A4D8               	btfss	status,2,c
 10223  002A6A  EF39  F015         	goto	i2u157_41
 10224  002A6E  EF3B  F015         	goto	i2u157_40
 10225  002A72                     i2u157_41:
 10226  002A72  EF3C  F015         	goto	i2l1082
 10227  002A76                     i2u157_40:
 10228  002A76                     
 10229                           ;xf/xf.c: 236:     {;xf/xf.c: 238:       (INTCON0bits.GIE = 0);
 10230  002A76  9ED2               	bcf	210,7,c	;volatile
 10231  002A78                     i2l1082:
 10232  002A78  0012               	return		;funcret
 10233  002A7A                     __end_ofi2_ENTERCRITICAL:
 10234                           	callstack 0
 10235                           
 10236                           ;
 10237                           ; Interrupt Vector Table @ 0x8
 10238                           ;
 10239                           
 10240                           	psect	ivt0x8
 10241  000008                     __pivt0x8:
 10242                           	callstack 0
 10243  000008                     ivt0x8_base:
 10244                           	callstack 0
 10245                           
 10246                           ; high-priority vector
 10247  000008  EF1D  F013         	goto	_INTERRUPT_InterruptManager
 10248  000018                     	org	16
 10249                           
 10250                           ; low-priority vector
 10251  000018  00FF               	reset	
 10252  0000                     
 10253                           	psect	text81
 10254  000000                     __ptext81:
 10255                           	callstack 0
 10256  000000                     
 10257                           	psect	rparam
 10258  0000                     
 10259                           	psect	idloc
 10260                           
 10261                           ;Config register IDLOC0 @ 0x200000
 10262                           ;	unspecified, using default values
 10263  200000                     	org	2097152
 10264  200000  0FFF               	dw	4095
 10265                           
 10266                           ;Config register IDLOC1 @ 0x200002
 10267                           ;	unspecified, using default values
 10268  200002                     	org	2097154
 10269  200002  0FFF               	dw	4095
 10270                           
 10271                           ;Config register IDLOC2 @ 0x200004
 10272                           ;	unspecified, using default values
 10273  200004                     	org	2097156
 10274  200004  0FFF               	dw	4095
 10275                           
 10276                           ;Config register IDLOC3 @ 0x200006
 10277                           ;	unspecified, using default values
 10278  200006                     	org	2097158
 10279  200006  0FFF               	dw	4095
 10280                           
 10281                           ;Config register IDLOC4 @ 0x200008
 10282                           ;	unspecified, using default values
 10283  200008                     	org	2097160
 10284  200008  0FFF               	dw	4095
 10285                           
 10286                           ;Config register IDLOC5 @ 0x20000A
 10287                           ;	unspecified, using default values
 10288  20000A                     	org	2097162
 10289  20000A  0FFF               	dw	4095
 10290                           
 10291                           ;Config register IDLOC6 @ 0x20000C
 10292                           ;	unspecified, using default values
 10293  20000C                     	org	2097164
 10294  20000C  0FFF               	dw	4095
 10295                           
 10296                           ;Config register IDLOC7 @ 0x20000E
 10297                           ;	unspecified, using default values
 10298  20000E                     	org	2097166
 10299  20000E  0FFF               	dw	4095
 10300                           
 10301                           	psect	config
 10302                           
 10303                           ;Config register CONFIG1L @ 0x300000
 10304                           ;	External Oscillator Selection
 10305                           ;	FEXTOSC = OFF, Oscillator not enabled
 10306                           ;	Reset Oscillator Selection
 10307                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10308  300000                     	org	3145728
 10309  300000  8C                 	db	140
 10310                           
 10311                           ;Config register CONFIG1H @ 0x300001
 10312                           ;	Clock out Enable bit
 10313                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10314                           ;	PRLOCKED One-Way Set Enable bit
 10315                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10316                           ;	Clock Switch Enable bit
 10317                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10318                           ;	Fail-Safe Clock Monitor Enable bit
 10319                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10320  300001                     	org	3145729
 10321  300001  FF                 	db	255
 10322                           
 10323                           ;Config register CONFIG2L @ 0x300002
 10324                           ;	MCLR Enable bit
 10325                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10326                           ;	Power-up timer selection bits
 10327                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10328                           ;	Multi-vector enable bit
 10329                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 10330                           ;	IVTLOCK bit One-way set enable bit
 10331                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10332                           ;	Low Power BOR Enable bit
 10333                           ;	LPBOREN = OFF, ULPBOR disabled
 10334                           ;	Brown-out Reset Enable bits
 10335                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10336  300002                     	org	3145730
 10337  300002  F7                 	db	247
 10338                           
 10339                           ;Config register CONFIG2H @ 0x300003
 10340                           ;	Brown-out Reset Voltage Selection bits
 10341                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10342                           ;	ZCD Disable bit
 10343                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10344                           ;	PPSLOCK bit One-Way Set Enable bit
 10345                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10346                           ;	Stack Full/Underflow Reset Enable bit
 10347                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10348                           ;	Debugger Enable bit
 10349                           ;	DEBUG = OFF, Background debugger disabled
 10350                           ;	Extended Instruction Set Enable bit
 10351                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10352  300003                     	org	3145731
 10353  300003  FF                 	db	255
 10354                           
 10355                           ;Config register CONFIG3L @ 0x300004
 10356                           ;	WDT Period selection bits
 10357                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10358                           ;	WDT operating mode
 10359                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10360  300004                     	org	3145732
 10361  300004  9F                 	db	159
 10362                           
 10363                           ;Config register CONFIG3H @ 0x300005
 10364                           ;	WDT Window Select bits
 10365                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10366                           ;	WDT input clock selector
 10367                           ;	WDTCCS = SC, Software Control
 10368  300005                     	org	3145733
 10369  300005  FF                 	db	255
 10370                           
 10371                           ;Config register CONFIG4L @ 0x300006
 10372                           ;	Boot Block Size selection bits
 10373                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10374                           ;	Boot Block enable bit
 10375                           ;	BBEN = OFF, Boot block disabled
 10376                           ;	Storage Area Flash enable bit
 10377                           ;	SAFEN = OFF, SAF disabled
 10378                           ;	Application Block write protection bit
 10379                           ;	WRTAPP = OFF, Application Block not write protected
 10380  300006                     	org	3145734
 10381  300006  FF                 	db	255
 10382                           
 10383                           ;Config register CONFIG4H @ 0x300007
 10384                           ;	Configuration Register Write Protection bit
 10385                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10386                           ;	Boot Block Write Protection bit
 10387                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10388                           ;	Data EEPROM Write Protection bit
 10389                           ;	WRTD = OFF, Data EEPROM not write-protected
 10390                           ;	SAF Write protection bit
 10391                           ;	WRTSAF = OFF, SAF not Write Protected
 10392                           ;	Low Voltage Programming Enable bit
 10393                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10394  300007                     	org	3145735
 10395  300007  FF                 	db	255
 10396                           
 10397                           ;Config register CONFIG5L @ 0x300008
 10398                           ;	PFM and Data EEPROM Code Protection bit
 10399                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10400  300008                     	org	3145736
 10401  300008  FF                 	db	255
 10402                           
 10403                           ;Config register CONFIG5H @ 0x300009
 10404                           ;	unspecified, using default values
 10405  300009                     	org	3145737
 10406  300009  FF                 	db	255
 10407                           tosu	equ	0x3FFF
 10408                           tosh	equ	0x3FFE
 10409                           tosl	equ	0x3FFD
 10410                           stkptr	equ	0x3FFC
 10411                           pclatu	equ	0x3FFB
 10412                           pclath	equ	0x3FFA
 10413                           pcl	equ	0x3FF9
 10414                           tblptru	equ	0x3FF8
 10415                           tblptrh	equ	0x3FF7
 10416                           tblptrl	equ	0x3FF6
 10417                           tablat	equ	0x3FF5
 10418                           prodh	equ	0x3FF4
 10419                           prodl	equ	0x3FF3
 10420                           indf0	equ	0x3FEF
 10421                           postinc0	equ	0x3FEE
 10422                           postdec0	equ	0x3FED
 10423                           preinc0	equ	0x3FEC
 10424                           plusw0	equ	0x3FEB
 10425                           fsr0h	equ	0x3FEA
 10426                           fsr0l	equ	0x3FE9
 10427                           wreg	equ	0x3FE8
 10428                           indf1	equ	0x3FE7
 10429                           postinc1	equ	0x3FE6
 10430                           postdec1	equ	0x3FE5
 10431                           preinc1	equ	0x3FE4
 10432                           plusw1	equ	0x3FE3
 10433                           fsr1h	equ	0x3FE2
 10434                           fsr1l	equ	0x3FE1
 10435                           bsr	equ	0x3FE0
 10436                           indf2	equ	0x3FDF
 10437                           postinc2	equ	0x3FDE
 10438                           postdec2	equ	0x3FDD
 10439                           preinc2	equ	0x3FDC
 10440                           plusw2	equ	0x3FDB
 10441                           fsr2h	equ	0x3FDA
 10442                           fsr2l	equ	0x3FD9
 10443                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         348
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      50
    BANK0           160    116     152
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    theXF.timerList.target	PTR void  size(2) Largest target is 0
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theXF.timerList.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 0
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    theXF.target	PTR void  size(2) Largest target is 0
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theXF.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 0
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    theFactory.observer	PTR void  size(2) Largest target is 0
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theFactory.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 0
		 -> NULL(NULL[0]), BLControl_onButton(), 

    theFactory.button	PTR struct Button_ size(2) Largest target is 0
		 -> theFactory(BANK0[29]), 

    observerCB$0	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    sp__Event_getPE$0	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    S142$1$0	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    ?_XF_popEvent.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_XF_popEvent.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    BLControl_init@me	PTR struct BLControl_ size(2) Largest target is 31
		 -> theFactory.blc_(BANK0[0]), theFactory(BANK0[29]), 

    Button_initHW@me	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory.b_(BANK0[2]), theFactory(BANK0[29]), 

    ?_cc.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_cc.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_cc.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_cc.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_cc.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_cc.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_blc.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_blc.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_blc.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_blc.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_blc.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_blc.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_bsm.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_bsm.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_bsm.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_bsm.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_bsm.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_bsm.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_b.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_b.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_b.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_b.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_b.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_b.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_l.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_l.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_l.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ?_l.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ?_l.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ?_l.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    storeSetup@msg	PTR struct . size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    storeSetup@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    setBrake@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    setPower@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    sendSpeedFrame@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    sendAliveFrame@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    S128$3$0	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    POST@processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), 

    POST@target	PTR void  size(2) Largest target is 31
		 -> theFactory.cc_(BANK0[18]), theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    theXF.eventQueue.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theXF.eventQueue.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    XF_pushEvent@tmid	PTR unsigned char  size(2) Largest target is 1
		 -> POST@tmid(BANK0[1]), XF_decrementAndQueueTimers@dummy(COMRAM[1]), 

    ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    theXF.timerList.ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theXF.timerList.ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_getDelay@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getDelay@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_getDelay@me	PTR struct Event_ size(2) Largest target is 16
		 -> XF_pushEvent@ev(BANK0[15]), 

    Event_setDelay@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setDelay@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setDelay@me	PTR struct Event_ size(2) Largest target is 16
		 -> POST@ev(BANK0[15]), XF_pushEvent@ev(BANK0[15]), 

    Event_getId@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getId@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_getId@me	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    Event_setId@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setId@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setId@me	PTR struct Event_ size(2) Largest target is 16
		 -> POST@ev(BANK0[15]), 

    sp__Event_getTarget	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getTarget@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getTarget@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    sp__Event_getPE	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_getPE@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getPE@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setTarget@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setTarget@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setTarget@target	PTR void  size(2) Largest target is 31
		 -> theFactory.cc_(BANK0[18]), theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setTarget@me	PTR struct Event_ size(2) Largest target is 16
		 -> POST@ev(BANK0[15]), 

    Event_setPE@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setPE@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setPE@processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), 

    Event_setPE@me	PTR struct Event_ size(2) Largest target is 16
		 -> POST@ev(BANK0[15]), 

    Event_getData@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_getData@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_getData@me	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    Event_setData@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_setData@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_setData@me	PTR struct Event_ size(2) Largest target is 16
		 -> POST@ev(BANK0[15]), 

    Event_init@me.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    Event_init@me.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    Event_init@me	PTR struct Event_ size(2) Largest target is 338
		 -> POST@ev(BANK0[15]), theXF.timerList(BIGRAM[136]), theXF.eventQueue(BIGRAM[180]), theXF(BIGRAM[318]), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    convertCANid2Reg@passedInSIDH	PTR volatile unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), RXF5SIDH(ABS[1]), RXF4SIDH(ABS[1]), RXF3SIDH(ABS[1]), 
		 -> RXF2SIDH(ABS[1]), RXM1SIDH(ABS[1]), RXF1SIDH(ABS[1]), RXF0SIDH(BITBIGSFRlllllllll[1]), 
		 -> RXM0SIDH(BITBIGSFRlllllllll[1]), 

    convertCANid2Reg@passedInSIDL	PTR volatile unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), RXF5SIDL(ABS[1]), RXF4SIDL(ABS[1]), RXF3SIDL(ABS[1]), 
		 -> RXF2SIDL(ABS[1]), RXM1SIDL(ABS[1]), RXF1SIDL(ABS[1]), RXF0SIDL(ABS[1]), 
		 -> RXM0SIDL(ABS[1]), 

    convertCANid2Reg@passedInEIDH	PTR volatile unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), RXF5EIDH(ABS[1]), RXF4EIDH(ABS[1]), RXF3EIDH(ABS[1]), 
		 -> RXF2EIDH(ABS[1]), RXM1EIDH(ABS[1]), RXF1EIDH(ABS[1]), RXF0EIDH(BITBIGSFRlllllllll[1]), 
		 -> RXM0EIDH(BITBIGSFRlllllllll[1]), 

    convertCANid2Reg@passedInEIDL	PTR volatile unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), RXF5EIDL(ABS[1]), RXF4EIDL(ABS[1]), RXF3EIDL(ABS[1]), 
		 -> RXF2EIDL(ABS[1]), RXM1EIDL(ABS[1]), RXF1EIDL(ABS[1]), RXF0EIDL(ABS[1]), 
		 -> RXM0EIDL(ABS[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> XF_decrementAndQueueTimers(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> XF_decrementAndQueueTimers(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__cc	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory.cc_(BANK0[18]), theFactory(BANK0[29]), 

    sp__blc	PTR struct BLControl_ size(2) Largest target is 31
		 -> theFactory.blc_(BANK0[0]), theFactory(BANK0[29]), 

    sp__bsm.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    sp__bsm.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    sp__bsm.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    sp__bsm	PTR struct ButtonSM_ size(2) Largest target is 31
		 -> theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), 

    sp__b	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory.b_(BANK0[2]), theFactory(BANK0[29]), 

    theFactory.bsm_.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    theFactory.bsm_.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    theFactory.bsm_.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    readCANFrame@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    readCANFrame@msg	PTR struct . size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    commControl_processEvent@ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    commControl_processEvent@ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    commControl_processEvent@ev	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    commControl_processEvent@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    commControl_startBehaviour@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory.cc_(BANK0[18]), theFactory(BANK0[29]), 

    commControl_init@me	PTR struct CommControl_ size(2) Largest target is 31
		 -> theFactory.cc_(BANK0[18]), theFactory(BANK0[29]), 

    LED_off@me	PTR struct LED_ size(2) Largest target is 31
		 -> theFactory.l_(BANK0[1]), theFactory(BANK0[29]), 

    LED_on@me	PTR struct LED_ size(2) Largest target is 31
		 -> theFactory.l_(BANK0[1]), theFactory(BANK0[29]), 

    LED_initHW@me	PTR struct LED_ size(2) Largest target is 31
		 -> theFactory.l_(BANK0[1]), theFactory(BANK0[29]), 

    LED_init@me	PTR struct LED_ size(2) Largest target is 31
		 -> theFactory.l_(BANK0[1]), theFactory(BANK0[29]), 

    ButtonSM_setObserver@observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> BLControl_onButton(), 

    ButtonSM_setObserver@me.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_setObserver@me.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ButtonSM_setObserver@me.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ButtonSM_setObserver@observer	PTR void  size(2) Largest target is 31
		 -> theFactory.blc_(BANK0[0]), theFactory(BANK0[29]), 

    ButtonSM_setObserver@me	PTR struct ButtonSM_ size(2) Largest target is 31
		 -> theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), 

    ButtonSM_startBehaviour@me.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_startBehaviour@me.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ButtonSM_startBehaviour@me.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ButtonSM_startBehaviour@me	PTR struct ButtonSM_ size(2) Largest target is 31
		 -> theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), 

    ButtonSM_processEvent@me.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_processEvent@me.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ButtonSM_processEvent@me.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    S142Event_$target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_processEvent@ev.target	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    S142Event_$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    ButtonSM_processEvent@ev.processEvent	PTR FTN(PTR struct Event_,)_Bool  size(2) Largest target is 1
		 -> factory_toggleLed(), commControl_processEvent(), ButtonSM_processEvent(), NULL(NULL[0]), 

    ButtonSM_processEvent@ev	PTR struct Event_ size(2) Largest target is 16
		 -> XF_executeOnce@ev(BANK0[15]), 

    ButtonSM_processEvent@me	PTR struct ButtonSM_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_init@button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory.b_(BANK0[2]), theFactory(BANK0[29]), 

    S128ButtonSM_$observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    ButtonSM_init@me.observer	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    S128ButtonSM_$observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    ButtonSM_init@me.observerCB	PTR FTN(PTR void ,unsigned char ,_Bool ,)void  size(2) Largest target is 1
		 -> NULL(NULL[0]), BLControl_onButton(), 

    S128ButtonSM_$button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ButtonSM_init@me.button	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    ButtonSM_init@me	PTR struct ButtonSM_ size(2) Largest target is 31
		 -> theFactory.bsm_(BANK0[10]), theFactory(BANK0[29]), 

    Button_getId@me	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    Button_read@me	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), 

    Button_init@me	PTR struct Button_ size(2) Largest target is 31
		 -> theFactory.b_(BANK0[2]), theFactory(BANK0[29]), 

    sp__l	PTR struct LED_ size(2) Largest target is 31
		 -> theFactory.l_(BANK0[1]), theFactory(BANK0[29]), 

    BLControl_onButton@me	PTR void  size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 

    BLControl_onButton@realMe	PTR struct BLControl_ size(2) Largest target is 31
		 -> theFactory(BANK0[29]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_XF_decrementAndQueueTimers
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2_XF_scheduleTimer
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_unscheduleTimer->i2_Event_init

Critical Paths under _main in BANK0

    _main->_XF_executeOnce
    _XF_init->_Event_init
    _XF_executeOnce->_commControl_processEvent
    _factory_toggleLed->_POST
    _commControl_processEvent->_readCANFrame
    _readCANFrame->_POST
    _CAN_receive->_convertReg2ExtendedCANid
    _XF_popEvent->___awmod
    _BLControl_onButton->_LED_off
    _BLControl_onButton->_LED_on
    _LED_on->_l
    _SYSTEM_Initialize->_ECAN_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ECAN_Initialize->_convertCANid2Reg
    _Factory_start->_ButtonSM_startBehaviour
    _commControl_startBehaviour->_POST
    _ButtonSM_startBehaviour->_POST
    _POST->_XF_pushEvent
    _XF_pushEvent->_XF_scheduleTimer
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _Event_init->___wmul
    _Factory_init->_LED_initHW
    _commControl_init->_cc
    _LED_initHW->_LED_off
    _LED_off->_l
    _LED_init->_l
    _Button_initHW->_b
    _Button_init->_b
    _ButtonSM_init->_b
    _ButtonSM_init->_bsm
    _BLControl_init->_blc
    _Factory_build->_ButtonSM_setObserver
    _ButtonSM_setObserver->_blc
    _ButtonSM_setObserver->_bsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  121936
                      _Factory_build
                       _Factory_init
                      _Factory_start
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _XF_executeOnce
                            _XF_init
 ---------------------------------------------------------------------------------
 (1) _XF_init                                              2     2      0    1121
                                              8 BANK0      2     2      0
                         _Event_init
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     523
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _XF_executeOnce                                      15    15      0   68015
                                            101 BANK0     15    15      0
              _ButtonSM_processEvent *
                        _XF_popEvent
           _commControl_processEvent *
                  _factory_toggleLed *
 ---------------------------------------------------------------------------------
 (2) _factory_toggleLed                                    1     1      0   14337
                                             73 BANK0      1     1      0
                               _POST
 ---------------------------------------------------------------------------------
 (2) _commControl_processEvent                            16    14      2   34664
                                             85 BANK0     16    14      2
                      _Event_getData
                        _Event_getId
                               _POST
                       _readCANFrame
                     _sendAliveFrame
                     _sendSpeedFrame
                           _setBrake
                           _setPower
                         _storeSetup
 ---------------------------------------------------------------------------------
 (3) _storeSetup                                           4     0      4     178
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _setPower                                             2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _setBrake                                             2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _sendSpeedFrame                                       2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _sendAliveFrame                                       2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _readCANFrame                                        13     9      4   16705
                                             73 BANK0     12     8      4
                        _CAN_receive
                               _POST
 ---------------------------------------------------------------------------------
 (4) _CAN_receive                                          3     1      2    1921
                                             19 BANK0      3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (5) _convertReg2StandardCANid                            15    11      4     292
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (5) _convertReg2ExtendedCANid                            19    15      4     899
                                              0 BANK0     19    15      4
 ---------------------------------------------------------------------------------
 (3) _Event_getData                                       16     8      8     111
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                         33    18     15     856
                                              6 BANK0     33    18     15
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _ButtonSM_processEvent                                8     6      2   18039
                                             85 BANK0      7     5      2
                 _BLControl_onButton *
                       _Button_getId
                        _Button_read
                        _Event_getId
                               _POST
 ---------------------------------------------------------------------------------
 (3) _Event_getId                                          2     0      2    1535
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _Button_getId                                         2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BLControl_onButton                                   6     2      4     940
                                              6 BANK0      4     0      4
                       _Button_getId (ARG)
                            _LED_off
                             _LED_on
                                  _l
 ---------------------------------------------------------------------------------
 (4) _LED_on                                               4     2      2     200
                                              2 BANK0      4     2      2
                                  _l (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    6967
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     333
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     200
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0    6434
                                             18 BANK0      1     1      0
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (3) _convertCANid2Reg                                    18     5     13    6434
                                              0 BANK0     18     5     13
 ---------------------------------------------------------------------------------
 (1) _Factory_start                                        0     0      0   43614
            _ButtonSM_startBehaviour
                               _POST
                                _bsm
                                 _cc
         _commControl_startBehaviour
 ---------------------------------------------------------------------------------
 (2) _commControl_startBehaviour                           2     0      2   14492
                                             73 BANK0      2     0      2
                               _POST
                                 _cc (ARG)
 ---------------------------------------------------------------------------------
 (2) _ButtonSM_startBehaviour                              3     1      2   14785
                                             73 BANK0      3     1      2
                        _Button_read
                               _POST
                                _bsm (ARG)
 ---------------------------------------------------------------------------------
 (3) _POST                                                31    16     15   14337
                                             42 BANK0     31    16     15
                         _Event_init
                      _Event_setData
                     _Event_setDelay
                        _Event_setId
                        _Event_setPE
                    _Event_setTarget
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (4) _XF_pushEvent                                        22     4     18    2490
                                             20 BANK0     22     4     18
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     652
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_scheduleTimer                                    19     1     18     533
                                              1 BANK0     19     1     18
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (6) _LEAVECRITICAL                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ENTERCRITICAL                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Event_setDelay                                       4     0      4     400
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _Event_getDelay                                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Event_setTarget                                      4     0      4     222
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _Event_setPE                                          4     0      4     222
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _Event_setId                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _Event_setData                                       10     0     10     222
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (2) _Event_init                                           2     0      2     440
                                              6 BANK0      2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Button_read                                          5     3      2     269
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         0     0      0    1664
                     _BLControl_init
                      _ButtonSM_init
                        _Button_init
                      _Button_initHW
                           _LED_init
                         _LED_initHW
                                  _b
                                _blc
                                _bsm
                                 _cc
                   _commControl_init
                                  _l
 ---------------------------------------------------------------------------------
 (4) _l                                                    2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _commControl_init                                     2     0      2     199
                                              2 BANK0      2     0      2
                                 _cc (ARG)
 ---------------------------------------------------------------------------------
 (2) _cc                                                   2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _b                                                    2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LED_initHW                                           2     0      2     400
                                              6 BANK0      2     0      2
                            _LED_off
                                  _l (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_off                                              4     2      2     289
                                              2 BANK0      4     2      2
                                  _l (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_init                                             3     0      3     222
                                              2 BANK0      3     0      3
                                  _l (ARG)
 ---------------------------------------------------------------------------------
 (2) _Button_initHW                                        2     0      2      89
                                              2 BANK0      2     0      2
                                  _b (ARG)
 ---------------------------------------------------------------------------------
 (2) _Button_init                                          4     0      4     355
                                              2 BANK0      4     0      4
                                  _b (ARG)
 ---------------------------------------------------------------------------------
 (2) _ButtonSM_init                                        4     0      4     310
                                              2 BANK0      4     0      4
                                  _b (ARG)
                                _bsm (ARG)
 ---------------------------------------------------------------------------------
 (2) _BLControl_init                                       2     0      2      89
                                              2 BANK0      2     0      2
                                _blc (ARG)
 ---------------------------------------------------------------------------------
 (1) _Factory_build                                        0     0      0     355
               _ButtonSM_setObserver
                                _blc
                                _bsm
 ---------------------------------------------------------------------------------
 (2) _bsm                                                  2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _blc                                                  2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ButtonSM_setObserver                                 6     0      6     355
                                              2 BANK0      6     0      6
                                _blc (ARG)
                                _bsm (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           2     2      0    1810
                                             46 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0    1810
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
         _XF_decrementAndQueueTimers *
 ---------------------------------------------------------------------------------
 (10) _XF_decrementAndQueueTimers                          4     4      0    1810
                                             42 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
 ---------------------------------------------------------------------------------
 (11) i2_XF_pushEvent                                     22     4     18    1249
                                             20 COMRAM    22     4     18
                    i2_ENTERCRITICAL
                   i2_Event_getDelay
                   i2_Event_setDelay
                    i2_LEAVECRITICAL
                 i2_XF_scheduleTimer
                          i2___awmod
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_XF_scheduleTimer                                 19     1     18     344
                                              1 COMRAM    19     1     18
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (12) i2_Event_setDelay                                    4     0      4      96
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) i2_Event_getDelay                                    2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _XF_unscheduleTimer                                  2     1      1     357
                                              2 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                       i2_Event_init
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (13) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_Event_init                                        2     0      2     136
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_build
     _ButtonSM_setObserver
       _blc (ARG)
       _bsm (ARG)
     _blc
     _bsm
   _Factory_init
     _BLControl_init
       _blc (ARG)
     _ButtonSM_init
       _b (ARG)
       _bsm (ARG)
     _Button_init
       _b (ARG)
     _Button_initHW
       _b (ARG)
     _LED_init
       _l (ARG)
     _LED_initHW
       _LED_off
         _l (ARG)
       _l (ARG)
     _b
     _blc
     _bsm
     _cc
     _commControl_init
       _cc (ARG)
     _l
   _Factory_start
     _ButtonSM_startBehaviour
       _Button_read
       _POST
         _Event_init
           ___wmul (ARG)
         _Event_setData
         _Event_setDelay
         _Event_setId
         _Event_setPE
         _Event_setTarget
         _XF_pushEvent
           _ENTERCRITICAL
           _Event_getDelay
           _Event_setDelay
           _LEAVECRITICAL
           _XF_scheduleTimer
             _ENTERCRITICAL
             _LEAVECRITICAL
           ___awmod
       _bsm (ARG)
     _POST
     _bsm
     _cc
     _commControl_startBehaviour
       _POST
       _cc (ARG)
   _SYSTEM_Initialize
     _ECAN_Initialize
       _convertCANid2Reg
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
   _TMR0_SetInterruptHandler
   _XF_executeOnce
     _ButtonSM_processEvent *
       _BLControl_onButton *
         _Button_getId (ARG)
         _LED_off (ARG)
         _LED_on (ARG)
           _l (ARG)
         _l (ARG)
       _Button_getId *
       _Button_read *
       _Event_getId *
       _POST *
     _XF_popEvent *
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _commControl_processEvent *
       _Event_getData
       _Event_getId
       _POST
       _readCANFrame
         _CAN_receive
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
         _POST
       _sendAliveFrame
       _sendSpeedFrame
       _setBrake
       _setPower
       _storeSetup
     _factory_toggleLed *
       _POST
   _XF_init
     _Event_init
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _XF_decrementAndQueueTimers *
       _XF_unscheduleTimer
         i2_ENTERCRITICAL
         i2_Event_init
         i2_LEAVECRITICAL
       i2_XF_pushEvent
         i2_ENTERCRITICAL
         i2_Event_getDelay
         i2_Event_setDelay
         i2_LEAVECRITICAL
         i2_XF_scheduleTimer
           i2_ENTERCRITICAL
           i2_LEAVECRITICAL
         i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     13E      72        7.8%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhll    2FA      0       0      45        0.0%
BITBIGSFRllllhh    195      0       0      65        0.0%
BITBIGSFRllhhll    185      0       0      42        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      98       5       95.0%
BITBIGSFRllllll     9A      0       0      69        0.0%
BITBIGSFRllhhll     62      0       0      47        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      32       1       52.6%
BITBIGSFRllhhll     29      0       0      52        0.0%
BITBIGSFRllhhll     24      0       0      41        0.0%
BITBIGSFRllhhll     23      0       0      54        0.0%
BITBIGSFRhhl        22      0       0      37        0.0%
BITBIGSFRllhhll     1C      0       0      49        0.0%
BITBIGSFRllhhll     1A      0       0      60        0.0%
BITBIGSFRllhhll     11      0       0      59        0.0%
BITBIGSFRllhhll      B      0       0      53        0.0%
BITBIGSFRllhhll      B      0       0      51        0.0%
BITBIGSFRllhhll      B      0       0      50        0.0%
BITBIGSFRllhlll      A      0       0      63        0.0%
BITBIGSFRhhh         7      0       0      36        0.0%
BITBIGSFRlhh         7      0       0      39        0.0%
BITBIGSFRllhhll      5      0       0      46        0.0%
BITBIGSFRlhl         5      0       0      40        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllhh      2      0       0      68        0.0%
BITBIGSFRllllhh      2      0       0      67        0.0%
BITBIGSFRllllhh      2      0       0      66        0.0%
BITBIGSFRllhllh      2      0       0      62        0.0%
BITBIGSFRllhhll      2      0       0      48        0.0%
BITBIGSFRllllll      2      0       0      70        0.0%
BITBIGSFRllhhll      1      0       0      43        0.0%
BITBIGSFRllhhll      1      0       0      44        0.0%
BITBIGSFRllhhll      1      0       0      55        0.0%
BITBIGSFRllhhll      1      0       0      56        0.0%
BITBIGSFRllhhll      1      0       0      57        0.0%
BITBIGSFRllhhll      1      0       0      58        0.0%
BITBIGSFRllhlh       1      0       0      61        0.0%
BITBIGSFRlllh        1      0       0      64        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      71        0.0%
DATA                 0      0     208       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 30 11:24:13 2022

                             fp__factory_toggleLed 0000                                                  l9 2B44  
                                                _b 2AE8                                                  _l 2AD0  
                             __end_of_Factory_init 200E                                                 ?_b 0060  
                                               ?_l 0060                                                 l20 28CC  
                                               l23 2B42                                                 l15 2730  
                                               l42 2AC0                                                 l38 1C16  
                                               l39 1C18                                                 l56 2516  
                                               l92 1F7E                                                 l76 0D20  
                                               l85 0D20                                                 l95 2816  
                                               _cc 2ADC                                     _sendAliveFrame 2B40  
                                ??i2_ENTERCRITICAL 0001                                ___wmul@multiplicand 0062  
                                              ??_b 0062                                                ??_l 0062  
                            __end_of_Factory_build 28F6                                                ?_cc 0060  
                                              l102 2AA0                                                l110 2124  
                                              l105 2ACE                                                l201 0426  
                                              l122 21A2                                                l230 088A  
                                              l127 21A8                                                l320 2ADA  
                                              l240 088A                                                l139 2226  
                                              l323 2AF2                                                l251 1410  
                                              l332 2AE6                                                l172 1B56  
                                              l261 2B38                                                l341 2388  
                                              l326 2AFE                                                l270 2B3A  
                                              l335 200C                                                l415 2B32  
                                              l343 23EA                                                l264 2B40  
                                              l329 2B0A                                                l169 26E8  
                                              l361 2B36                                                l521 295C  
                                              l273 2B3C                                                l338 28F4  
                                              l346 244E                                                l258 1410  
                                              l267 2B3E                                                l524 2A4C  
                                              l527 293E                                                l393 291A  
                                              l475 2638                                                l824 1236  
                                              l841 0E9A                                                l871 22A2  
                                              l848 1016                                                l939 2386  
                                              l876 15AA                                                l980 2B1E  
                                              l868 16E8                                                l983 2B14  
                                              l992 2770                                                l986 2B28  
                                              l995 25D8                                                l989 24B2  
                                              l998 29CC                           __end_of_commControl_init 26EA  
                                 i2_Event_setDelay 2A02                              __end_of_Factory_start 2450  
                         fp__ButtonSM_processEvent 0000                                                _blc 2B00  
                                              _bsm 2AF4                               _ButtonSM_setObserver 27E4  
                                  ??_ENTERCRITICAL 0060                                       ___awmod@sign 0065  
                                              prod 003FF3                                                tosl 003FFD  
                                              wreg 003FE8                                        ?_LED_initHW 0066  
                       ??_convertReg2StandardCANid 0064                                               ??_cc 0062  
                                             l1001 29B0                                               l1010 2A8C  
                                             l1013 2AB0                                               l1016 2978  
                                             l1050 19B6                                               l1019 2994  
                                             l1060 1D88                                               l1124 28A4  
                                             l1056 17E4                                               l1049 19A6  
                                             l1082 2A00                                               l1066 2098  
                                             ?_blc 0060                                               l1086 29E6  
                                             l1095 2316                                    __end_of_LED_off 2228  
                                             l1089 1CD4                                               l4111 1412  
                                             l4031 26FC                                               l1368 1E3A  
                                             l4201 2502                                               l4121 14A6  
                                             l4113 1412                                               l4033 270C  
                                             l4043 1B6E                                               l4131 14FE  
                                             l4123 14AC                                               l4115 1426  
                                             l4035 2720                                               l4211 08D6  
                                             l4203 088C                                               l4301 26D8  
                                             l4045 1BE4                                               l4037 1B58  
                                             l4133 152C                                               l4125 14DE  
                                             l4117 1438                                               l4109 2B2A  
                                             l4029 26EA                                               l4221 0964  
                                             l4213 08EA                                               l4205 08A6  
                                             l4047 1C00                                               l4039 1B62  
                                             l4303 1A90                                               l4127 14E6  
                                             l4119 1466                                               l4135 1542  
                                             l4055 2AB2                                               l4063 257A  
                                             l4071 127A                                               l4311 004C  
                                             l4231 09D8                                               l4223 0978  
                                             l4215 0906                                               l4207 08A6  
                                             l4137 1562                                               l4129 14EC  
                                             l4145 2B16                                               l4073 1280  
                                             l4401 04F8                                               l4321 00BE  
                                             l4313 005C                                               l4305 001E  
                                             l4241 0A5E                                               l4225 098C  
                                             l4217 091A                                               l4209 08BA  
                                             l4139 1594                                               l4147 2B0C  
                                             l4059 2AA2                                               l4091 13A2  
                                             l4083 1312                                               l4075 1280  
                                             l4067 1238                                               l4411 05F8  
                                             l4323 00D4                                               l4331 0144  
                                             l4315 0070                                               l4307 0038  
                                             l4251 0B64                                               l4243 0AA2  
                                             l4227 09A8                                               l4219 0936  
                                             l4235 09EC                                               ?_bsm 0060  
                                             l4149 2B20                                               l4085 133C  
                                             l4077 128A                                               l4069 1254  
                                             l4413 0614                                               l4405 050C  
                                             l4421 0658                                               l4333 0164  
                                             l4325 00F0                                               l4317 008C  
                                             l4309 003C                                               l4261 0C5A  
                                             l4253 0BC6                                               l4245 0AE6  
                                             l4229 09BC                                               l4237 0A3A  
                                             l4191 28B8                                               l3711 1DAA  
                                             l3703 1D8A                                               l4079 12CE  
                                             l4095 13E6                                               l4431 0732  
                                             l4415 0628                                               l4407 05C8  
                                             l4423 06AE                                               l4351 0272  
                                             l4335 016C                                               l4343 0202  
                                             l4319 00A2                                               l4263 0CBC  
                                             l4255 0BDC                                               l4247 0B26  
                                             l4239 0A5A                                               l4193 24B4  
                                             l3721 1DE2                                               l3713 1DB8  
                                             l3705 1D90                                               l3801 175E  
                                             l4281 1F5C                                               l4601 103A  
                                             l4089 1380                                               l4441 07EE  
                                             l4433 073E                                               l4425 06CE  
                                             l4417 0644                                               l4409 05E4  
                                             l4353 0288                                               l4337 01B0  
                                             l4345 0240                                               l4329 0106  
                                             l4257 0C1C                                               l4249 0B46  
                                             l4195 24C4                                               l4291 2AC2  
                                             l4531 2AE8                                               l3723 1DF0  
                                             l3731 1E1A                                               l3715 1DC0  
                                             l3707 1D9E                                               l3803 1764  
                                             l4283 1F66                                               l4611 115C  
                                             l4603 1074                                               l4435 0784  
                                             l4427 06D2                                               l4371 0396  
                                             l4355 02A4                                               l4363 02EC  
                                             l4339 01BC                                               l4259 0C3C  
                                             l4267 0CD2                                               l4197 24DE  
                                             l4189 28A6                                               l4293 2696  
                                             l3733 1E2A                                               l3725 1E06  
                                             l3717 1DD2                                               l3709 1DA6  
                                             l3813 17AC                                               l3805 178A  
                                             l4285 1F6C                                               l4277 1EEC  
                                             l4613 1196                                               l4605 10AE  
                                             l4621 1CF0                                               l3741 15C2  
                                             l3901 0E34                                               l4437 0790  
                                             l4429 0716                                               l4445 0834  
                                             l4373 03A2                                               l5501 030C  
                                             l4357 02BA                                               l4365 032A  
                                             l4349 0256                                               l4287 27E4  
                                             l4535 2AF4                                               l4199 24EE  
                                             l4543 2ADC                                               l4295 26A6  
                                             l3831 2AD0                                               l3671 29E4  
                                             l3735 1E32                                               l3727 1E0E  
                                             l3719 1DDA                                               l3815 17D2  
                                             l3807 17A0                                               l4279 1F2E  
                                             l4615 11D0                                               l4607 10E8  
                                             l4551 2B34                                               l4631 1D30  
                                             l4623 1CF6                                               l3751 1644  
                                             l3743 15C8                                               l3911 0E8E  
                                             l3903 0E46                                               l4439 07D6  
                                             l5511 0556                                               l4391 049C  
                                             l4383 043C                                               l5503 0408  
                                             l4367 034A                                               l4359 02D6  
                                             l4711 192C                                               l4289 2A8E  
                                             l4297 26B8                                               l3673 295E  
                                             l3665 29EC                                               l3681 2016  
                                             l3729 1E14                                               l3817 17DC  
                                             l3809 17A6                                               l4617 121C  
                                             l4609 1122                                               l4561 2916  
                                             l4553 28F6                                               l4633 1D58  
                                             l4625 1D10                                               l3753 167A  
                                             l3745 15D0                                               l3921 0F0A  
                                             l3913 0E90                                               l3905 0E58  
                                             l5521 0678                                               l5513 0590  
                                             l5505 0548                                               l4385 0458  
                                             l4369 0352                                               l4377 03E8  
                                             l4721 198A                                               l4705 18E4  
                                             l4539 2B00                                               l3851 21AE  
                                             l4299 26C8                                               l3675 297A  
                                             l3667 29FE                                               l3691 2058  
                                             l3819 17E2                                               l4571 261A  
                                             l4563 25DA                                               l4555 2902  
                                             l5531 214C                                               l3835 2120  
                                             l4635 1D7E                                               l4627 1D18  
                                             l4619 1CDA                                               l3755 1692  
                                             l3747 15FA                                               l3739 15B0  
                                             l3771 2292                                               l3763 222C  
                                             l3931 0F8C                                               l3923 0F1A  
                                             l3915 0EAA                                               l3907 0E6A  
                                             l5523 0854                                               l5507 059E  
                                             l5515 056C                                               l4395 04BC  
                                             l4387 046C                                               l4379 0426  
                                             l4547 2388                                               l4731 22F0  
                                             l4723 22A4                                               l4707 190A  
                                             l5533 1B8E                                               l3781 248A  
                                             l3669 29D2                                               l3693 207C  
                                             l3861 1C20                                               l4573 261C  
                                             l4565 25E6                                               l4581 291C  
                                             l4557 2906                                               l3757 16C8  
                                             l3749 1612                                               l3765 222C  
                                             l3941 0FE6                                               l3933 0F9E  
                                             l3925 0F4C                                               l3917 0EB8  
                                             l3909 0E7C                                               l5525 1326  
                                             l5517 0582                                               l5509 05BA  
                                             l4397 04D0                                               l4389 0488  
                                             l4549 23AA                                               l4725 22BA  
                                             l4661 287A                                               l4717 1934  
                                             l4709 1910                                               l5535 21D0  
                                             l3847 21A4                                               l4671 1FD0  
                                             l3783 249E                                               l3775 2450  
                                             l3791 2A7A                                               l3695 207E  
                                             l3687 201C                                               l3679 200E  
                                             l3871 1C80                                               l3863 1C2C  
                                             l4583 2A36                                               l4575 261E  
                                             l4567 25FA                                               l4559 2908  
                                             l4591 2372                                               l3839 212A  
                                             l3759 16D8                                               l3767 2258  
                                             l3943 0FF8                                               l3935 0FB0  
                                             l3927 0F60                                               l3919 0EC8  
                                             l5527 1394                                               l5519 05AC  
                                             l4399 04E4                                               l4727 22CC  
                                             l4663 289C                                               l4719 1984  
                                             l4673 1FFC                                               l3777 2460  
                                             l3785 2732                                               l3697 208E  
                                             l3689 203C                                               l3793 16EA  
                                             l3873 1CAE                                               l3865 1C42  
                                             l4577 2620                                               l4569 2618  
                                             l4593 2380                                               l4585 2318  
                                             l3769 2282                                               l3945 100A  
                                             l3937 0FC2                                               l3929 0F78  
                                             l3881 0D36                                               l5529 13FA  
                                             l4729 22DE                                               l4675 28CE  
                                             l4667 1F80                                               l3779 2476  
                                             l3787 29B2                                               l3699 2094  
                                             l3795 1700                                               l3867 1C58  
                                             l3859 1C1A                                               l4595 1018  
                                             l4579 2622                                               l4587 2356  
                                             l4691 294C                                               l3939 0FD4  
                                             l3891 0DD8                                               l3883 0D44  
                                             l4669 1FC0                                               l3789 2996  
                                             l3797 1714                                               l3869 1C6A  
                                             l4677 23EC                                               l4597 101C  
                                             l4589 2364                                               l4693 2950  
                                             l4685 2940                                               l3949 1012  
                                             l3893 0DEA                                               l3885 0D54  
                                             l3877 0D22                                               l5493 0A0C  
                                             l3799 1728                                               l4599 1030  
                                             l4695 2954                                               l4687 2944  
                                             l3895 0DFE                                               l3887 0D96  
                                             l3879 0D28                                               l5495 0CF2  
                                             l4697 2958                                               l4689 2948  
                                             l3897 0E10                                               l3889 0DA6  
                                             l5497 0126                                               l4881 2850  
                                             l3899 0E22                                               l5499 0222  
                                             l4699 18DA                                               l4891 286E  
                                             l4883 2854                                               l4885 2858  
                                             l4877 284A                                               l4887 285C  
                                             l4879 284E                                               l4889 2860  
              commControl_processEvent@oldASMState 00C1                                __end_of_XF_popEvent 1D8A  
                                             u2000 1F5C                                               u2001 1F58  
                                             u2010 008C                                               u2011 0088  
                                             u2100 0438                                               u2020 00BE  
                                             u2101 0434                                               u2021 00BA  
                                             u2110 0458                                               u2030 00F0  
                                             u2111 0454                                               u2031 00EC  
                                             u1400 29E4                                               u2200 1236  
                                             u2120 0488                                               u2040 0164  
                                             u1401 29E0                                               u2201 1232  
                                             u2121 0484                                               u2041 0160  
                                             u1410 203C                                               u2210 1D10  
                                             u2130 04B8                                               u2050 0252  
                                             u1411 2038                                               u2211 1D0C  
                                             u2131 04B4                                               u2051 024E  
                                             u2140 05E4                                               u2060 0272  
                                             u1421 206E                                               u2221 1D22  
                                             u2141 05E0                                               u2061 026E  
                                             _LATA 003FBA                                               u1430 208E  
                                             u2150 0614                                               u2070 02A4  
                                             u2310 192C                                               _LATB 003FBB  
                                             u1431 208A                                               u2231 1D4E  
                                             u2151 0610                                               u2071 02A0  
                                             u2311 1928                                               _LATC 003FBC  
                                             u1440 1D9E                                               u1600 0D36  
                                             u2160 0644                                               u2080 02D6  
                                             u2320 19A6                                               u1521 2498  
                                             u1441 1D9A                                               u1505 1624  
                                             u1601 0D32                                               u2161 0640  
                                             u2081 02D2                                               u2321 19A2  
                                             u1450 1DB8                                               u1530 1714  
                                             u1610 0D44                                               u2170 06CE  
                                             u2090 034A                                               u1451 1DB4  
                                             u1531 1710                                               u1515 2260  
                                             u1611 0D40                                               u2171 06CA  
                                             u2091 0346                                               u2331 22B0  
                                             u1460 1DD2                                               u1620 0EAA  
                                             u2180 2398                                               u2340 22CC  
                                             u1461 1DCE                                               u1541 173A  
                                             u1621 0EA6                                               u2181 2392  
                                             u2341 22C8                                               u1390 29FE  
                                             u1470 1DF0                                               u1550 17A0  
                                             u2190 1030                                               u1630 0EB8  
                                             u2350 22DE                                               u1391 29FA  
                                             u1471 1DEC                                               u1551 179C  
                                             u2191 102C                                               u1631 0EB4  
                                             u2351 22DA                                               u1480 1E06  
                                             u1800 1426                                               u2360 22F0  
                                             u1481 1E02                                               u1561 17C8  
                                             u1801 1422                                               u2361 22EC  
                                             u1490 1E2A                                               u2186 239A  
                                             u1491 1E26                                               u1740 26FC  
                                             u1900 0964                                               u1741 26F8  
                                             u1901 0960                                               u1750 270C  
                                             u1910 09A8                                               u1591 1CB8  
                                             u1815 14BE                                               u1751 2708  
                                             u1911 09A4                                               u1760 1C00  
                                             u1920 09D8                                               u1761 1BFC  
                                             u1825 1574                                               u1921 09D4  
                                             u1770 1C12                                               u1930 0A5A  
                                             u2378 2302                                               u1771 1C0C  
                                             u1931 0A56                                               u2379 2316  
                                             u1780 1C14                                               u1940 0B46  
                                             u1941 0B42                                               u1790 1254  
                                             u1950 0B64                                               u1870 08D6  
                                             u1791 1250                                               u1951 0B60  
                                             u1871 08D2                                               u1880 0906  
                                             u1881 0902                                               u1970 0C3C  
                                             u1890 0936                                               u1971 0C38  
                                             u1891 0932                                               u1980 0C5A  
                                             _PMD0 0039C0                                               u1981 0C56  
                                             _PMD1 0039C1                                               _PMD2 0039C2  
                                             _PMD3 0039C3                                               u1968 0BB2  
                                             _PMD4 0039C4                                               u1969 0BC6  
                                             _PMD5 0039C5                                               _PMD6 0039C6  
                                             _PMD7 0039C7                                               u1998 0CA8  
                                             u1999 0CBC                                               _POST 1C1A  
                                             _WPUA 003A41                                               _WPUB 003A51  
                                             _WPUC 003A61                                               _WPUE 003A81  
              commControl_processEvent@oldCSMState 00BF                                               _main 284A  
                     convertCANid2Reg@passedInEIDH 0065                       convertCANid2Reg@passedInEIDL 0067  
                                 _XF_scheduleTimer 200E                                               fsr1h 003FE2  
                                             fsr2h 003FDA                                               indf2 003FDF  
                                             fsr1l 003FE1                                               fsr2l 003FD9  
                     convertCANid2Reg@passedInSIDH 0069                       convertCANid2Reg@passedInSIDL 006B  
                                             prodh 003FF4                                               prodl 003FF3  
                                             start 001A                                    __end_of_XF_init 19B8  
                                    ??_Event_getId 0062                                       ___param_bank 000000  
                                    ??_Event_setPE 0064                                      ??_Event_setId 0063  
                               XF_scheduleTimer@ev 0063                                 XF_scheduleTimer@tm 0061  
                           __end_of_sendAliveFrame 2B42                                    ButtonSM_init@me 0062  
                                            ??_blc 0062                                      ?_readCANFrame 00A9  
                                            ??_bsm 0062                            __end_of_TMR0_Initialize 291C  
                                            ?_POST 008A                                      _Event_getData 257A  
                   ??_TMR0_DefaultInterruptHandler 0001                commControl_processEvent@oldSSMState 00C0  
                    __end_of_OSCILLATOR_Initialize 2A4E                                   __end_of_LED_init 2AA2  
                                            ?_main 0001                                      ??_Button_init 0066  
                                    ??_Button_read 0062                                    __end_of___awmod 1E3C  
                                            _U1P1H 003DED                                              _U1P2H 003DEF  
                                            _U1P3H 003DF1                                              _U1P1L 003DEC  
                                            _U1P2L 003DEE                                              _U1P3L 003DF0  
                                            _U1UIR 003DF8                                              _U1RXB 003DE8  
                                            _U1TXB 003DEA                                              i2l412 2848  
                                            i2l418 2B46                                              i2l370 2688  
                                            i2l366 2668                              ?_ButtonSM_setObserver 0062  
                                            i2l989 2578                                              _OSCEN 0039DD  
                                            _TMR0H 003FB7                                              _TMR0L 003FB6  
                                    _Event_setData 2732                                              _TRISA 003FC2  
                                            _TRISB 003FC3                                              _TRISC 003FC4  
                        ?_TMR0_SetInterruptHandler 0060                              CAN_receive@tempCanMsg 0073  
                                 __end_of_TMR0_ISR 284A                                              _theXF 00F8  
                                    ?_Button_getId 0060                            _ButtonSM_startBehaviour 1EEC  
                       __end_ofi2_XF_scheduleTimer 2120                               __end_of_XF_pushEvent 17E6  
                                            pclath 003FFA                                              pclatu 003FFB  
                                            plusw0 003FEB                                              plusw1 003FE3  
                                            plusw2 003FDB                        ?_XF_decrementAndQueueTimers 0001  
              convertReg2ExtendedCANid@ConvertedID 006F                                              status 003FD8  
                 _UART1_DefaultFramingErrorHandler 000000                                      _ButtonSM_init 24B4  
                                     __end_of_POST 1CD6                                    __initialization 27AE  
                              Button_init@isPullUp 0065                                  ??_Event_setTarget 0064  
                                       _Event_init 2450                                       __end_of_main 287A  
                                   ??_readCANFrame 00AD                                    ?_sendAliveFrame 0060  
                                   ?_Event_getData 0060                                     Button_getId@me 0060  
                                           ??_POST 0099                        ?_INTERRUPT_InterruptManager 0001  
                                 i2XF_pushEvent@ev 0015                                   i2XF_pushEvent@tm 0028  
                              __end_of_Event_getId 2AB2                                             ??_main 00D4  
                                    _Button_initHW 2B42                                __end_of_Event_setPE 29CE  
                              __end_of_Event_setId 2A8E                                     _sendSpeedFrame 2B3E  
                                   ?_Event_setData 0060                                      __activetblptr 000002  
                     ??_commControl_startBehaviour 00AB                                     _Event_getDelay 297A  
                                      _XF_popEvent 1CD6                                          ??_LED_off 0064  
                              Event_setDelay@delay 0062                                   _UART1_Initialize 2318  
                                ??_ECAN_Initialize 0072                                     ??_Button_getId 0062  
                                           POST@id 008E                                             POST@ev 009A  
                              __end_of_Button_init 28CE                                __end_of_Button_read 1C1A  
                                           _CANCON 003F8F                                   POST@processEvent 008C  
                                           _CIOCON 003700                                             _ANSELA 003A40  
                                           _ANSELB 003A50                                             _ANSELC 003A60  
                                           _T0CON0 003FB8                                             _T0CON1 003FB9  
                                           _U1CON0 003DF2                                             _U1CON1 003DF3  
                                           _U1CON2 003DF4                                             _U1BRGH 003DF6  
                                           _U1FIFO 003DF7                                             _U1BRGL 003DF5  
                                           _RB2PPS 003A0A                                             _ODCONA 003A42  
                                           _ODCONB 003A52                                             _RC6PPS 003A16  
                                           _ODCONC 003A62                                             i2l1016 2A1A  
                                           i2l1019 2A34                                             i2l1056 18D8  
                                           i2l1082 2A78                                             i2l1066 211E  
                                           i2l1069 27AC                                             i2l1086 2A62  
                                           i2l1078 1A8E                                             i2l4001 1E5A  
                                           i2l4011 1E92                                             i2l4003 1E68  
                                           i2l4013 1EA0                                             i2l4021 1ECA  
                                           i2l4005 1E70                                             i2l4023 1EDA  
                                           i2l4015 1EB6                                             i2l4007 1E82  
                                           i2l1368 1EEA                                             i2l4025 1EE2  
                                           i2l4017 1EBE                                             i2l4009 1E8A  
                                           i2l4019 1EC4                                             i2l4151 2774  
                                           i2l4153 277A                                             i2l4161 17FA  
                                           i2l4155 2792                                             i2l4171 187E  
                                           i2l4163 180C                                             i2l4157 27A6  
                                           i2l4181 18C6                                             i2l4173 1894  
                                           i2l4165 1820                                             i2l4183 18D0  
                                           i2l4175 189A                                             i2l4167 1856  
                                           i2l4159 17E6                                             i2l4169 185C  
                                           i2l4185 18D6                                             i2l4179 18A0  
                                           i2l3823 2A66                                             i2l3825 2A76  
                                           i2l4641 19B8                                             _INLVLA 003A44  
                                           _INLVLB 003A54                                             i2l3827 2A50  
                                           i2l4651 1A16                                             _INLVLC 003A64  
                                           i2l3829 2A60                                             i2l4653 1A56  
                                           i2l4741 2646                                             _INLVLE 003A84  
                                           i2l4655 1A64                                             i2l4647 19BC  
                                           i2l4743 2656                                             i2l3961 2564  
                                           i2l3953 2518                                             i2l4649 19DC  
                                           i2l4657 1A7C                                             i2l4681 281C  
                                           i2l3955 2528                                             i2l3963 2A02  
                                           i2l3971 20A0                                             i2l4659 1A7E  
                                           i2l4683 282E                                             i2l4747 2676  
                                           i2l3957 253C                                             i2l3965 2A1C  
                                           i2l3981 20E0                                             i2l4749 2684  
                                           i2l3959 2550                                             i2l3983 2104  
                                           i2l4679 2818                                             i2l3985 2106  
                                           i2l3977 20A4                                             i2l3969 209A  
                                           i2l3993 1E3C                                             i2l3987 2116  
                                           i2l3979 20C4                                             i2l3995 1E40  
                                           i2l3989 211C                                             i2l3997 1E4E  
                                           _TABLAT 003FF5                                             i2l3999 1E56  
                                           _LED_on 2120                                             _OSCFRQ 0039DF  
                                           _RXB0D0 003F86                                             _RXB0D1 003F87  
                                           _RXB0D2 003F88                                             _RXB0D3 003F89  
                                           _RXB1D0 0037F6                                             _RXB0D4 003F8A  
                                           _RXB1D1 0037F7                                             _RXB0D5 003F8B  
                                           _RXB1D2 0037F8                                             _RXB0D6 003F8C  
                                           _RXB1D3 0037F9                                             _RXB0D7 003F8D  
                                           _RXB1D4 0037FA                                             _RXB1D5 0037FB  
                                           _RXB1D6 0037FC                                             _RXB1D7 0037FD  
                                        ??_XF_init 0068                                             _NVMDAT 0039E3  
                                           _TXB0D0 0037E6                                             _TXB0D1 0037E7  
                                           _TXB0D2 0037E8                                             _TXB0D3 0037E9  
                                           _TXB1D0 0037D6                                             _TXB0D4 0037EA  
                                           _TXB1D1 0037D7                                             _TXB0D5 0037EB  
                                           _TXB1D2 0037D8                                             _TXB0D6 0037EC  
                                           _TXB1D3 0037D9                                             _TXB0D7 0037ED  
                                           _TXB2D0 0037C6                                             _TXB1D4 0037DA  
                                           _TXB2D1 0037C7                                             _TXB1D5 0037DB  
                                           _TXB2D2 0037C8                                             _TXB1D6 0037DC  
                                           _TXB2D3 0037C9                                             _TXB1D7 0037DD  
                                           _TXB2D4 0037CA                                             _TXB2D5 0037CB  
                                           _TXB2D6 0037CC                                             _TXB2D7 0037CD  
                                   _Event_setDelay 295E                              _UART1_SetErrorHandler 2B20  
                                   ?_ButtonSM_init 0062                                i2XF_pushEvent@inISR 0024  
                                  i2_LEAVECRITICAL 2A4E                                     _XF_executeOnce 22A4  
                                           ___wmul 287A                                          ??___awmod 0064  
                              ButtonSM_init@button 0064                                   ?_TMR0_Initialize 0001  
                           __end_of_sendSpeedFrame 2B40                                             clear_0 27B6  
                                           clear_1 27C8                                    ___awmod@divisor 0062  
                            _ButtonSM_processEvent 088C                                             isa$std 000001  
                                   ?_Button_initHW 0062                                    ___awmod@counter 0064  
                           ??_ButtonSM_setObserver 0068                             __end_of_Event_getDelay 2996  
                                 __end_of_setBrake 2B3E                                       Event_init@me 0066  
                                 __end_of_setPower 2B3C                                     _PMD_Initialize 291C  
                                __end_ofi2___awmod 1EEC                                   ??_BLControl_init 0064  
                         __end_ofi2_Event_getDelay 2A36                   __end_of_convertReg2StandardCANid 22A4  
                                           tblptru 003FF8                          ??_ButtonSM_startBehaviour 00AB  
                              i2XF_scheduleTimer@i 0014                                     i2___awmod@sign 0006  
         TMR0_SetInterruptHandler@InterruptHandler 0060               __end_of_UART1_SetOverrunErrorHandler 2B16  
                     _UART1_SetOverrunErrorHandler 2B0C                          _UART1_DefaultErrorHandler 000000  
                           __end_of_Event_setDelay 297A                                       _Factory_init 1F80  
                                 XF_pushEvent@temp 0089                                   XF_pushEvent@tmid 0084  
                                _SYSTEM_Initialize 2940                                         __accesstop 0060  
                          __end_of__initialization 27DA                                 ?_SYSTEM_Initialize 0001  
                         __end_ofi2_Event_setDelay 2A1C                           _convertReg2ExtendedCANid 15AC  
                           CAN_receive@returnValue 0075                                    i2_ENTERCRITICAL 2A64  
                                    ___rparam_used 000001                                          ?_LED_init 0062  
                           __end_of_XF_executeOnce 2318                       ButtonSM_setObserver@observer 0064  
                               LEAVECRITICAL@inISR 0060                      fp__XF_decrementAndQueueTimers 0000  
                                 sendAliveFrame@me 0060                                     __pcstackCOMRAM 0001  
                                  ??_Event_getData 0068                                        ?_Event_init 0066  
                                      _Event_getId 2AA2                                ??_SYSTEM_Initialize 0073  
                                      _Event_setPE 29B2                                        _Event_setId 2A7A  
                                        ?_TMR0_ISR 0001                                  Event_setData@data 0062  
                                  ?_sendSpeedFrame 0060                                    ??_Event_setData 006A  
                                       __end_of_cc 2AE8                             __end_of_PMD_Initialize 2940  
                                  ?_Event_getDelay 0060                           __end_of_XF_scheduleTimer 209A  
                                      _Button_init 28A6                                        _Button_read 1B58  
                                        LED_off@me 0062                                  ?_commControl_init 0062  
                          ButtonSM_processEvent@me 00BA                            ButtonSM_processEvent@ev 00B5  
                                     ??_LED_initHW 0068                          _UART1_FramingErrorHandler 00F6  
                               ??_commControl_init 0064                              __end_of_LEAVECRITICAL 29E8  
            convertReg2StandardCANid@tempRXBn_SIDH 0066              convertReg2StandardCANid@tempRXBn_SIDL 0060  
                        __end_of_SYSTEM_Initialize 295E                               __end_of_readCANFrame 1412  
                          __end_ofi2_LEAVECRITICAL 2A64                                     XF_pushEvent@ev 0074  
                                  ?_Event_setDelay 0060                                     XF_pushEvent@tm 0087  
                                       __pbssBANK0 00D4                      ?_UART1_SetOverrunErrorHandler 0060  
                                  ??_ButtonSM_init 0066                             ?_UART1_SetErrorHandler 0060  
                                          ?_LED_on 0062                                 readCANFrame@msgNbr 00B0  
                                  Button_initHW@me 0062                                         __pnvCOMRAM 0031  
                                       ??_LED_init 0065                                 ENTERCRITICAL@inISR 0060  
                                          IVTBASEH 003FD6                                            IVTBASEL 003FD5  
                                          IVTBASEU 003FD7                                    ?_XF_executeOnce 0001  
                                     LED_initHW@me 0066                         __end_of_BLControl_onButton 2732  
                         _commControl_processEvent 001E                        fp__commControl_processEvent 0000  
                 __end_of_TMR0_SetInterruptHandler 2B34                                            ?___wmul 0060  
                                       ??_TMR0_ISR 002F                               __end_of_Button_getId 2AC2  
                               __end_of_LED_initHW 2AD0                                    ??_Button_initHW 0064  
                           ?_ButtonSM_processEvent 00B5                                       _XF_pushEvent 16EA  
                                          _ECANCON 003F91                                            _CANSTAT 003F8E  
                          Event_setPE@processEvent 0062                                    ?_PMD_Initialize 0001  
                                          _BRGCON1 003703                                            _BRGCON2 003704  
                                          _BRGCON3 003705                 __end_of_commControl_startBehaviour 1B58  
                       _commControl_startBehaviour 1A90                                            _U1ERRIE 003DFA  
                                          _U1ERRIR 003DF9                                  Event_setTarget@me 0060  
                        BLControl_onButton@pressed 0069                                            _U1RXPPS 003AE7  
                                          _LED_off 21A4                                          POST@delay 008F  
                                          _OSCCON1 0039D9                                            _OSCCON3 0039DB  
                                          _TBLPTRH 003FF7                                            _TBLPTRL 003FF6  
                                          _TBLPTRU 003FF8                                            _RXB0DLC 003F85  
                                          _RXB1DLC 0037F5                                            _NVMADRH 0039E1  
                                          _NVMADRL 0039E0                                            _OSCTUNE 0039DE  
                            __end_of_ENTERCRITICAL 2A02                                            _NVMCON2 0039E6  
                                          _TXB0DLC 0037E5                                            _SLRCONA 003A43  
                                          _SLRCONB 003A53                                            _TXB1DLC 0037D5  
                                          _SLRCONC 003A63                                            _TXB2DLC 0037C5  
                          __end_ofi2_ENTERCRITICAL 2A7A                                    _Event_setTarget 2996  
                                          _XF_init 18DA                                       storeSetup@me 0060  
                                 ??_sendAliveFrame 0062                                          ?_setBrake 0060  
                                          __Hparam 0000                                          ?_setPower 0060  
                                          __Lparam 0000                           __end_of_UART1_Initialize 2388  
                        ?_convertReg2StandardCANid 0060                                 i2_XF_scheduleTimer 209A  
                                 sendSpeedFrame@me 0060                                            ___awmod 1D8A  
                                  _ECAN_Initialize 1018                                            __pcinit 27AE  
                                          __ramtop 1000                                            __ptext0 284A  
                                          __ptext1 18DA                                            __ptext2 287A  
                                          __ptext3 22A4                                            __ptext4 2388  
                                          __ptext5 088C                                            __ptext6 001E  
                                          __ptext7 2B38                                            __ptext8 2B3A  
                                          __ptext9 2B3C                                ?i2_XF_scheduleTimer 0002  
                                       _theFactory 00D5                              _OSCILLATOR_Initialize 2A36  
                                     ?_XF_popEvent 0066                                   ___awmod@dividend 0060  
                                    Event_getId@me 0060                                   _convertCANid2Reg 1412  
                         ??_PIN_MANAGER_Initialize 0060                                     i2Event_init@me 0001  
                          XF_unscheduleTimer@inISR 0003                                   Event_getDelay@me 0060  
                             end_of_initialization 27DA                                   ?i2_LEAVECRITICAL 0001  
                             ??i2_XF_scheduleTimer 0014                                      Event_setPE@me 0060  
                                    __Lmediumconst 0000                                      Event_setId@me 0060  
                                    ??_CAN_receive 0075                                         ??_setBrake 0062  
                   ??_UART1_SetOverrunErrorHandler 0062                                         ??_setPower 0062  
                                    ?i2_Event_init 0001                               i2XF_scheduleTimer@ev 0004  
                             i2XF_scheduleTimer@tm 0002                                            postdec1 003FE5  
                                          postdec2 003FDD                                            postinc0 003FEE  
                                          postinc1 003FE6                                            postinc2 003FDE  
                            fp__BLControl_onButton 0000                           _TMR0_SetInterruptHandler 2B2A  
                                        _PORTCbits 003FCC                                  XF_pushEvent@inISR 0083  
                                    _Factory_build 28CE                                   XF_popEvent@inISR 0077  
                                    _Factory_start 23EC                             ButtonSM_setObserver@me 0062  
                          __end_of_Event_setTarget 29B2                                  ?i2_Event_getDelay 0001  
                       ??_convertReg2ExtendedCANid 0064                                          i2___awmod 1E3C  
                                 ?i2_ENTERCRITICAL 0001                                 ??i2_Event_getDelay 0003  
                                   __end_of_LED_on 21A4                            __end_of_ECAN_Initialize 1238  
                                ?i2_Event_setDelay 0001                                         _storeSetup 2B38  
                                   ??i2_Event_init 0003                                   ??_sendSpeedFrame 0062  
                                     ??_Event_init 0068                                 ??i2_Event_setDelay 0005  
                                XF_scheduleTimer@i 0073                                       ?_Event_getId 0060  
                                 ??_Event_getDelay 0062                                       ?_Event_setPE 0060  
                                     ?_Event_setId 0060                                 Event_setId@eventID 0062  
                     __end_of_INTERRUPT_Initialize 2B38                                __end_of_CAN_receive 1018  
                                     _readCANFrame 1238                                     __end_of___wmul 28A6  
                           ?_OSCILLATOR_Initialize 0001                                     ?_Factory_build 0001  
                             XF_unscheduleTimer@id 0004                                       ?_Button_init 0062  
                                     ?_Button_read 0060                                     i2_XF_pushEvent 17E6  
                                ?_XF_scheduleTimer 0061                                     ?_Factory_start 0001  
                                    XF_popEvent@ev 0078                                start_initialization 27AE  
                                 ??_Event_setDelay 0064                                 ??_XF_scheduleTimer 0073  
                                      __end_of_blc 2B0C                                        __end_of_bsm 2B00  
                            XF_scheduleTimer@inISR 0072                            ??_UART1_SetErrorHandler 0062  
                                       ?i2___awmod 0001                                       _Button_getId 2AB2  
                                       ivt0x8_base 0008                                 __end_of_Event_init 24B4  
                                _factory_toggleLed 2388                                   ??_XF_executeOnce 00C5  
                                    Button_init@id 0064                                      Button_init@me 0062  
                       __end_of_XF_unscheduleTimer 27AE                                      Button_read@me 0060  
                                         ??_LED_on 0064                         ??_commControl_processEvent 00B7  
                                       LED_init@id 0064                                         LED_init@me 0062  
                             BLControl_onButton@me 0066                                 ?_factory_toggleLed 0001  
              convertReg2StandardCANid@returnValue 0067                                 i2XF_pushEvent@temp 002A  
                               i2XF_pushEvent@tmid 0025                            ??_ButtonSM_processEvent 00B7  
                              ??_factory_toggleLed 00A9                                   ??_PMD_Initialize 0060  
                                         ??___wmul 0064                              __end_of_Event_getData 25DA  
                           __end_ofi2_XF_pushEvent 18DA                        ?_commControl_startBehaviour 00A9  
                         ?_ButtonSM_startBehaviour 00A9                              __end_of_Event_setData 2772  
                                      __pbssBIGRAM 00F8                                 _BLControl_onButton 26EA  
                                         ?_LED_off 0062                        XF_decrementAndQueueTimers@i 002E  
                               _UART1_ErrorHandler 00F2                                   ?_Event_setTarget 0060  
                                    __pcstackBANK0 0060                          __end_of_factory_toggleLed 23EC  
                   ButtonSM_setObserver@observerCB 0066                                          __end_of_b 2AF4  
                                        __end_of_l 2ADC                    XF_decrementAndQueueTimers@dummy 002D  
                              ?_BLControl_onButton 0066                                           LED_on@me 0062  
                                 Event_setDelay@me 0060                                   Button_read@value 0064  
                                         ?_XF_init 0001                              __end_of_ButtonSM_init 2518  
                     ??_XF_decrementAndQueueTimers 002B                                         setBrake@me 0060  
                            _TMR0_InterruptHandler 0031                                          __pnvBANK0 00F2  
                                      _CAN_receive 0D22                                   ?_ECAN_Initialize 0001  
                             i2LEAVECRITICAL@inISR 0001                                        ?_storeSetup 0060  
                           _PIN_MANAGER_Initialize 25DA                           __end_of_convertCANid2Reg 15AC  
                                ?_UART1_Initialize 0001               __end_of_UART1_SetFramingErrorHandler 2B20  
                     _UART1_SetFramingErrorHandler 2B16                                           ?___awmod 0060  
                             ??_BLControl_onButton 006A                                 ??_UART1_Initialize 0062  
                                  ??_Factory_build 0068                                   _uart1RxLastError 00D4  
                                         POST@data 0091                                    ?i2_XF_pushEvent 0015  
                     ??_INTERRUPT_InterruptManager 002F                                    ??_Factory_start 00AC  
                                         POST@tmid 0099                              __end_of_Button_initHW 2B44  
                                      _COMSTATbits 003F90                   _UART1_DefaultOverrunErrorHandler 000000  
                      _ButtonSM_startBehaviour$212 00AB                                         setPower@me 0060  
                                         _CANRXPPS 003AED                         BLControl_onButton@buttonId 0068  
                 __end_of_convertReg2ExtendedCANid 16EA                     convertCANid2Reg@tempPassedInID 0060  
                             __end_ofi2_Event_init 257A                                        ??i2___awmod 0005  
                                      _U1ERRIRbits 003DF9                               _INTERRUPT_Initialize 2B34  
                                ??_TMR0_Initialize 0062                          ButtonSM_startBehaviour@me 00A9  
                                  Event_getData@me 0060                                     ___wmul@product 0064  
            UART1_SetErrorHandler@interruptHandler 0060                                           _LATBbits 003FBB  
                                         _LED_init 2A8E                               i2ENTERCRITICAL@inISR 0001  
                                         _PIE3bits 003993                                           _PIE5bits 003995  
                                         i2u230_48 2834                                           i2u230_49 2848  
                                         i2u224_40 19DC                                           i2u240_40 2656  
                                         i2u224_41 19D8                                           i2u240_41 2652  
                                         i2u225_40 1A16                                           i2u241_40 2664  
                                         i2u225_41 1A12                                           i2u241_41 2660  
                                         i2u170_40 1E82                                           i2u242_40 2676  
                                         i2u170_41 1E7E                                           i2u226_41 1A2C  
                                         i2u242_41 2672                                           i2u171_40 1EA0  
                                         i2u227_40 1A56                                           i2u243_40 2684  
                                         i2u171_41 1E9C                                           i2u227_41 1A52  
                                         i2u243_41 2680                                           i2u172_40 1EB6  
                                         i2u228_40 1A8E                                           i2u164_41 255E  
                                         i2u172_41 1EB2                                           i2u228_41 1A8A  
                                         i2u157_40 2A76                                           i2u165_40 20C4  
                                         i2u173_40 1EDA                                           i2u229_40 282E  
                       ??_TMR0_SetInterruptHandler 0062                                           i2u157_41 2A72  
                                         i2u165_41 20C0                                           i2u173_41 1ED6  
                                         i2u229_41 282A                                           i2u158_40 2A60  
                                         i2u158_41 2A5C                                           i2u166_41 20F6  
                                         i2u167_40 2116                                           i2u183_40 180C  
                                         i2u167_41 2112                                           i2u183_41 1808  
                                         _PIR0bits 0039A0                                           i2u168_40 1E4E  
                                         i2u168_41 1E4A                                           i2u184_41 1832  
                                         i2u169_40 1E68                                           i2u185_40 1894  
                                         i2u169_41 1E64                                           i2u185_41 1890  
                                         i2u186_41 18BC                                           _PIR3bits 0039A3  
                                         XF_init@i 0068                                           _PIR5bits 0039A5  
                                         _RXB0EIDH 003F83                                         POST@target 008A  
                                         _RXB0EIDL 003F84                                           _RXB1EIDH 0037F3  
                                         _RXB1EIDL 0037F4                                           _RXB0SIDH 003F81  
                                         _RXB0SIDL 003F82                                           _RXF0EIDH 0037A2  
                                         _RXB1SIDH 0037F1                                           _RXF0EIDL 0037A3  
                                         _RXB1SIDL 0037F2                                           _RXF1EIDH 0037A6  
                                         _RXF1EIDL 0037A7                                           _RXF2EIDH 0037AA  
                                         _RXF2EIDL 0037AB                                           _RXF3EIDH 0037AE  
                                         _RXF3EIDL 0037AF                                           _RXF4EIDH 0037B2  
                                         _RXF4EIDL 0037B3                                           _RXF5EIDH 0037B6  
                                         _RXF5EIDL 0037B7                                           _RXF0SIDH 0037A0  
                                         _RXF0SIDL 0037A1                                           _RXF1SIDH 0037A4  
                                         _TXB0EIDH 0037E3                                           _TXB0EIDL 0037E4  
                                         _RXF1SIDL 0037A5                                           _RXF2SIDH 0037A8  
                                         _TXB1EIDH 0037D3                                           _TXB1EIDL 0037D4  
                                         _RXF2SIDL 0037A9                                           _RXF3SIDH 0037AC  
                                         _TXB2EIDH 0037C3                                           _TXB2EIDL 0037C4  
                                         _RXF3SIDL 0037AD                                           _RXF4SIDH 0037B0  
                                         _RXF4SIDL 0037B1                                           _TMR0_ISR 2818  
                                         _RXF5SIDH 0037B4                                           _RXF5SIDL 0037B5  
                  __end_of_ButtonSM_startBehaviour 1F80                                           _RXM0EIDH 0037BA  
                                         _RXM0EIDL 0037BB                                           _RXM1EIDH 0037BE  
                                         _TXB0SIDH 0037E1                                           _RXM1EIDL 0037BF  
                                         _TXB0SIDL 0037E2                                           _TXB1SIDH 0037D1  
                                         _TXB1SIDL 0037D2                                           _TXB2SIDH 0037C1  
                                         _TXB2SIDL 0037C2                       commControl_startBehaviour@me 00A9  
                                         _RXM0SIDH 0037B8                                           _RXM0SIDL 0037B9  
                                         _RXM1SIDH 0037BC                                           _RXM1SIDL 0037BD  
                    ?_UART1_SetFramingErrorHandler 0060                              Event_setTarget@target 0062  
                                ___wmul@multiplier 0060                            i2XF_scheduleTimer@inISR 0013  
                                 XF_executeOnce@ev 00C5                                      storeSetup@msg 0062  
                                      _INTCON0bits 003FD2                                      _LEAVECRITICAL 29CE  
                            ?_INTERRUPT_Initialize 0001                                      ?_Factory_init 0001  
                 __end_of_commControl_processEvent 088C                                 i2___awmod@dividend 0001  
                                  readCANFrame@cip 00B1                                   _commControl_init 2696  
                                  readCANFrame@msg 00AB                           _convertReg2StandardCANid 2228  
                                  readCANFrame@src 00AF              convertReg2ExtendedCANid@tempRXBn_EIDH 0068  
            convertReg2ExtendedCANid@tempRXBn_EIDL 0060                                 i2Event_getDelay@me 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0061              convertReg2ExtendedCANid@tempRXBn_SIDL 0062  
                                         __Hrparam 0000                                           __Lrparam 0000  
                        convertCANid2Reg@canIdType 0064                            ??_OSCILLATOR_Initialize 0060  
                commControl_processEvent@processed 00C2  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 006E  
                                  Event_setData@me 0060  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 006D  
                          convertCANid2Reg@wipSIDL 0071                                         _T0CON0bits 003FB8  
                                         __pivt0x8 0008                                           __ptext10 2B3E  
                                         __ptext11 2B40                                           __ptext20 26EA  
                                         __ptext12 1238                                           __ptext21 2120  
                                         __ptext13 0D22                                           __ptext30 25DA  
                                         __ptext22 2940                                           __ptext14 2228  
                                         __ptext31 2A36                                           __ptext23 2318  
                                         __ptext15 15AC                                           __ptext40 1D8A  
                                         __ptext32 2B34                                           __ptext24 2B0C  
                                         __ptext16 257A                                           __ptext41 200E  
                                         __ptext33 1018                                           __ptext25 2B16  
                                         __ptext17 1CD6                                           __ptext50 2450  
                                         __ptext42 29CE                                           __ptext34 1412  
                                         __ptext26 2B20                                           __ptext18 2AA2  
                                         __ptext51 1B58                                           __ptext43 29E8  
                                         __ptext35 23EC                                           __ptext27 28F6  
                                         __ptext19 2AB2                                           __ptext60 2B42  
                                         __ptext52 1F80                                           __ptext44 295E  
                                         __ptext36 1A90                                           __ptext28 2B2A  
                                         __ptext61 28A6                                           __ptext53 2AD0  
                                         __ptext45 297A                                           __ptext37 1EEC  
                                         __ptext29 291C                                           __ptext70 2B46  
                                         __ptext62 24B4                                           __ptext54 2696  
                                         __ptext46 2996                                           __ptext38 1C1A  
                                         __ptext71 19B8                                           __ptext63 2B44  
                                         __ptext55 2ADC                                           __ptext47 29B2  
                                         __ptext39 16EA                                           __ptext80 2A64  
                                         __ptext72 17E6                                           __ptext64 28CE  
                                         __ptext56 2AE8                                           __ptext48 2A7A  
                                         __ptext81 0000                                           __ptext73 1E3C  
                                         __ptext65 2AF4                                           __ptext57 2AC2  
                                         __ptext49 2732                                           __ptext74 209A  
                                         __ptext66 2B00                                           __ptext58 21A4  
                                         __ptext75 2A02                                           __ptext67 27E4  
                                         __ptext59 2A8E                                           __ptext76 2A1C  
                                         __ptext68 263A                                           __ptext77 2772  
                                         __ptext69 2818                                           __ptext78 2A4E  
                                         __ptext79 2518                                     ?_LEAVECRITICAL 0001  
                                    _ENTERCRITICAL 29E8                                     ??_Factory_init 0068  
                                       _U1CON0bits 003DF2                      __end_of_UART1_SetErrorHandler 2B2A  
              convertReg2StandardCANid@ConvertedID 006B                 __end_of_XF_decrementAndQueueTimers 1A90  
                       _XF_decrementAndQueueTimers 19B8                                     _BLControl_init 2B44  
                     __end_of_ButtonSM_setObserver 2818               __end_of_TMR0_DefaultInterruptHandler 2B48  
                     _TMR0_DefaultInterruptHandler 2B46                convertReg2ExtendedCANid@returnValue 0069  
                                         _setBrake 2B3C                                           _setPower 2B3A  
                        _UART1_OverrunErrorHandler 00F4       UART1_SetOverrunErrorHandler@interruptHandler 0060  
                                         isa$xinst 000000                          ?_convertReg2ExtendedCANid 0060  
                               _XF_unscheduleTimer 2772                      __end_of_ButtonSM_processEvent 0D22  
                                    ?_XF_pushEvent 0074                 __end_of_INTERRUPT_InterruptManager 2696  
                       _INTERRUPT_InterruptManager 263A                                ?_XF_unscheduleTimer 0003  
                                      _RXB0CONbits 003F80                                  i2___awmod@divisor 0003  
                   ??_UART1_SetFramingErrorHandler 0062                                        _RXB1CONbits 0037F0  
                                i2___awmod@counter 0005                                     readCANFrame@me 00A9  
                                      _NVMCON1bits 0039E5                                         _LED_initHW 2AC2  
                                   ?_ENTERCRITICAL 0001                             ??_INTERRUPT_Initialize 0060  
                           __end_of_BLControl_init 2B46                                           intlevel2 0000  
                          ?_PIN_MANAGER_Initialize 0001                               ??_XF_unscheduleTimer 0004  
                                      _TXB0CONbits 0037E0                                       ?_CAN_receive 0073  
                                      _TXB1CONbits 0037D0                                        _TXB2CONbits 0037C0  
                                     ??_storeSetup 0064                    fp__TMR0_DefaultInterruptHandler 0000  
                    ?_TMR0_DefaultInterruptHandler 0001                                   ??i2_XF_pushEvent 0027  
                                ?_convertCANid2Reg 0060                                       i2_Event_init 2518  
                                   ??_XF_pushEvent 0086       UART1_SetFramingErrorHandler@interruptHandler 0060  
                               ??_convertCANid2Reg 006D                          ?_commControl_processEvent 00B5  
                                ??i2_LEAVECRITICAL 0001                         commControl_processEvent@me 00C3  
                       commControl_processEvent@ev 00B5                                 commControl_init@me 0062  
                                    ??_XF_popEvent 0075                                    _TMR0_Initialize 28F6  
                            i2Event_setDelay@delay 0003                                    ??_LEAVECRITICAL 0060  
                               __end_of_storeSetup 2B3A                                   BLControl_init@me 0062  
                                  ?_BLControl_init 0062                     __end_of_PIN_MANAGER_Initialize 263A  
                    ButtonSM_processEvent@oldState 00B9                                 i2Event_setDelay@me 0001  
                                 i2_Event_getDelay 2A1C  
